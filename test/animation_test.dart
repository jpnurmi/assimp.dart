import 'dart:ffi';
import 'dart:typed_data';
import 'package:ffi/ffi.dart';
import 'package:test/test.dart';
import 'package:assimp/assimp.dart';
import 'package:assimp/src/bindings.dart';
import 'test_utils.dart';

// DO NOT EDIT (generated by tool/testgen)

void main() {
  prepareTest();

  test('size', () {
    expect(sizeOf<aiAnimation>(), equals(1096));
  });

  test('equals', () {
    final a = Animation.fromNative(calloc<aiAnimation>());
    final b = Animation.fromNative(calloc<aiAnimation>());
    expect(a, equals(a));
    expect(b, equals(b));
    expect(a, isNot(equals(b)));
    expect(b, isNot(equals(a)));
  });

  test('toString', () {
    expect(Animation.fromNative(calloc<aiAnimation>()).toString(), matches(r'Animation\(Pointer<aiAnimation>: address=0x[0-f]+\)'));
  });

  test('3mf', () {
    testScene('box.3mf', (scene) {
      final animations = scene.animations;
      expect(animations, isEmpty);
      expect(animations.length, isZero);
    });
    testScene('spider.3mf', (scene) {
      final animations = scene.animations;
      expect(animations, isEmpty);
      expect(animations.length, isZero);
    });
  });

  test('fbx', () {
    testScene('huesitos.fbx', (scene) {
      final animations = scene.animations;
      expect(animations, isNotEmpty);
      expect(animations.length, equals(1));
      final animation_0 = animations.elementAt(0);
      expect(animation_0.name, equals('Armature|Action'));
      expect(animation_0.duration, moreOrLessEquals(39));
      expect(animation_0.ticksPerSecond, moreOrLessEquals(25));
      expect(animation_0.channels.length, equals(10));
      final  channel_0_0 = animation_0.channels.elementAt(0);
      expect(channel_0_0.positionKeys.length, equals(2));
      final positionKey_0_0_0 = channel_0_0.positionKeys.elementAt(0);
      expect(positionKey_0_0_0.time, isZero);
      expect(positionKey_0_0_0.value, vector3MoreOrLessEquals(Vector3(-4.02399921, 0, -307.135376)));
      final positionKey_0_0_1 = channel_0_0.positionKeys.elementAt(1);
      expect(positionKey_0_0_1.time, moreOrLessEquals(39));
      expect(positionKey_0_0_1.value, vector3MoreOrLessEquals(Vector3(-4.02399921, 0, -307.135376)));
      expect(channel_0_0.rotationKeys.length, equals(2));
      final rotationKey_0_0_0 = channel_0_0.rotationKeys.elementAt(0);
      expect(rotationKey_0_0_0.time, isZero);
      expect(rotationKey_0_0_0.value, quaternionMoreOrLessEquals(Quaternion(-0.707106709, 0, 0, 0)));
      final rotationKey_0_0_1 = channel_0_0.rotationKeys.elementAt(1);
      expect(rotationKey_0_0_1.time, moreOrLessEquals(39));
      expect(rotationKey_0_0_1.value, quaternionMoreOrLessEquals(Quaternion(-0.707106709, 0, 0, 0)));
      expect(channel_0_0.scalingKeys.length, equals(2));
      final scalingKey_0_0_0 = channel_0_0.scalingKeys.elementAt(0);
      expect(scalingKey_0_0_0.time, isZero);
      expect(scalingKey_0_0_0.value, vector3MoreOrLessEquals(Vector3(100, 99.9999924, 99.9999924)));
      final scalingKey_0_0_1 = channel_0_0.scalingKeys.elementAt(1);
      expect(scalingKey_0_0_1.time, moreOrLessEquals(39));
      expect(scalingKey_0_0_1.value, vector3MoreOrLessEquals(Vector3(100, 99.9999924, 99.9999924)));
      expect(channel_0_0.preState, equals(AnimBehavior.defaults));
      expect(channel_0_0.postState, equals(AnimBehavior.defaults));
      final  channel_0_1 = animation_0.channels.elementAt(1);
      expect(channel_0_1.positionKeys.length, equals(11));
      final positionKey_0_1_0 = channel_0_1.positionKeys.elementAt(0);
      expect(positionKey_0_1_0.time, isZero);
      expect(positionKey_0_1_0.value, vector3MoreOrLessEquals(Vector3(5.96046448e-08, -1.1920929e-07, 0)));
      final positionKey_0_1_1 = channel_0_1.positionKeys.elementAt(1);
      expect(positionKey_0_1_1.time, moreOrLessEquals(30));
      expect(positionKey_0_1_1.value, vector3MoreOrLessEquals(Vector3(5.96046448e-08, -1.1920929e-07, 0)));
      final positionKey_0_1_2 = channel_0_1.positionKeys.elementAt(2);
      expect(positionKey_0_1_2.time, moreOrLessEquals(31));
      expect(positionKey_0_1_2.value, vector3MoreOrLessEquals(Vector3(5.96046448e-08, -1.1920929e-07, 0)));
      final positionKey_0_1_3 = channel_0_1.positionKeys.elementAt(3);
      expect(positionKey_0_1_3.time, moreOrLessEquals(32));
      expect(positionKey_0_1_3.value, vector3MoreOrLessEquals(Vector3(5.96046448e-08, -1.1920929e-07, 0)));
      final positionKey_0_1_4 = channel_0_1.positionKeys.elementAt(4);
      expect(positionKey_0_1_4.time, moreOrLessEquals(33));
      expect(positionKey_0_1_4.value, vector3MoreOrLessEquals(Vector3(5.96046448e-08, -1.1920929e-07, 0)));
      final positionKey_0_1_5 = channel_0_1.positionKeys.elementAt(5);
      expect(positionKey_0_1_5.time, moreOrLessEquals(34));
      expect(positionKey_0_1_5.value, vector3MoreOrLessEquals(Vector3(5.96046448e-08, -1.1920929e-07, 0)));
      final positionKey_0_1_6 = channel_0_1.positionKeys.elementAt(6);
      expect(positionKey_0_1_6.time, moreOrLessEquals(35));
      expect(positionKey_0_1_6.value, vector3MoreOrLessEquals(Vector3(5.96046448e-08, -1.1920929e-07, 0)));
      final positionKey_0_1_7 = channel_0_1.positionKeys.elementAt(7);
      expect(positionKey_0_1_7.time, moreOrLessEquals(36));
      expect(positionKey_0_1_7.value, vector3MoreOrLessEquals(Vector3(5.96046448e-08, -1.1920929e-07, 0)));
      final positionKey_0_1_8 = channel_0_1.positionKeys.elementAt(8);
      expect(positionKey_0_1_8.time, moreOrLessEquals(37));
      expect(positionKey_0_1_8.value, vector3MoreOrLessEquals(Vector3(5.96046448e-08, -1.1920929e-07, 0)));
      final positionKey_0_1_9 = channel_0_1.positionKeys.elementAt(9);
      expect(positionKey_0_1_9.time, moreOrLessEquals(38));
      expect(positionKey_0_1_9.value, vector3MoreOrLessEquals(Vector3(5.96046448e-08, -1.1920929e-07, 0)));
      final positionKey_0_1_10 = channel_0_1.positionKeys.elementAt(10);
      expect(positionKey_0_1_10.time, moreOrLessEquals(39));
      expect(positionKey_0_1_10.value, vector3MoreOrLessEquals(Vector3(5.96046448e-08, -1.1920929e-07, 0)));
      expect(channel_0_1.rotationKeys.length, equals(11));
      final rotationKey_0_1_0 = channel_0_1.rotationKeys.elementAt(0);
      expect(rotationKey_0_1_0.time, isZero);
      expect(rotationKey_0_1_0.value, quaternionMoreOrLessEquals(Quaternion(0.707106709, 0, 0, 0)));
      final rotationKey_0_1_1 = channel_0_1.rotationKeys.elementAt(1);
      expect(rotationKey_0_1_1.time, moreOrLessEquals(30));
      expect(rotationKey_0_1_1.value, quaternionMoreOrLessEquals(Quaternion(0.707106709, 0, 0, 0)));
      final rotationKey_0_1_2 = channel_0_1.rotationKeys.elementAt(2);
      expect(rotationKey_0_1_2.time, moreOrLessEquals(31));
      expect(rotationKey_0_1_2.value, quaternionMoreOrLessEquals(Quaternion(0.709752381, 0, 0, 0)));
      final rotationKey_0_1_3 = channel_0_1.rotationKeys.elementAt(3);
      expect(rotationKey_0_1_3.time, moreOrLessEquals(32));
      expect(rotationKey_0_1_3.value, quaternionMoreOrLessEquals(Quaternion(0.717637122, 0, 0, 0)));
      final rotationKey_0_1_4 = channel_0_1.rotationKeys.elementAt(4);
      expect(rotationKey_0_1_4.time, moreOrLessEquals(33));
      expect(rotationKey_0_1_4.value, quaternionMoreOrLessEquals(Quaternion(0.730124831, 0, 0, 0)));
      final rotationKey_0_1_5 = channel_0_1.rotationKeys.elementAt(5);
      expect(rotationKey_0_1_5.time, moreOrLessEquals(34));
      expect(rotationKey_0_1_5.value, quaternionMoreOrLessEquals(Quaternion(0.745685875, 0, 0, 0)));
      final rotationKey_0_1_6 = channel_0_1.rotationKeys.elementAt(6);
      expect(rotationKey_0_1_6.time, moreOrLessEquals(35));
      expect(rotationKey_0_1_6.value, quaternionMoreOrLessEquals(Quaternion(0.762039244, 0, 0, 0)));
      final rotationKey_0_1_7 = channel_0_1.rotationKeys.elementAt(7);
      expect(rotationKey_0_1_7.time, moreOrLessEquals(36));
      expect(rotationKey_0_1_7.value, quaternionMoreOrLessEquals(Quaternion(0.776767612, 0, 0, 0)));
      final rotationKey_0_1_8 = channel_0_1.rotationKeys.elementAt(8);
      expect(rotationKey_0_1_8.time, moreOrLessEquals(37));
      expect(rotationKey_0_1_8.value, quaternionMoreOrLessEquals(Quaternion(0.788040876, 0, 0, 0)));
      final rotationKey_0_1_9 = channel_0_1.rotationKeys.elementAt(9);
      expect(rotationKey_0_1_9.time, moreOrLessEquals(38));
      expect(rotationKey_0_1_9.value, quaternionMoreOrLessEquals(Quaternion(0.794921577, 0, 0, 0)));
      final rotationKey_0_1_10 = channel_0_1.rotationKeys.elementAt(10);
      expect(rotationKey_0_1_10.time, moreOrLessEquals(39));
      expect(rotationKey_0_1_10.value, quaternionMoreOrLessEquals(Quaternion(0.797190607, 0, 0, 0)));
      expect(channel_0_1.scalingKeys.length, equals(11));
      final scalingKey_0_1_0 = channel_0_1.scalingKeys.elementAt(0);
      expect(scalingKey_0_1_0.time, isZero);
      expect(scalingKey_0_1_0.value, vector3MoreOrLessEquals(Vector3(1, 0.99999994, 0.99999994)));
      final scalingKey_0_1_1 = channel_0_1.scalingKeys.elementAt(1);
      expect(scalingKey_0_1_1.time, moreOrLessEquals(30));
      expect(scalingKey_0_1_1.value, vector3MoreOrLessEquals(Vector3(1, 0.99999994, 0.99999994)));
      final scalingKey_0_1_2 = channel_0_1.scalingKeys.elementAt(2);
      expect(scalingKey_0_1_2.time, moreOrLessEquals(31));
      expect(scalingKey_0_1_2.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_1_3 = channel_0_1.scalingKeys.elementAt(3);
      expect(scalingKey_0_1_3.time, moreOrLessEquals(32));
      expect(scalingKey_0_1_3.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_1_4 = channel_0_1.scalingKeys.elementAt(4);
      expect(scalingKey_0_1_4.time, moreOrLessEquals(33));
      expect(scalingKey_0_1_4.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_1_5 = channel_0_1.scalingKeys.elementAt(5);
      expect(scalingKey_0_1_5.time, moreOrLessEquals(34));
      expect(scalingKey_0_1_5.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_1_6 = channel_0_1.scalingKeys.elementAt(6);
      expect(scalingKey_0_1_6.time, moreOrLessEquals(35));
      expect(scalingKey_0_1_6.value, vector3MoreOrLessEquals(Vector3(1, 0.99999994, 0.99999994)));
      final scalingKey_0_1_7 = channel_0_1.scalingKeys.elementAt(7);
      expect(scalingKey_0_1_7.time, moreOrLessEquals(36));
      expect(scalingKey_0_1_7.value, vector3MoreOrLessEquals(Vector3(1, 0.99999994, 0.99999994)));
      final scalingKey_0_1_8 = channel_0_1.scalingKeys.elementAt(8);
      expect(scalingKey_0_1_8.time, moreOrLessEquals(37));
      expect(scalingKey_0_1_8.value, vector3MoreOrLessEquals(Vector3(1, 0.99999994, 0.99999994)));
      final scalingKey_0_1_9 = channel_0_1.scalingKeys.elementAt(9);
      expect(scalingKey_0_1_9.time, moreOrLessEquals(38));
      expect(scalingKey_0_1_9.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_1_10 = channel_0_1.scalingKeys.elementAt(10);
      expect(scalingKey_0_1_10.time, moreOrLessEquals(39));
      expect(scalingKey_0_1_10.value, vector3MoreOrLessEquals(Vector3(1, 0.99999994, 0.99999994)));
      expect(channel_0_1.preState, equals(AnimBehavior.defaults));
      expect(channel_0_1.postState, equals(AnimBehavior.defaults));
      final  channel_0_2 = animation_0.channels.elementAt(2);
      expect(channel_0_2.positionKeys.length, equals(40));
      final positionKey_0_2_0 = channel_0_2.positionKeys.elementAt(0);
      expect(positionKey_0_2_0.time, isZero);
      expect(positionKey_0_2_0.value, vector3MoreOrLessEquals(Vector3(0, 0.705010355, 3.55271368e-15)));
      final positionKey_0_2_1 = channel_0_2.positionKeys.elementAt(1);
      expect(positionKey_0_2_1.time, moreOrLessEquals(1));
      expect(positionKey_0_2_1.value, vector3MoreOrLessEquals(Vector3(-6.69833334e-19, 0.705010355, -2.67673633e-10)));
      final positionKey_0_2_2 = channel_0_2.positionKeys.elementAt(2);
      expect(positionKey_0_2_2.time, moreOrLessEquals(2));
      expect(positionKey_0_2_2.value, vector3MoreOrLessEquals(Vector3(-1.33966667e-18, 0.705010355, -5.35350819e-10)));
      final positionKey_0_2_3 = channel_0_2.positionKeys.elementAt(3);
      expect(positionKey_0_2_3.time, moreOrLessEquals(3));
      expect(positionKey_0_2_3.value, vector3MoreOrLessEquals(Vector3(-2.00950005e-18, 0.705010355, -8.03028033e-10)));
      final positionKey_0_2_4 = channel_0_2.positionKeys.elementAt(4);
      expect(positionKey_0_2_4.time, moreOrLessEquals(4));
      expect(positionKey_0_2_4.value, vector3MoreOrLessEquals(Vector3(-2.67933334e-18, 0.705010355, -1.07070519e-09)));
      final positionKey_0_2_5 = channel_0_2.positionKeys.elementAt(5);
      expect(positionKey_0_2_5.time, moreOrLessEquals(5));
      expect(positionKey_0_2_5.value, vector3MoreOrLessEquals(Vector3(-3.34916662e-18, 0.705010355, -1.3383824e-09)));
      final positionKey_0_2_6 = channel_0_2.positionKeys.elementAt(6);
      expect(positionKey_0_2_6.time, moreOrLessEquals(6));
      expect(positionKey_0_2_6.value, vector3MoreOrLessEquals(Vector3(-4.01900011e-18, 0.705010355, -1.60605962e-09)));
      final positionKey_0_2_7 = channel_0_2.positionKeys.elementAt(7);
      expect(positionKey_0_2_7.time, moreOrLessEquals(7));
      expect(positionKey_0_2_7.value, vector3MoreOrLessEquals(Vector3(-4.6888336e-18, 0.705010355, -1.87373694e-09)));
      final positionKey_0_2_8 = channel_0_2.positionKeys.elementAt(8);
      expect(positionKey_0_2_8.time, moreOrLessEquals(8));
      expect(positionKey_0_2_8.value, vector3MoreOrLessEquals(Vector3(-5.35866667e-18, 0.705010355, -2.14141394e-09)));
      final positionKey_0_2_9 = channel_0_2.positionKeys.elementAt(9);
      expect(positionKey_0_2_9.time, moreOrLessEquals(9));
      expect(positionKey_0_2_9.value, vector3MoreOrLessEquals(Vector3(-6.02850016e-18, 0.705010355, -2.40909115e-09)));
      final positionKey_0_2_10 = channel_0_2.positionKeys.elementAt(10);
      expect(positionKey_0_2_10.time, moreOrLessEquals(10));
      expect(positionKey_0_2_10.value, vector3MoreOrLessEquals(Vector3(-6.69833324e-18, 0.705010355, -2.67676836e-09)));
      final positionKey_0_2_11 = channel_0_2.positionKeys.elementAt(11);
      expect(positionKey_0_2_11.time, moreOrLessEquals(11));
      expect(positionKey_0_2_11.value, vector3MoreOrLessEquals(Vector3(-7.36816673e-18, 0.705010355, -2.94444558e-09)));
      final positionKey_0_2_12 = channel_0_2.positionKeys.elementAt(12);
      expect(positionKey_0_2_12.time, moreOrLessEquals(12));
      expect(positionKey_0_2_12.value, vector3MoreOrLessEquals(Vector3(-8.03800022e-18, 0.705010355, -3.21212279e-09)));
      final positionKey_0_2_13 = channel_0_2.positionKeys.elementAt(13);
      expect(positionKey_0_2_13.time, moreOrLessEquals(13));
      expect(positionKey_0_2_13.value, vector3MoreOrLessEquals(Vector3(-8.70783371e-18, 0.705010355, -3.4798e-09)));
      final positionKey_0_2_14 = channel_0_2.positionKeys.elementAt(14);
      expect(positionKey_0_2_14.time, moreOrLessEquals(14));
      expect(positionKey_0_2_14.value, vector3MoreOrLessEquals(Vector3(-9.3776672e-18, 0.705010355, -3.74747744e-09)));
      final positionKey_0_2_15 = channel_0_2.positionKeys.elementAt(15);
      expect(positionKey_0_2_15.time, moreOrLessEquals(15));
      expect(positionKey_0_2_15.value, vector3MoreOrLessEquals(Vector3(-1.00474999e-17, 0.705010355, -4.01515443e-09)));
      final positionKey_0_2_16 = channel_0_2.positionKeys.elementAt(16);
      expect(positionKey_0_2_16.time, moreOrLessEquals(16));
      expect(positionKey_0_2_16.value, vector3MoreOrLessEquals(Vector3(-1.07173333e-17, 0.705010355, -4.28283142e-09)));
      final positionKey_0_2_17 = channel_0_2.positionKeys.elementAt(17);
      expect(positionKey_0_2_17.time, moreOrLessEquals(17));
      expect(positionKey_0_2_17.value, vector3MoreOrLessEquals(Vector3(-1.13871668e-17, 0.705010355, -4.55050886e-09)));
      final positionKey_0_2_18 = channel_0_2.positionKeys.elementAt(18);
      expect(positionKey_0_2_18.time, moreOrLessEquals(18));
      expect(positionKey_0_2_18.value, vector3MoreOrLessEquals(Vector3(-1.20570003e-17, 0.705010355, -4.81818585e-09)));
      final positionKey_0_2_19 = channel_0_2.positionKeys.elementAt(19);
      expect(positionKey_0_2_19.time, moreOrLessEquals(19));
      expect(positionKey_0_2_19.value, vector3MoreOrLessEquals(Vector3(-1.27268338e-17, 0.705010355, -5.08586329e-09)));
      final positionKey_0_2_20 = channel_0_2.positionKeys.elementAt(20);
      expect(positionKey_0_2_20.time, moreOrLessEquals(20));
      expect(positionKey_0_2_20.value, vector3MoreOrLessEquals(Vector3(-1.33966665e-17, 0.705010355, -5.35354028e-09)));
      final positionKey_0_2_21 = channel_0_2.positionKeys.elementAt(21);
      expect(positionKey_0_2_21.time, moreOrLessEquals(21));
      expect(positionKey_0_2_21.value, vector3MoreOrLessEquals(Vector3(-1.40665008e-17, 0.705010355, -5.62121727e-09)));
      final positionKey_0_2_22 = channel_0_2.positionKeys.elementAt(22);
      expect(positionKey_0_2_22.time, moreOrLessEquals(22));
      expect(positionKey_0_2_22.value, vector3MoreOrLessEquals(Vector3(-1.47363335e-17, 0.705010355, -5.88889471e-09)));
      final positionKey_0_2_23 = channel_0_2.positionKeys.elementAt(23);
      expect(positionKey_0_2_23.time, moreOrLessEquals(23));
      expect(positionKey_0_2_23.value, vector3MoreOrLessEquals(Vector3(-1.54061661e-17, 0.705010355, -6.1565717e-09)));
      final positionKey_0_2_24 = channel_0_2.positionKeys.elementAt(24);
      expect(positionKey_0_2_24.time, moreOrLessEquals(24));
      expect(positionKey_0_2_24.value, vector3MoreOrLessEquals(Vector3(-1.60760004e-17, 0.705010355, -6.42424913e-09)));
      final positionKey_0_2_25 = channel_0_2.positionKeys.elementAt(25);
      expect(positionKey_0_2_25.time, moreOrLessEquals(25));
      expect(positionKey_0_2_25.value, vector3MoreOrLessEquals(Vector3(-1.67458331e-17, 0.705010355, -6.69192612e-09)));
      final positionKey_0_2_26 = channel_0_2.positionKeys.elementAt(26);
      expect(positionKey_0_2_26.time, moreOrLessEquals(26));
      expect(positionKey_0_2_26.value, vector3MoreOrLessEquals(Vector3(-1.74156674e-17, 0.705010355, -6.95960356e-09)));
      final positionKey_0_2_27 = channel_0_2.positionKeys.elementAt(27);
      expect(positionKey_0_2_27.time, moreOrLessEquals(27));
      expect(positionKey_0_2_27.value, vector3MoreOrLessEquals(Vector3(-1.80855001e-17, 0.705010355, -7.22728055e-09)));
      final positionKey_0_2_28 = channel_0_2.positionKeys.elementAt(28);
      expect(positionKey_0_2_28.time, moreOrLessEquals(28));
      expect(positionKey_0_2_28.value, vector3MoreOrLessEquals(Vector3(-1.87553344e-17, 0.705010355, -7.49495843e-09)));
      final positionKey_0_2_29 = channel_0_2.positionKeys.elementAt(29);
      expect(positionKey_0_2_29.time, moreOrLessEquals(29));
      expect(positionKey_0_2_29.value, vector3MoreOrLessEquals(Vector3(-1.94251671e-17, 0.705010355, -7.76263498e-09)));
      final positionKey_0_2_30 = channel_0_2.positionKeys.elementAt(30);
      expect(positionKey_0_2_30.time, moreOrLessEquals(30));
      expect(positionKey_0_2_30.value, vector3MoreOrLessEquals(Vector3(-2.00949997e-17, 0.705010355, -8.03031242e-09)));
      final positionKey_0_2_31 = channel_0_2.positionKeys.elementAt(31);
      expect(positionKey_0_2_31.time, moreOrLessEquals(31));
      expect(positionKey_0_2_31.value, vector3MoreOrLessEquals(Vector3(-2.07648357e-17, 0.705010355, -8.29798985e-09)));
      final positionKey_0_2_32 = channel_0_2.positionKeys.elementAt(32);
      expect(positionKey_0_2_32.time, moreOrLessEquals(32));
      expect(positionKey_0_2_32.value, vector3MoreOrLessEquals(Vector3(-2.14346667e-17, 0.705010355, -8.5656664e-09)));
      final positionKey_0_2_33 = channel_0_2.positionKeys.elementAt(33);
      expect(positionKey_0_2_33.time, moreOrLessEquals(33));
      expect(positionKey_0_2_33.value, vector3MoreOrLessEquals(Vector3(-2.2104501e-17, 0.705010355, -8.83334383e-09)));
      final positionKey_0_2_34 = channel_0_2.positionKeys.elementAt(34);
      expect(positionKey_0_2_34.time, moreOrLessEquals(34));
      expect(positionKey_0_2_34.value, vector3MoreOrLessEquals(Vector3(-2.27743337e-17, 0.705010355, -9.10102127e-09)));
      final positionKey_0_2_35 = channel_0_2.positionKeys.elementAt(35);
      expect(positionKey_0_2_35.time, moreOrLessEquals(35));
      expect(positionKey_0_2_35.value, vector3MoreOrLessEquals(Vector3(-2.34441663e-17, 0.705010355, -9.36869782e-09)));
      final positionKey_0_2_36 = channel_0_2.positionKeys.elementAt(36);
      expect(positionKey_0_2_36.time, moreOrLessEquals(36));
      expect(positionKey_0_2_36.value, vector3MoreOrLessEquals(Vector3(-2.41140007e-17, 0.705010355, -9.63637525e-09)));
      final positionKey_0_2_37 = channel_0_2.positionKeys.elementAt(37);
      expect(positionKey_0_2_37.time, moreOrLessEquals(37));
      expect(positionKey_0_2_37.value, vector3MoreOrLessEquals(Vector3(-2.47838333e-17, 0.705010355, -9.90405269e-09)));
      final positionKey_0_2_38 = channel_0_2.positionKeys.elementAt(38);
      expect(positionKey_0_2_38.time, moreOrLessEquals(38));
      expect(positionKey_0_2_38.value, vector3MoreOrLessEquals(Vector3(-2.54536676e-17, 0.705010355, -1.01717301e-08)));
      final positionKey_0_2_39 = channel_0_2.positionKeys.elementAt(39);
      expect(positionKey_0_2_39.time, moreOrLessEquals(39));
      expect(positionKey_0_2_39.value, vector3MoreOrLessEquals(Vector3(-2.61235019e-17, 0.705010355, -1.04394076e-08)));
      expect(channel_0_2.rotationKeys.length, equals(40));
      final rotationKey_0_2_0 = channel_0_2.rotationKeys.elementAt(0);
      expect(rotationKey_0_2_0.time, isZero);
      expect(rotationKey_0_2_0.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0, 0)));
      final rotationKey_0_2_1 = channel_0_2.rotationKeys.elementAt(1);
      expect(rotationKey_0_2_1.time, moreOrLessEquals(1));
      expect(rotationKey_0_2_1.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0.00364701566, 0.00364701566)));
      final rotationKey_0_2_2 = channel_0_2.rotationKeys.elementAt(2);
      expect(rotationKey_0_2_2.time, moreOrLessEquals(2));
      expect(rotationKey_0_2_2.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0.0146271391, 0.0146271391)));
      final rotationKey_0_2_3 = channel_0_2.rotationKeys.elementAt(3);
      expect(rotationKey_0_2_3.time, moreOrLessEquals(3));
      expect(rotationKey_0_2_3.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0.0324881785, 0.0324881785)));
      final rotationKey_0_2_4 = channel_0_2.rotationKeys.elementAt(4);
      expect(rotationKey_0_2_4.time, moreOrLessEquals(4));
      expect(rotationKey_0_2_4.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0.0558461472, 0.0558461472)));
      final rotationKey_0_2_5 = channel_0_2.rotationKeys.elementAt(5);
      expect(rotationKey_0_2_5.time, moreOrLessEquals(5));
      expect(rotationKey_0_2_5.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0.0822713897, 0.0822713897)));
      final rotationKey_0_2_6 = channel_0_2.rotationKeys.elementAt(6);
      expect(rotationKey_0_2_6.time, moreOrLessEquals(6));
      expect(rotationKey_0_2_6.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0.108629882, 0.108629882)));
      final rotationKey_0_2_7 = channel_0_2.rotationKeys.elementAt(7);
      expect(rotationKey_0_2_7.time, moreOrLessEquals(7));
      expect(rotationKey_0_2_7.value, quaternionMoreOrLessEquals(Quaternion(-1.59117206e-10, 1.19638544e-09, 0.131837383, 0.131837383)));
      final rotationKey_0_2_8 = channel_0_2.rotationKeys.elementAt(8);
      expect(rotationKey_0_2_8.time, moreOrLessEquals(8));
      expect(rotationKey_0_2_8.value, quaternionMoreOrLessEquals(Quaternion(-2.06320808e-10, 1.36381939e-09, 0.149579689, 0.149579689)));
      final rotationKey_0_2_9 = channel_0_2.rotationKeys.elementAt(9);
      expect(rotationKey_0_2_9.time, moreOrLessEquals(9));
      expect(rotationKey_0_2_9.value, quaternionMoreOrLessEquals(Quaternion(-2.49186477e-10, 1.53161639e-09, 0.16058369, 0.16058369)));
      final rotationKey_0_2_10 = channel_0_2.rotationKeys.elementAt(10);
      expect(rotationKey_0_2_10.time, moreOrLessEquals(10));
      expect(rotationKey_0_2_10.value, quaternionMoreOrLessEquals(Quaternion(-2.83543161e-10, 1.70069758e-09, 0.164451778, 0.164451778)));
      final rotationKey_0_2_11 = channel_0_2.rotationKeys.elementAt(11);
      expect(rotationKey_0_2_11.time, moreOrLessEquals(11));
      expect(rotationKey_0_2_11.value, quaternionMoreOrLessEquals(Quaternion(-2.94414715e-10, 1.87359794e-09, 0.155233845, 0.155233845)));
      final rotationKey_0_2_12 = channel_0_2.rotationKeys.elementAt(12);
      expect(rotationKey_0_2_12.time, moreOrLessEquals(12));
      expect(rotationKey_0_2_12.value, quaternionMoreOrLessEquals(Quaternion(-2.61701605e-10, 2.05238848e-09, 0.126486644, 0.126486644)));
      final rotationKey_0_2_13 = channel_0_2.rotationKeys.elementAt(13);
      expect(rotationKey_0_2_13.time, moreOrLessEquals(13));
      expect(rotationKey_0_2_13.value, quaternionMoreOrLessEquals(Quaternion(-1.76227269e-10, 2.23448482e-09, 0.0786229298, 0.0786229298)));
      final rotationKey_0_2_14 = channel_0_2.rotationKeys.elementAt(14);
      expect(rotationKey_0_2_14.time, moreOrLessEquals(14));
      expect(rotationKey_0_2_14.value, quaternionMoreOrLessEquals(Quaternion(-3.55590592e-11, 2.41357889e-09, 0.0147313224, 0.0147313224)));
      final rotationKey_0_2_15 = channel_0_2.rotationKeys.elementAt(15);
      expect(rotationKey_0_2_15.time, moreOrLessEquals(15));
      expect(rotationKey_0_2_15.value, quaternionMoreOrLessEquals(Quaternion(1.50969154e-10, 2.5818474e-09, -0.0583735965, -0.0583735965)));
      final rotationKey_0_2_16 = channel_0_2.rotationKeys.elementAt(16);
      expect(rotationKey_0_2_16.time, moreOrLessEquals(16));
      expect(rotationKey_0_2_16.value, quaternionMoreOrLessEquals(Quaternion(3.61549207e-10, 2.73487966e-09, -0.131059051, -0.131059051)));
      final rotationKey_0_2_17 = channel_0_2.rotationKeys.elementAt(17);
      expect(rotationKey_0_2_17.time, moreOrLessEquals(17));
      expect(rotationKey_0_2_17.value, quaternionMoreOrLessEquals(Quaternion(5.68423697e-10, 2.87544699e-09, -0.193928972, -0.193928972)));
      final rotationKey_0_2_18 = channel_0_2.rotationKeys.elementAt(18);
      expect(rotationKey_0_2_18.time, moreOrLessEquals(18));
      expect(rotationKey_0_2_18.value, quaternionMoreOrLessEquals(Quaternion(7.47007289e-10, 3.01226644e-09, -0.240697652, -0.240697652)));
      final rotationKey_0_2_19 = channel_0_2.rotationKeys.elementAt(19);
      expect(rotationKey_0_2_19.time, moreOrLessEquals(19));
      expect(rotationKey_0_2_19.value, quaternionMoreOrLessEquals(Quaternion(8.80442941e-10, 3.15539439e-09, -0.268761486, -0.268761486)));
      final rotationKey_0_2_20 = channel_0_2.rotationKeys.elementAt(20);
      expect(rotationKey_0_2_20.time, moreOrLessEquals(20));
      expect(rotationKey_0_2_20.value, quaternionMoreOrLessEquals(Quaternion(9.58483182e-10, 3.3124592e-09, -0.277954698, -0.277954698)));
      final rotationKey_0_2_21 = channel_0_2.rotationKeys.elementAt(21);
      expect(rotationKey_0_2_21.time, moreOrLessEquals(21));
      expect(rotationKey_0_2_21.value, quaternionMoreOrLessEquals(Quaternion(9.90513893e-10, 3.48264173e-09, -0.273565084, -0.273565084)));
      final rotationKey_0_2_22 = channel_0_2.rotationKeys.elementAt(22);
      expect(rotationKey_0_2_22.time, moreOrLessEquals(22));
      expect(rotationKey_0_2_22.value, quaternionMoreOrLessEquals(Quaternion(9.87285365e-10, 3.66243968e-09, -0.260279208, -0.260279208)));
      final rotationKey_0_2_23 = channel_0_2.rotationKeys.elementAt(23);
      expect(rotationKey_0_2_23.time, moreOrLessEquals(23));
      expect(rotationKey_0_2_23.value, quaternionMoreOrLessEquals(Quaternion(9.45655887e-10, 3.85119225e-09, -0.238465041, -0.238465041)));
      final rotationKey_0_2_24 = channel_0_2.rotationKeys.elementAt(24);
      expect(rotationKey_0_2_24.time, moreOrLessEquals(24));
      expect(rotationKey_0_2_24.value, quaternionMoreOrLessEquals(Quaternion(8.67255878e-10, 4.046111e-09, -0.209582731, -0.209582731)));
      final rotationKey_0_2_25 = channel_0_2.rotationKeys.elementAt(25);
      expect(rotationKey_0_2_25.time, moreOrLessEquals(25));
      expect(rotationKey_0_2_25.value, quaternionMoreOrLessEquals(Quaternion(7.60547347e-10, 4.24280211e-09, -0.176443517, -0.176443517)));
      final rotationKey_0_2_26 = channel_0_2.rotationKeys.elementAt(26);
      expect(rotationKey_0_2_26.time, moreOrLessEquals(26));
      expect(rotationKey_0_2_26.value, quaternionMoreOrLessEquals(Quaternion(6.40598297e-10, 4.43684023e-09, -0.142899886, -0.142899886)));
      final rotationKey_0_2_27 = channel_0_2.rotationKeys.elementAt(27);
      expect(rotationKey_0_2_27.time, moreOrLessEquals(27));
      expect(rotationKey_0_2_27.value, quaternionMoreOrLessEquals(Quaternion(5.25657573e-10, 4.6254911e-09, -0.112916812, -0.112916812)));
      final rotationKey_0_2_28 = channel_0_2.rotationKeys.elementAt(28);
      expect(rotationKey_0_2_28.time, moreOrLessEquals(28));
      expect(rotationKey_0_2_28.value, quaternionMoreOrLessEquals(Quaternion(4.32457153e-10, 4.80827334e-09, -0.0895786434, -0.0895786434)));
      final rotationKey_0_2_29 = channel_0_2.rotationKeys.elementAt(29);
      expect(rotationKey_0_2_29.time, moreOrLessEquals(29));
      expect(rotationKey_0_2_29.value, quaternionMoreOrLessEquals(Quaternion(3.73200332e-10, 4.98615105e-09, -0.0746386051, -0.0746386051)));
      final rotationKey_0_2_30 = channel_0_2.rotationKeys.elementAt(30);
      expect(rotationKey_0_2_30.time, moreOrLessEquals(30));
      expect(rotationKey_0_2_30.value, quaternionMoreOrLessEquals(Quaternion(3.55218271e-10, 5.16030374e-09, -0.0686741918, -0.0686741918)));
      final rotationKey_0_2_31 = channel_0_2.rotationKeys.elementAt(31);
      expect(rotationKey_0_2_31.time, moreOrLessEquals(31));
      expect(rotationKey_0_2_31.value, quaternionMoreOrLessEquals(Quaternion(0.0105316471, 0.000724812795, -0.0674022436, -0.0674022436)));
      final rotationKey_0_2_32 = channel_0_2.rotationKeys.elementAt(32);
      expect(rotationKey_0_2_32.time, moreOrLessEquals(32));
      expect(rotationKey_0_2_32.value, quaternionMoreOrLessEquals(Quaternion(0.0423550159, 0.00291561615, -0.0665507168, -0.0665507168)));
      final rotationKey_0_2_33 = channel_0_2.rotationKeys.elementAt(33);
      expect(rotationKey_0_2_33.time, moreOrLessEquals(33));
      expect(rotationKey_0_2_33.value, quaternionMoreOrLessEquals(Quaternion(0.0939770564, 0.00647034636, -0.066002734, -0.066002734)));
      final rotationKey_0_2_34 = channel_0_2.rotationKeys.elementAt(34);
      expect(rotationKey_0_2_34.time, moreOrLessEquals(34));
      expect(rotationKey_0_2_34.value, quaternionMoreOrLessEquals(Quaternion(0.160017341, 0.0110184411, -0.0655663386, -0.0655663386)));
      final rotationKey_0_2_35 = channel_0_2.rotationKeys.elementAt(35);
      expect(rotationKey_0_2_35.time, moreOrLessEquals(35));
      expect(rotationKey_0_2_35.value, quaternionMoreOrLessEquals(Quaternion(0.230797559, 0.0158924349, -0.0650727674, -0.0650727674)));
      final rotationKey_0_2_36 = channel_0_2.rotationKeys.elementAt(36);
      expect(rotationKey_0_2_36.time, moreOrLessEquals(36));
      expect(rotationKey_0_2_36.value, quaternionMoreOrLessEquals(Quaternion(0.295040339, 0.0203147028, -0.0644894019, -0.0644894019)));
      final rotationKey_0_2_37 = channel_0_2.rotationKeys.elementAt(37);
      expect(rotationKey_0_2_37.time, moreOrLessEquals(37));
      expect(rotationKey_0_2_37.value, quaternionMoreOrLessEquals(Quaternion(0.344078332, 0.0236885529, -0.0639264733, -0.0639264733)));
      final rotationKey_0_2_38 = channel_0_2.rotationKeys.elementAt(38);
      expect(rotationKey_0_2_38.time, moreOrLessEquals(38));
      expect(rotationKey_0_2_38.value, quaternionMoreOrLessEquals(Quaternion(0.373798907, 0.0257321876, -0.063532345, -0.063532345)));
      final rotationKey_0_2_39 = channel_0_2.rotationKeys.elementAt(39);
      expect(rotationKey_0_2_39.time, moreOrLessEquals(39));
      expect(rotationKey_0_2_39.value, quaternionMoreOrLessEquals(Quaternion(0.383550018, 0.0264023263, -0.0633960739, -0.0633960739)));
      expect(channel_0_2.scalingKeys.length, equals(40));
      final scalingKey_0_2_0 = channel_0_2.scalingKeys.elementAt(0);
      expect(scalingKey_0_2_0.time, isZero);
      expect(scalingKey_0_2_0.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_2_1 = channel_0_2.scalingKeys.elementAt(1);
      expect(scalingKey_0_2_1.time, moreOrLessEquals(1));
      expect(scalingKey_0_2_1.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_2_2 = channel_0_2.scalingKeys.elementAt(2);
      expect(scalingKey_0_2_2.time, moreOrLessEquals(2));
      expect(scalingKey_0_2_2.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_2_3 = channel_0_2.scalingKeys.elementAt(3);
      expect(scalingKey_0_2_3.time, moreOrLessEquals(3));
      expect(scalingKey_0_2_3.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_2_4 = channel_0_2.scalingKeys.elementAt(4);
      expect(scalingKey_0_2_4.time, moreOrLessEquals(4));
      expect(scalingKey_0_2_4.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_2_5 = channel_0_2.scalingKeys.elementAt(5);
      expect(scalingKey_0_2_5.time, moreOrLessEquals(5));
      expect(scalingKey_0_2_5.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_2_6 = channel_0_2.scalingKeys.elementAt(6);
      expect(scalingKey_0_2_6.time, moreOrLessEquals(6));
      expect(scalingKey_0_2_6.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_2_7 = channel_0_2.scalingKeys.elementAt(7);
      expect(scalingKey_0_2_7.time, moreOrLessEquals(7));
      expect(scalingKey_0_2_7.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_2_8 = channel_0_2.scalingKeys.elementAt(8);
      expect(scalingKey_0_2_8.time, moreOrLessEquals(8));
      expect(scalingKey_0_2_8.value, vector3MoreOrLessEquals(Vector3(0.99999994, 0.99999994, 1)));
      final scalingKey_0_2_9 = channel_0_2.scalingKeys.elementAt(9);
      expect(scalingKey_0_2_9.time, moreOrLessEquals(9));
      expect(scalingKey_0_2_9.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_2_10 = channel_0_2.scalingKeys.elementAt(10);
      expect(scalingKey_0_2_10.time, moreOrLessEquals(10));
      expect(scalingKey_0_2_10.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_2_11 = channel_0_2.scalingKeys.elementAt(11);
      expect(scalingKey_0_2_11.time, moreOrLessEquals(11));
      expect(scalingKey_0_2_11.value, vector3MoreOrLessEquals(Vector3(0.99999994, 0.99999994, 1)));
      final scalingKey_0_2_12 = channel_0_2.scalingKeys.elementAt(12);
      expect(scalingKey_0_2_12.time, moreOrLessEquals(12));
      expect(scalingKey_0_2_12.value, vector3MoreOrLessEquals(Vector3(0.99999994, 0.99999994, 1)));
      final scalingKey_0_2_13 = channel_0_2.scalingKeys.elementAt(13);
      expect(scalingKey_0_2_13.time, moreOrLessEquals(13));
      expect(scalingKey_0_2_13.value, vector3MoreOrLessEquals(Vector3(0.99999994, 0.99999994, 1)));
      final scalingKey_0_2_14 = channel_0_2.scalingKeys.elementAt(14);
      expect(scalingKey_0_2_14.time, moreOrLessEquals(14));
      expect(scalingKey_0_2_14.value, vector3MoreOrLessEquals(Vector3(0.99999994, 0.99999994, 1)));
      final scalingKey_0_2_15 = channel_0_2.scalingKeys.elementAt(15);
      expect(scalingKey_0_2_15.time, moreOrLessEquals(15));
      expect(scalingKey_0_2_15.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_2_16 = channel_0_2.scalingKeys.elementAt(16);
      expect(scalingKey_0_2_16.time, moreOrLessEquals(16));
      expect(scalingKey_0_2_16.value, vector3MoreOrLessEquals(Vector3(0.99999994, 0.99999994, 1)));
      final scalingKey_0_2_17 = channel_0_2.scalingKeys.elementAt(17);
      expect(scalingKey_0_2_17.time, moreOrLessEquals(17));
      expect(scalingKey_0_2_17.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_2_18 = channel_0_2.scalingKeys.elementAt(18);
      expect(scalingKey_0_2_18.time, moreOrLessEquals(18));
      expect(scalingKey_0_2_18.value, vector3MoreOrLessEquals(Vector3(0.99999994, 0.99999994, 1)));
      final scalingKey_0_2_19 = channel_0_2.scalingKeys.elementAt(19);
      expect(scalingKey_0_2_19.time, moreOrLessEquals(19));
      expect(scalingKey_0_2_19.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_2_20 = channel_0_2.scalingKeys.elementAt(20);
      expect(scalingKey_0_2_20.time, moreOrLessEquals(20));
      expect(scalingKey_0_2_20.value, vector3MoreOrLessEquals(Vector3(0.99999994, 0.99999994, 1)));
      final scalingKey_0_2_21 = channel_0_2.scalingKeys.elementAt(21);
      expect(scalingKey_0_2_21.time, moreOrLessEquals(21));
      expect(scalingKey_0_2_21.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_2_22 = channel_0_2.scalingKeys.elementAt(22);
      expect(scalingKey_0_2_22.time, moreOrLessEquals(22));
      expect(scalingKey_0_2_22.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_2_23 = channel_0_2.scalingKeys.elementAt(23);
      expect(scalingKey_0_2_23.time, moreOrLessEquals(23));
      expect(scalingKey_0_2_23.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_2_24 = channel_0_2.scalingKeys.elementAt(24);
      expect(scalingKey_0_2_24.time, moreOrLessEquals(24));
      expect(scalingKey_0_2_24.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_2_25 = channel_0_2.scalingKeys.elementAt(25);
      expect(scalingKey_0_2_25.time, moreOrLessEquals(25));
      expect(scalingKey_0_2_25.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_2_26 = channel_0_2.scalingKeys.elementAt(26);
      expect(scalingKey_0_2_26.time, moreOrLessEquals(26));
      expect(scalingKey_0_2_26.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_2_27 = channel_0_2.scalingKeys.elementAt(27);
      expect(scalingKey_0_2_27.time, moreOrLessEquals(27));
      expect(scalingKey_0_2_27.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_2_28 = channel_0_2.scalingKeys.elementAt(28);
      expect(scalingKey_0_2_28.time, moreOrLessEquals(28));
      expect(scalingKey_0_2_28.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_2_29 = channel_0_2.scalingKeys.elementAt(29);
      expect(scalingKey_0_2_29.time, moreOrLessEquals(29));
      expect(scalingKey_0_2_29.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_2_30 = channel_0_2.scalingKeys.elementAt(30);
      expect(scalingKey_0_2_30.time, moreOrLessEquals(30));
      expect(scalingKey_0_2_30.value, vector3MoreOrLessEquals(Vector3(0.99999994, 0.99999994, 1)));
      final scalingKey_0_2_31 = channel_0_2.scalingKeys.elementAt(31);
      expect(scalingKey_0_2_31.time, moreOrLessEquals(31));
      expect(scalingKey_0_2_31.value, vector3MoreOrLessEquals(Vector3(0.99999994, 1, 1)));
      final scalingKey_0_2_32 = channel_0_2.scalingKeys.elementAt(32);
      expect(scalingKey_0_2_32.time, moreOrLessEquals(32));
      expect(scalingKey_0_2_32.value, vector3MoreOrLessEquals(Vector3(0.99999994, 1, 1)));
      final scalingKey_0_2_33 = channel_0_2.scalingKeys.elementAt(33);
      expect(scalingKey_0_2_33.time, moreOrLessEquals(33));
      expect(scalingKey_0_2_33.value, vector3MoreOrLessEquals(Vector3(0.99999994, 1, 1)));
      final scalingKey_0_2_34 = channel_0_2.scalingKeys.elementAt(34);
      expect(scalingKey_0_2_34.time, moreOrLessEquals(34));
      expect(scalingKey_0_2_34.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_2_35 = channel_0_2.scalingKeys.elementAt(35);
      expect(scalingKey_0_2_35.time, moreOrLessEquals(35));
      expect(scalingKey_0_2_35.value, vector3MoreOrLessEquals(Vector3(0.99999994, 0.99999994, 1)));
      final scalingKey_0_2_36 = channel_0_2.scalingKeys.elementAt(36);
      expect(scalingKey_0_2_36.time, moreOrLessEquals(36));
      expect(scalingKey_0_2_36.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_2_37 = channel_0_2.scalingKeys.elementAt(37);
      expect(scalingKey_0_2_37.time, moreOrLessEquals(37));
      expect(scalingKey_0_2_37.value, vector3MoreOrLessEquals(Vector3(1, 1, 0.99999994)));
      final scalingKey_0_2_38 = channel_0_2.scalingKeys.elementAt(38);
      expect(scalingKey_0_2_38.time, moreOrLessEquals(38));
      expect(scalingKey_0_2_38.value, vector3MoreOrLessEquals(Vector3(0.99999994, 1, 1)));
      final scalingKey_0_2_39 = channel_0_2.scalingKeys.elementAt(39);
      expect(scalingKey_0_2_39.time, moreOrLessEquals(39));
      expect(scalingKey_0_2_39.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      expect(channel_0_2.preState, equals(AnimBehavior.defaults));
      expect(channel_0_2.postState, equals(AnimBehavior.defaults));
      final  channel_0_3 = animation_0.channels.elementAt(3);
      expect(channel_0_3.positionKeys.length, equals(2));
      final positionKey_0_3_0 = channel_0_3.positionKeys.elementAt(0);
      expect(positionKey_0_3_0.time, isZero);
      expect(positionKey_0_3_0.value, vector3MoreOrLessEquals(Vector3(0, 1.40687382, 1.42108547e-14)));
      final positionKey_0_3_1 = channel_0_3.positionKeys.elementAt(1);
      expect(positionKey_0_3_1.time, moreOrLessEquals(39));
      expect(positionKey_0_3_1.value, vector3MoreOrLessEquals(Vector3(1.49011612e-08, 1.4068737, -2.15443641e-09)));
      expect(channel_0_3.rotationKeys.length, equals(2));
      final rotationKey_0_3_0 = channel_0_3.rotationKeys.elementAt(0);
      expect(rotationKey_0_3_0.time, isZero);
      expect(rotationKey_0_3_0.value, quaternionMoreOrLessEquals(Quaternion(-0.580099642, -0.404332131, -0.40433225, -0.40433225)));
      final rotationKey_0_3_1 = channel_0_3.rotationKeys.elementAt(1);
      expect(rotationKey_0_3_1.time, moreOrLessEquals(39));
      expect(rotationKey_0_3_1.value, quaternionMoreOrLessEquals(Quaternion(-0.580099463, -0.404332161, -0.404332101, -0.404332101)));
      expect(channel_0_3.scalingKeys.length, equals(2));
      final scalingKey_0_3_0 = channel_0_3.scalingKeys.elementAt(0);
      expect(scalingKey_0_3_0.time, isZero);
      expect(scalingKey_0_3_0.value, vector3MoreOrLessEquals(Vector3(1.00000012, 1.00000012, 1.00000012)));
      final scalingKey_0_3_1 = channel_0_3.scalingKeys.elementAt(1);
      expect(scalingKey_0_3_1.time, moreOrLessEquals(39));
      expect(scalingKey_0_3_1.value, vector3MoreOrLessEquals(Vector3(0.999999881, 0.99999994, 0.999999881)));
      expect(channel_0_3.preState, equals(AnimBehavior.defaults));
      expect(channel_0_3.postState, equals(AnimBehavior.defaults));
      final  channel_0_4 = animation_0.channels.elementAt(4);
      expect(channel_0_4.positionKeys.length, equals(21));
      final positionKey_0_4_0 = channel_0_4.positionKeys.elementAt(0);
      expect(positionKey_0_4_0.time, isZero);
      expect(positionKey_0_4_0.value, vector3MoreOrLessEquals(Vector3(0, 1.40687382, 1.42108547e-14)));
      final positionKey_0_4_1 = channel_0_4.positionKeys.elementAt(1);
      expect(positionKey_0_4_1.time, moreOrLessEquals(1));
      expect(positionKey_0_4_1.value, vector3MoreOrLessEquals(Vector3(3.82081033e-10, 1.40687382, -5.52281103e-11)));
      final positionKey_0_4_2 = channel_0_4.positionKeys.elementAt(2);
      expect(positionKey_0_4_2.time, moreOrLessEquals(2));
      expect(positionKey_0_4_2.value, vector3MoreOrLessEquals(Vector3(7.64162067e-10, 1.40687382, -1.10470431e-10)));
      final positionKey_0_4_3 = channel_0_4.positionKeys.elementAt(3);
      expect(positionKey_0_4_3.time, moreOrLessEquals(3));
      expect(positionKey_0_4_3.value, vector3MoreOrLessEquals(Vector3(1.1462431e-09, 1.40687382, -1.65712749e-10)));
      final positionKey_0_4_4 = channel_0_4.positionKeys.elementAt(4);
      expect(positionKey_0_4_4.time, moreOrLessEquals(4));
      expect(positionKey_0_4_4.value, vector3MoreOrLessEquals(Vector3(1.52832413e-09, 1.40687382, -2.20955074e-10)));
      final positionKey_0_4_5 = channel_0_4.positionKeys.elementAt(5);
      expect(positionKey_0_4_5.time, moreOrLessEquals(5));
      expect(positionKey_0_4_5.value, vector3MoreOrLessEquals(Vector3(1.91040517e-09, 1.40687382, -2.76197398e-10)));
      final positionKey_0_4_6 = channel_0_4.positionKeys.elementAt(6);
      expect(positionKey_0_4_6.time, moreOrLessEquals(6));
      expect(positionKey_0_4_6.value, vector3MoreOrLessEquals(Vector3(2.2924862e-09, 1.40687382, -3.31439709e-10)));
      final positionKey_0_4_7 = channel_0_4.positionKeys.elementAt(7);
      expect(positionKey_0_4_7.time, moreOrLessEquals(7));
      expect(positionKey_0_4_7.value, vector3MoreOrLessEquals(Vector3(2.67456746e-09, 1.40687382, -3.86682075e-10)));
      final positionKey_0_4_8 = channel_0_4.positionKeys.elementAt(8);
      expect(positionKey_0_4_8.time, moreOrLessEquals(8));
      expect(positionKey_0_4_8.value, vector3MoreOrLessEquals(Vector3(3.05664827e-09, 1.40687382, -4.41924358e-10)));
      final positionKey_0_4_9 = channel_0_4.positionKeys.elementAt(9);
      expect(positionKey_0_4_9.time, moreOrLessEquals(9));
      expect(positionKey_0_4_9.value, vector3MoreOrLessEquals(Vector3(3.4387293e-09, 1.40687382, -4.97166697e-10)));
      final positionKey_0_4_10 = channel_0_4.positionKeys.elementAt(10);
      expect(positionKey_0_4_10.time, moreOrLessEquals(10));
      expect(positionKey_0_4_10.value, vector3MoreOrLessEquals(Vector3(3.82081033e-09, 1.40687382, -5.52409007e-10)));
      final positionKey_0_4_11 = channel_0_4.positionKeys.elementAt(11);
      expect(positionKey_0_4_11.time, moreOrLessEquals(30));
      expect(positionKey_0_4_11.value, vector3MoreOrLessEquals(Vector3(1.1462431e-08, 1.4068737, -1.65725544e-09)));
      final positionKey_0_4_12 = channel_0_4.positionKeys.elementAt(12);
      expect(positionKey_0_4_12.time, moreOrLessEquals(31));
      expect(positionKey_0_4_12.value, vector3MoreOrLessEquals(Vector3(1.18445129e-08, 1.4068737, -1.71249781e-09)));
      final positionKey_0_4_13 = channel_0_4.positionKeys.elementAt(13);
      expect(positionKey_0_4_13.time, moreOrLessEquals(32));
      expect(positionKey_0_4_13.value, vector3MoreOrLessEquals(Vector3(1.22265931e-08, 1.4068737, -1.76774007e-09)));
      final positionKey_0_4_14 = channel_0_4.positionKeys.elementAt(14);
      expect(positionKey_0_4_14.time, moreOrLessEquals(33));
      expect(positionKey_0_4_14.value, vector3MoreOrLessEquals(Vector3(1.26086741e-08, 1.4068737, -1.82298232e-09)));
      final positionKey_0_4_15 = channel_0_4.positionKeys.elementAt(15);
      expect(positionKey_0_4_15.time, moreOrLessEquals(34));
      expect(positionKey_0_4_15.value, vector3MoreOrLessEquals(Vector3(1.29907551e-08, 1.4068737, -1.87822469e-09)));
      final positionKey_0_4_16 = channel_0_4.positionKeys.elementAt(16);
      expect(positionKey_0_4_16.time, moreOrLessEquals(35));
      expect(positionKey_0_4_16.value, vector3MoreOrLessEquals(Vector3(1.33728362e-08, 1.4068737, -1.93346694e-09)));
      final positionKey_0_4_17 = channel_0_4.positionKeys.elementAt(17);
      expect(positionKey_0_4_17.time, moreOrLessEquals(36));
      expect(positionKey_0_4_17.value, vector3MoreOrLessEquals(Vector3(1.37549172e-08, 1.4068737, -1.98870942e-09)));
      final positionKey_0_4_18 = channel_0_4.positionKeys.elementAt(18);
      expect(positionKey_0_4_18.time, moreOrLessEquals(37));
      expect(positionKey_0_4_18.value, vector3MoreOrLessEquals(Vector3(1.41369982e-08, 1.4068737, -2.04395167e-09)));
      final positionKey_0_4_19 = channel_0_4.positionKeys.elementAt(19);
      expect(positionKey_0_4_19.time, moreOrLessEquals(38));
      expect(positionKey_0_4_19.value, vector3MoreOrLessEquals(Vector3(1.45190793e-08, 1.4068737, -2.09919393e-09)));
      final positionKey_0_4_20 = channel_0_4.positionKeys.elementAt(20);
      expect(positionKey_0_4_20.time, moreOrLessEquals(39));
      expect(positionKey_0_4_20.value, vector3MoreOrLessEquals(Vector3(1.49011612e-08, 1.4068737, -2.15443641e-09)));
      expect(channel_0_4.rotationKeys.length, equals(21));
      final rotationKey_0_4_0 = channel_0_4.rotationKeys.elementAt(0);
      expect(rotationKey_0_4_0.time, isZero);
      expect(rotationKey_0_4_0.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0, 0)));
      final rotationKey_0_4_1 = channel_0_4.rotationKeys.elementAt(1);
      expect(rotationKey_0_4_1.time, moreOrLessEquals(1));
      expect(rotationKey_0_4_1.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0.00379574462, 0.00379574462)));
      final rotationKey_0_4_2 = channel_0_4.rotationKeys.elementAt(2);
      expect(rotationKey_0_4_2.time, moreOrLessEquals(2));
      expect(rotationKey_0_4_2.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0.0152319325, 0.0152319325)));
      final rotationKey_0_4_3 = channel_0_4.rotationKeys.elementAt(3);
      expect(rotationKey_0_4_3.time, moreOrLessEquals(3));
      expect(rotationKey_0_4_3.value, quaternionMoreOrLessEquals(Quaternion(4.30973902e-11, -1.27213995e-09, 0.0338584483, 0.0338584483)));
      final rotationKey_0_4_4 = channel_0_4.rotationKeys.elementAt(4);
      expect(rotationKey_0_4_4.time, moreOrLessEquals(4));
      expect(rotationKey_0_4_4.value, quaternionMoreOrLessEquals(Quaternion(9.88647983e-11, -1.69427761e-09, 0.0582530908, 0.0582530908)));
      final rotationKey_0_4_5 = channel_0_4.rotationKeys.elementAt(5);
      expect(rotationKey_0_4_5.time, moreOrLessEquals(5));
      expect(rotationKey_0_4_5.value, quaternionMoreOrLessEquals(Quaternion(1.82194523e-10, -2.11361173e-09, 0.0858821049, 0.0858821049)));
      final rotationKey_0_4_6 = channel_0_4.rotationKeys.elementAt(6);
      expect(rotationKey_0_4_6.time, moreOrLessEquals(6));
      expect(rotationKey_0_4_6.value, quaternionMoreOrLessEquals(Quaternion(2.88799568e-10, -2.52930521e-09, 0.113444261, 0.113444261)));
      final rotationKey_0_4_7 = channel_0_4.rotationKeys.elementAt(7);
      expect(rotationKey_0_4_7.time, moreOrLessEquals(7));
      expect(rotationKey_0_4_7.value, quaternionMoreOrLessEquals(Quaternion(4.08881623e-10, -2.94174951e-09, 0.137669221, 0.137669221)));
      final rotationKey_0_4_8 = channel_0_4.rotationKeys.elementAt(8);
      expect(rotationKey_0_4_8.time, moreOrLessEquals(8));
      expect(rotationKey_0_4_8.value, quaternionMoreOrLessEquals(Quaternion(5.29841115e-10, -3.352711e-09, 0.156096429, 0.156096429)));
      final rotationKey_0_4_9 = channel_0_4.rotationKeys.elementAt(9);
      expect(rotationKey_0_4_9.time, moreOrLessEquals(9));
      expect(rotationKey_0_4_9.value, quaternionMoreOrLessEquals(Quaternion(6.39160724e-10, -3.76473785e-09, 0.167380527, 0.167380527)));
      final rotationKey_0_4_10 = channel_0_4.rotationKeys.elementAt(10);
      expect(rotationKey_0_4_10.time, moreOrLessEquals(10));
      expect(rotationKey_0_4_10.value, quaternionMoreOrLessEquals(Quaternion(7.26047944e-10, -4.18031698e-09, 0.171120703, 0.171120703)));
      final rotationKey_0_4_11 = channel_0_4.rotationKeys.elementAt(11);
      expect(rotationKey_0_4_11.time, moreOrLessEquals(30));
      expect(rotationKey_0_4_11.value, quaternionMoreOrLessEquals(Quaternion(-4.37527792e-12, -1.29192568e-08, 0.170787171, 0.170787171)));
      final rotationKey_0_4_12 = channel_0_4.rotationKeys.elementAt(12);
      expect(rotationKey_0_4_12.time, moreOrLessEquals(31));
      expect(rotationKey_0_4_12.value, quaternionMoreOrLessEquals(Quaternion(0.00497904234, -0.000173648863, 0.170773283, 0.170773283)));
      final rotationKey_0_4_13 = channel_0_4.rotationKeys.elementAt(13);
      expect(rotationKey_0_4_13.time, moreOrLessEquals(32));
      expect(rotationKey_0_4_13.value, quaternionMoreOrLessEquals(Quaternion(0.0199403465, -0.000694277813, 0.17079851, 0.17079851)));
      final rotationKey_0_4_14 = channel_0_4.rotationKeys.elementAt(14);
      expect(rotationKey_0_4_14.time, moreOrLessEquals(33));
      expect(rotationKey_0_4_14.value, quaternionMoreOrLessEquals(Quaternion(0.0440157987, -0.00151968643, 0.17095463, 0.17095463)));
      final rotationKey_0_4_15 = channel_0_4.rotationKeys.elementAt(15);
      expect(rotationKey_0_4_15.time, moreOrLessEquals(34));
      expect(rotationKey_0_4_15.value, quaternionMoreOrLessEquals(Quaternion(0.0746789575, -0.00257841707, 0.170642272, 0.170642272)));
      final rotationKey_0_4_16 = channel_0_4.rotationKeys.elementAt(16);
      expect(rotationKey_0_4_16.time, moreOrLessEquals(35));
      expect(rotationKey_0_4_16.value, quaternionMoreOrLessEquals(Quaternion(0.10771545, -0.00371906906, 0.170123875, 0.170123875)));
      final rotationKey_0_4_17 = channel_0_4.rotationKeys.elementAt(17);
      expect(rotationKey_0_4_17.time, moreOrLessEquals(36));
      expect(rotationKey_0_4_17.value, quaternionMoreOrLessEquals(Quaternion(0.138202623, -0.00477160932, 0.169476658, 0.169476658)));
      final rotationKey_0_4_18 = channel_0_4.rotationKeys.elementAt(18);
      expect(rotationKey_0_4_18.time, moreOrLessEquals(37));
      expect(rotationKey_0_4_18.value, quaternionMoreOrLessEquals(Quaternion(0.162021443, -0.00559384702, 0.168857038, 0.168857038)));
      final rotationKey_0_4_19 = channel_0_4.rotationKeys.elementAt(19);
      expect(rotationKey_0_4_19.time, moreOrLessEquals(38));
      expect(rotationKey_0_4_19.value, quaternionMoreOrLessEquals(Quaternion(0.176771179, -0.00610293215, 0.168422699, 0.168422699)));
      final rotationKey_0_4_20 = channel_0_4.rotationKeys.elementAt(20);
      expect(rotationKey_0_4_20.time, moreOrLessEquals(39));
      expect(rotationKey_0_4_20.value, quaternionMoreOrLessEquals(Quaternion(0.181670904, -0.00627204962, 0.168269739, 0.168269739)));
      expect(channel_0_4.scalingKeys.length, equals(21));
      final scalingKey_0_4_0 = channel_0_4.scalingKeys.elementAt(0);
      expect(scalingKey_0_4_0.time, isZero);
      expect(scalingKey_0_4_0.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_4_1 = channel_0_4.scalingKeys.elementAt(1);
      expect(scalingKey_0_4_1.time, moreOrLessEquals(1));
      expect(scalingKey_0_4_1.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_4_2 = channel_0_4.scalingKeys.elementAt(2);
      expect(scalingKey_0_4_2.time, moreOrLessEquals(2));
      expect(scalingKey_0_4_2.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_4_3 = channel_0_4.scalingKeys.elementAt(3);
      expect(scalingKey_0_4_3.time, moreOrLessEquals(3));
      expect(scalingKey_0_4_3.value, vector3MoreOrLessEquals(Vector3(0.99999994, 0.99999994, 1)));
      final scalingKey_0_4_4 = channel_0_4.scalingKeys.elementAt(4);
      expect(scalingKey_0_4_4.time, moreOrLessEquals(4));
      expect(scalingKey_0_4_4.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_4_5 = channel_0_4.scalingKeys.elementAt(5);
      expect(scalingKey_0_4_5.time, moreOrLessEquals(5));
      expect(scalingKey_0_4_5.value, vector3MoreOrLessEquals(Vector3(0.99999994, 0.99999994, 1)));
      final scalingKey_0_4_6 = channel_0_4.scalingKeys.elementAt(6);
      expect(scalingKey_0_4_6.time, moreOrLessEquals(6));
      expect(scalingKey_0_4_6.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_4_7 = channel_0_4.scalingKeys.elementAt(7);
      expect(scalingKey_0_4_7.time, moreOrLessEquals(7));
      expect(scalingKey_0_4_7.value, vector3MoreOrLessEquals(Vector3(1, 0.999999881, 1)));
      final scalingKey_0_4_8 = channel_0_4.scalingKeys.elementAt(8);
      expect(scalingKey_0_4_8.time, moreOrLessEquals(8));
      expect(scalingKey_0_4_8.value, vector3MoreOrLessEquals(Vector3(1, 0.99999994, 1)));
      final scalingKey_0_4_9 = channel_0_4.scalingKeys.elementAt(9);
      expect(scalingKey_0_4_9.time, moreOrLessEquals(9));
      expect(scalingKey_0_4_9.value, vector3MoreOrLessEquals(Vector3(0.99999994, 0.99999994, 1)));
      final scalingKey_0_4_10 = channel_0_4.scalingKeys.elementAt(10);
      expect(scalingKey_0_4_10.time, moreOrLessEquals(10));
      expect(scalingKey_0_4_10.value, vector3MoreOrLessEquals(Vector3(1, 0.99999994, 1)));
      final scalingKey_0_4_11 = channel_0_4.scalingKeys.elementAt(11);
      expect(scalingKey_0_4_11.time, moreOrLessEquals(30));
      expect(scalingKey_0_4_11.value, vector3MoreOrLessEquals(Vector3(0.99999994, 0.999999881, 1)));
      final scalingKey_0_4_12 = channel_0_4.scalingKeys.elementAt(12);
      expect(scalingKey_0_4_12.time, moreOrLessEquals(31));
      expect(scalingKey_0_4_12.value, vector3MoreOrLessEquals(Vector3(0.99999994, 0.999999881, 1)));
      final scalingKey_0_4_13 = channel_0_4.scalingKeys.elementAt(13);
      expect(scalingKey_0_4_13.time, moreOrLessEquals(32));
      expect(scalingKey_0_4_13.value, vector3MoreOrLessEquals(Vector3(0.99999994, 0.999999881, 1)));
      final scalingKey_0_4_14 = channel_0_4.scalingKeys.elementAt(14);
      expect(scalingKey_0_4_14.time, moreOrLessEquals(33));
      expect(scalingKey_0_4_14.value, vector3MoreOrLessEquals(Vector3(0.99999994, 0.999999821, 0.99999994)));
      final scalingKey_0_4_15 = channel_0_4.scalingKeys.elementAt(15);
      expect(scalingKey_0_4_15.time, moreOrLessEquals(34));
      expect(scalingKey_0_4_15.value, vector3MoreOrLessEquals(Vector3(0.99999994, 0.999999762, 1)));
      final scalingKey_0_4_16 = channel_0_4.scalingKeys.elementAt(16);
      expect(scalingKey_0_4_16.time, moreOrLessEquals(35));
      expect(scalingKey_0_4_16.value, vector3MoreOrLessEquals(Vector3(0.999999881, 0.999999762, 1)));
      final scalingKey_0_4_17 = channel_0_4.scalingKeys.elementAt(17);
      expect(scalingKey_0_4_17.time, moreOrLessEquals(36));
      expect(scalingKey_0_4_17.value, vector3MoreOrLessEquals(Vector3(0.99999994, 0.999999821, 0.99999994)));
      final scalingKey_0_4_18 = channel_0_4.scalingKeys.elementAt(18);
      expect(scalingKey_0_4_18.time, moreOrLessEquals(37));
      expect(scalingKey_0_4_18.value, vector3MoreOrLessEquals(Vector3(0.99999994, 0.999999821, 1)));
      final scalingKey_0_4_19 = channel_0_4.scalingKeys.elementAt(19);
      expect(scalingKey_0_4_19.time, moreOrLessEquals(38));
      expect(scalingKey_0_4_19.value, vector3MoreOrLessEquals(Vector3(0.99999994, 0.999999821, 1)));
      final scalingKey_0_4_20 = channel_0_4.scalingKeys.elementAt(20);
      expect(scalingKey_0_4_20.time, moreOrLessEquals(39));
      expect(scalingKey_0_4_20.value, vector3MoreOrLessEquals(Vector3(0.999999881, 0.999999821, 1)));
      expect(channel_0_4.preState, equals(AnimBehavior.defaults));
      expect(channel_0_4.postState, equals(AnimBehavior.defaults));
      final  channel_0_5 = animation_0.channels.elementAt(5);
      expect(channel_0_5.positionKeys.length, equals(40));
      final positionKey_0_5_0 = channel_0_5.positionKeys.elementAt(0);
      expect(positionKey_0_5_0.time, isZero);
      expect(positionKey_0_5_0.value, vector3MoreOrLessEquals(Vector3(-4.24839897e-08, 0.983560562, -1.39825715e-08)));
      final positionKey_0_5_1 = channel_0_5.positionKeys.elementAt(1);
      expect(positionKey_0_5_1.time, moreOrLessEquals(1));
      expect(positionKey_0_5_1.value, vector3MoreOrLessEquals(Vector3(-3.98663325e-08, 0.983560562, -1.82090165e-08)));
      final positionKey_0_5_2 = channel_0_5.positionKeys.elementAt(2);
      expect(positionKey_0_5_2.time, moreOrLessEquals(2));
      expect(positionKey_0_5_2.value, vector3MoreOrLessEquals(Vector3(-3.72486753e-08, 0.983560562, -2.24354615e-08)));
      final positionKey_0_5_3 = channel_0_5.positionKeys.elementAt(3);
      expect(positionKey_0_5_3.time, moreOrLessEquals(3));
      expect(positionKey_0_5_3.value, vector3MoreOrLessEquals(Vector3(-3.46310181e-08, 0.983560562, -2.66619065e-08)));
      final positionKey_0_5_4 = channel_0_5.positionKeys.elementAt(4);
      expect(positionKey_0_5_4.time, moreOrLessEquals(4));
      expect(positionKey_0_5_4.value, vector3MoreOrLessEquals(Vector3(-3.20133609e-08, 0.983560562, -3.08883514e-08)));
      final positionKey_0_5_5 = channel_0_5.positionKeys.elementAt(5);
      expect(positionKey_0_5_5.time, moreOrLessEquals(5));
      expect(positionKey_0_5_5.value, vector3MoreOrLessEquals(Vector3(-2.93957036e-08, 0.983560562, -3.51147946e-08)));
      final positionKey_0_5_6 = channel_0_5.positionKeys.elementAt(6);
      expect(positionKey_0_5_6.time, moreOrLessEquals(6));
      expect(positionKey_0_5_6.value, vector3MoreOrLessEquals(Vector3(-2.67780464e-08, 0.983560562, -3.93412414e-08)));
      final positionKey_0_5_7 = channel_0_5.positionKeys.elementAt(7);
      expect(positionKey_0_5_7.time, moreOrLessEquals(7));
      expect(positionKey_0_5_7.value, vector3MoreOrLessEquals(Vector3(-2.41603875e-08, 0.983560562, -4.35676881e-08)));
      final positionKey_0_5_8 = channel_0_5.positionKeys.elementAt(8);
      expect(positionKey_0_5_8.time, moreOrLessEquals(8));
      expect(positionKey_0_5_8.value, vector3MoreOrLessEquals(Vector3(-2.1542732e-08, 0.983560562, -4.77941313e-08)));
      final positionKey_0_5_9 = channel_0_5.positionKeys.elementAt(9);
      expect(positionKey_0_5_9.time, moreOrLessEquals(9));
      expect(positionKey_0_5_9.value, vector3MoreOrLessEquals(Vector3(-1.89250748e-08, 0.983560562, -5.20205745e-08)));
      final positionKey_0_5_10 = channel_0_5.positionKeys.elementAt(10);
      expect(positionKey_0_5_10.time, moreOrLessEquals(10));
      expect(positionKey_0_5_10.value, vector3MoreOrLessEquals(Vector3(-1.63074176e-08, 0.983560562, -5.62470213e-08)));
      final positionKey_0_5_11 = channel_0_5.positionKeys.elementAt(11);
      expect(positionKey_0_5_11.time, moreOrLessEquals(11));
      expect(positionKey_0_5_11.value, vector3MoreOrLessEquals(Vector3(-1.36897604e-08, 0.983560562, -6.0473468e-08)));
      final positionKey_0_5_12 = channel_0_5.positionKeys.elementAt(12);
      expect(positionKey_0_5_12.time, moreOrLessEquals(12));
      expect(positionKey_0_5_12.value, vector3MoreOrLessEquals(Vector3(-1.10721032e-08, 0.983560562, -6.46999112e-08)));
      final positionKey_0_5_13 = channel_0_5.positionKeys.elementAt(13);
      expect(positionKey_0_5_13.time, moreOrLessEquals(13));
      expect(positionKey_0_5_13.value, vector3MoreOrLessEquals(Vector3(-8.45444603e-09, 0.983560562, -6.89263544e-08)));
      final positionKey_0_5_14 = channel_0_5.positionKeys.elementAt(14);
      expect(positionKey_0_5_14.time, moreOrLessEquals(14));
      expect(positionKey_0_5_14.value, vector3MoreOrLessEquals(Vector3(-5.83678528e-09, 0.983560562, -7.31528047e-08)));
      final positionKey_0_5_15 = channel_0_5.positionKeys.elementAt(15);
      expect(positionKey_0_5_15.time, moreOrLessEquals(15));
      expect(positionKey_0_5_15.value, vector3MoreOrLessEquals(Vector3(-3.21913163e-09, 0.983560562, -7.73792479e-08)));
      final positionKey_0_5_16 = channel_0_5.positionKeys.elementAt(16);
      expect(positionKey_0_5_16.time, moreOrLessEquals(16));
      expect(positionKey_0_5_16.value, vector3MoreOrLessEquals(Vector3(-6.01474426e-10, 0.983560562, -8.16056911e-08)));
      final positionKey_0_5_17 = channel_0_5.positionKeys.elementAt(17);
      expect(positionKey_0_5_17.time, moreOrLessEquals(17));
      expect(positionKey_0_5_17.value, vector3MoreOrLessEquals(Vector3(2.01618278e-09, 0.983560562, -8.58321343e-08)));
      final positionKey_0_5_18 = channel_0_5.positionKeys.elementAt(18);
      expect(positionKey_0_5_18.time, moreOrLessEquals(18));
      expect(positionKey_0_5_18.value, vector3MoreOrLessEquals(Vector3(4.63383998e-09, 0.983560562, -9.00585775e-08)));
      final positionKey_0_5_19 = channel_0_5.positionKeys.elementAt(19);
      expect(positionKey_0_5_19.time, moreOrLessEquals(19));
      expect(positionKey_0_5_19.value, vector3MoreOrLessEquals(Vector3(7.25149718e-09, 0.983560562, -9.42850278e-08)));
      final positionKey_0_5_20 = channel_0_5.positionKeys.elementAt(20);
      expect(positionKey_0_5_20.time, moreOrLessEquals(20));
      expect(positionKey_0_5_20.value, vector3MoreOrLessEquals(Vector3(9.86915438e-09, 0.983560562, -9.8511471e-08)));
      final positionKey_0_5_21 = channel_0_5.positionKeys.elementAt(21);
      expect(positionKey_0_5_21.time, moreOrLessEquals(21));
      expect(positionKey_0_5_21.value, vector3MoreOrLessEquals(Vector3(1.24868116e-08, 0.983560562, -1.02737914e-07)));
      final positionKey_0_5_22 = channel_0_5.positionKeys.elementAt(22);
      expect(positionKey_0_5_22.time, moreOrLessEquals(22));
      expect(positionKey_0_5_22.value, vector3MoreOrLessEquals(Vector3(1.51044688e-08, 0.983560562, -1.06964357e-07)));
      final positionKey_0_5_23 = channel_0_5.positionKeys.elementAt(23);
      expect(positionKey_0_5_23.time, moreOrLessEquals(23));
      expect(positionKey_0_5_23.value, vector3MoreOrLessEquals(Vector3(1.77221224e-08, 0.983560562, -1.11190808e-07)));
      final positionKey_0_5_24 = channel_0_5.positionKeys.elementAt(24);
      expect(positionKey_0_5_24.time, moreOrLessEquals(24));
      expect(positionKey_0_5_24.value, vector3MoreOrLessEquals(Vector3(2.03397832e-08, 0.983560562, -1.15417251e-07)));
      final positionKey_0_5_25 = channel_0_5.positionKeys.elementAt(25);
      expect(positionKey_0_5_25.time, moreOrLessEquals(25));
      expect(positionKey_0_5_25.value, vector3MoreOrLessEquals(Vector3(2.29574368e-08, 0.983560562, -1.19643687e-07)));
      final positionKey_0_5_26 = channel_0_5.positionKeys.elementAt(26);
      expect(positionKey_0_5_26.time, moreOrLessEquals(26));
      expect(positionKey_0_5_26.value, vector3MoreOrLessEquals(Vector3(2.55750976e-08, 0.983560562, -1.23870137e-07)));
      final positionKey_0_5_27 = channel_0_5.positionKeys.elementAt(27);
      expect(positionKey_0_5_27.time, moreOrLessEquals(27));
      expect(positionKey_0_5_27.value, vector3MoreOrLessEquals(Vector3(2.81927512e-08, 0.983560562, -1.28096588e-07)));
      final positionKey_0_5_28 = channel_0_5.positionKeys.elementAt(28);
      expect(positionKey_0_5_28.time, moreOrLessEquals(28));
      expect(positionKey_0_5_28.value, vector3MoreOrLessEquals(Vector3(3.08104191e-08, 0.983560562, -1.32323038e-07)));
      final positionKey_0_5_29 = channel_0_5.positionKeys.elementAt(29);
      expect(positionKey_0_5_29.time, moreOrLessEquals(29));
      expect(positionKey_0_5_29.value, vector3MoreOrLessEquals(Vector3(3.34280656e-08, 0.983560562, -1.36549474e-07)));
      final positionKey_0_5_30 = channel_0_5.positionKeys.elementAt(30);
      expect(positionKey_0_5_30.time, moreOrLessEquals(30));
      expect(positionKey_0_5_30.value, vector3MoreOrLessEquals(Vector3(3.60457264e-08, 0.983560562, -1.40775924e-07)));
      final positionKey_0_5_31 = channel_0_5.positionKeys.elementAt(31);
      expect(positionKey_0_5_31.time, moreOrLessEquals(31));
      expect(positionKey_0_5_31.value, vector3MoreOrLessEquals(Vector3(3.86633872e-08, 0.983560562, -1.45002375e-07)));
      final positionKey_0_5_32 = channel_0_5.positionKeys.elementAt(32);
      expect(positionKey_0_5_32.time, moreOrLessEquals(32));
      expect(positionKey_0_5_32.value, vector3MoreOrLessEquals(Vector3(4.12810408e-08, 0.983560562, -1.49228811e-07)));
      final positionKey_0_5_33 = channel_0_5.positionKeys.elementAt(33);
      expect(positionKey_0_5_33.time, moreOrLessEquals(33));
      expect(positionKey_0_5_33.value, vector3MoreOrLessEquals(Vector3(4.38986945e-08, 0.983560562, -1.53455261e-07)));
      final positionKey_0_5_34 = channel_0_5.positionKeys.elementAt(34);
      expect(positionKey_0_5_34.time, moreOrLessEquals(34));
      expect(positionKey_0_5_34.value, vector3MoreOrLessEquals(Vector3(4.65163552e-08, 0.983560562, -1.57681697e-07)));
      final positionKey_0_5_35 = channel_0_5.positionKeys.elementAt(35);
      expect(positionKey_0_5_35.time, moreOrLessEquals(35));
      expect(positionKey_0_5_35.value, vector3MoreOrLessEquals(Vector3(4.91340089e-08, 0.983560562, -1.61908147e-07)));
      final positionKey_0_5_36 = channel_0_5.positionKeys.elementAt(36);
      expect(positionKey_0_5_36.time, moreOrLessEquals(36));
      expect(positionKey_0_5_36.value, vector3MoreOrLessEquals(Vector3(5.17516696e-08, 0.983560562, -1.66134583e-07)));
      final positionKey_0_5_37 = channel_0_5.positionKeys.elementAt(37);
      expect(positionKey_0_5_37.time, moreOrLessEquals(37));
      expect(positionKey_0_5_37.value, vector3MoreOrLessEquals(Vector3(5.43693233e-08, 0.983560562, -1.70361034e-07)));
      final positionKey_0_5_38 = channel_0_5.positionKeys.elementAt(38);
      expect(positionKey_0_5_38.time, moreOrLessEquals(38));
      expect(positionKey_0_5_38.value, vector3MoreOrLessEquals(Vector3(5.6986984e-08, 0.983560562, -1.74587484e-07)));
      final positionKey_0_5_39 = channel_0_5.positionKeys.elementAt(39);
      expect(positionKey_0_5_39.time, moreOrLessEquals(39));
      expect(positionKey_0_5_39.value, vector3MoreOrLessEquals(Vector3(5.96046448e-08, 0.983560562, -1.78813934e-07)));
      expect(channel_0_5.rotationKeys.length, equals(40));
      final rotationKey_0_5_0 = channel_0_5.rotationKeys.elementAt(0);
      expect(rotationKey_0_5_0.time, isZero);
      expect(rotationKey_0_5_0.value, quaternionMoreOrLessEquals(Quaternion(4.97466568e-10, 4.52968933e-08, 0.025758056, 0.025758056)));
      final rotationKey_0_5_1 = channel_0_5.rotationKeys.elementAt(1);
      expect(rotationKey_0_5_1.time, moreOrLessEquals(1));
      expect(rotationKey_0_5_1.value, quaternionMoreOrLessEquals(Quaternion(-0.00482424023, 0.00192141254, 0.0257576946, 0.0257576946)));
      final rotationKey_0_5_2 = channel_0_5.rotationKeys.elementAt(2);
      expect(rotationKey_0_5_2.time, moreOrLessEquals(2));
      expect(rotationKey_0_5_2.value, quaternionMoreOrLessEquals(Quaternion(-0.0193642247, 0.00771285454, 0.0257524345, 0.0257524345)));
      final rotationKey_0_5_3 = channel_0_5.rotationKeys.elementAt(3);
      expect(rotationKey_0_5_3.time, moreOrLessEquals(3));
      expect(rotationKey_0_5_3.value, quaternionMoreOrLessEquals(Quaternion(-0.0430552252, 0.0171502922, 0.0257303771, 0.0257303771)));
      final rotationKey_0_5_4 = channel_0_5.rotationKeys.elementAt(4);
      expect(rotationKey_0_5_4.time, moreOrLessEquals(4));
      expect(rotationKey_0_5_4.value, quaternionMoreOrLessEquals(Quaternion(-0.0740768835, 0.0295092296, 0.0256760307, 0.0256760307)));
      final rotationKey_0_5_5 = channel_0_5.rotationKeys.elementAt(5);
      expect(rotationKey_0_5_5.time, moreOrLessEquals(5));
      expect(rotationKey_0_5_5.value, quaternionMoreOrLessEquals(Quaternion(-0.109164692, 0.0434892289, 0.0255795792, 0.0255795792)));
      final rotationKey_0_5_6 = channel_0_5.rotationKeys.elementAt(6);
      expect(rotationKey_0_5_6.time, moreOrLessEquals(6));
      expect(rotationKey_0_5_6.value, quaternionMoreOrLessEquals(Quaternion(-0.144082308, 0.0574020185, 0.0254463851, 0.0254463851)));
      final rotationKey_0_5_7 = channel_0_5.rotationKeys.elementAt(7);
      expect(rotationKey_0_5_7.time, moreOrLessEquals(7));
      expect(rotationKey_0_5_7.value, quaternionMoreOrLessEquals(Quaternion(-0.174698159, 0.069600679, 0.0252985433, 0.0252985433)));
      final rotationKey_0_5_8 = channel_0_5.rotationKeys.elementAt(8);
      expect(rotationKey_0_5_8.time, moreOrLessEquals(8));
      expect(rotationKey_0_5_8.value, quaternionMoreOrLessEquals(Quaternion(-0.197991326, 0.0788812563, 0.0251662564, 0.0251662564)));
      final rotationKey_0_5_9 = channel_0_5.rotationKeys.elementAt(9);
      expect(rotationKey_0_5_9.time, moreOrLessEquals(9));
      expect(rotationKey_0_5_9.value, quaternionMoreOrLessEquals(Quaternion(-0.212380886, 0.0846139863, 0.0250759106, 0.0250759106)));
      final rotationKey_0_5_10 = channel_0_5.rotationKeys.elementAt(10);
      expect(rotationKey_0_5_10.time, moreOrLessEquals(10));
      expect(rotationKey_0_5_10.value, quaternionMoreOrLessEquals(Quaternion(-0.217433468, 0.0866268128, 0.0250426028, 0.0250426028)));
      final rotationKey_0_5_11 = channel_0_5.rotationKeys.elementAt(11);
      expect(rotationKey_0_5_11.time, moreOrLessEquals(11));
      expect(rotationKey_0_5_11.value, quaternionMoreOrLessEquals(Quaternion(-0.207771301, 0.082777746, 0.0251055732, 0.0251055732)));
      final rotationKey_0_5_12 = channel_0_5.rotationKeys.elementAt(12);
      expect(rotationKey_0_5_12.time, moreOrLessEquals(12));
      expect(rotationKey_0_5_12.value, quaternionMoreOrLessEquals(Quaternion(-0.177300215, 0.0706385076, 0.0252845977, 0.0252845977)));
      final rotationKey_0_5_13 = channel_0_5.rotationKeys.elementAt(13);
      expect(rotationKey_0_5_13.time, moreOrLessEquals(13));
      expect(rotationKey_0_5_13.value, quaternionMoreOrLessEquals(Quaternion(-0.126059011, 0.050223466, 0.0255197883, 0.0255197883)));
      final rotationKey_0_5_14 = channel_0_5.rotationKeys.elementAt(14);
      expect(rotationKey_0_5_14.time, moreOrLessEquals(14));
      expect(rotationKey_0_5_14.value, quaternionMoreOrLessEquals(Quaternion(-0.056943886, 0.022686094, 0.0257096086, 0.0257096086)));
      final rotationKey_0_5_15 = channel_0_5.rotationKeys.elementAt(15);
      expect(rotationKey_0_5_15.time, moreOrLessEquals(15));
      expect(rotationKey_0_5_15.value, quaternionMoreOrLessEquals(Quaternion(0.0227495693, -0.00906645879, 0.0257503241, 0.0257503241)));
      final rotationKey_0_5_16 = channel_0_5.rotationKeys.elementAt(16);
      expect(rotationKey_0_5_16.time, moreOrLessEquals(16));
      expect(rotationKey_0_5_16.value, quaternionMoreOrLessEquals(Quaternion(0.102169722, -0.0407094657, 0.0256017968, 0.0256017968)));
      final rotationKey_0_5_17 = channel_0_5.rotationKeys.elementAt(17);
      expect(rotationKey_0_5_17.time, moreOrLessEquals(17));
      expect(rotationKey_0_5_17.value, quaternionMoreOrLessEquals(Quaternion(0.170641512, -0.0679889619, 0.0253197663, 0.0253197663)));
      final rotationKey_0_5_18 = channel_0_5.rotationKeys.elementAt(18);
      expect(rotationKey_0_5_18.time, moreOrLessEquals(18));
      expect(rotationKey_0_5_18.value, quaternionMoreOrLessEquals(Quaternion(0.221251115, -0.0881505683, 0.0250168573, 0.0250168573)));
      final rotationKey_0_5_19 = channel_0_5.rotationKeys.elementAt(19);
      expect(rotationKey_0_5_19.time, moreOrLessEquals(19));
      expect(rotationKey_0_5_19.value, quaternionMoreOrLessEquals(Quaternion(0.251428604, -0.100171454, 0.0247967113, 0.0247967113)));
      final rotationKey_0_5_20 = channel_0_5.rotationKeys.elementAt(20);
      expect(rotationKey_0_5_20.time, moreOrLessEquals(20));
      expect(rotationKey_0_5_20.value, quaternionMoreOrLessEquals(Quaternion(0.261277586, -0.104094476, 0.0247182809, 0.0247182809)));
      final rotationKey_0_5_21 = channel_0_5.rotationKeys.elementAt(21);
      expect(rotationKey_0_5_21.time, moreOrLessEquals(21));
      expect(rotationKey_0_5_21.value, quaternionMoreOrLessEquals(Quaternion(0.259480923, -0.103367597, 0.0247328542, 0.0247328542)));
      final rotationKey_0_5_22 = channel_0_5.rotationKeys.elementAt(22);
      expect(rotationKey_0_5_22.time, moreOrLessEquals(22));
      expect(rotationKey_0_5_22.value, quaternionMoreOrLessEquals(Quaternion(0.253934056, -0.10112609, 0.0247771628, 0.0247771628)));
      final rotationKey_0_5_23 = channel_0_5.rotationKeys.elementAt(23);
      expect(rotationKey_0_5_23.time, moreOrLessEquals(23));
      expect(rotationKey_0_5_23.value, quaternionMoreOrLessEquals(Quaternion(0.244582579, -0.0973530188, 0.024849508, 0.024849508)));
      final rotationKey_0_5_24 = channel_0_5.rotationKeys.elementAt(24);
      expect(rotationKey_0_5_24.time, moreOrLessEquals(24));
      expect(rotationKey_0_5_24.value, quaternionMoreOrLessEquals(Quaternion(0.231740937, -0.0921821222, 0.0249440894, 0.0249440894)));
      final rotationKey_0_5_25 = channel_0_5.rotationKeys.elementAt(25);
      expect(rotationKey_0_5_25.time, moreOrLessEquals(25));
      expect(rotationKey_0_5_25.value, quaternionMoreOrLessEquals(Quaternion(0.216199696, -0.0859404579, 0.0250512119, 0.0250512119)));
      final rotationKey_0_5_26 = channel_0_5.rotationKeys.elementAt(26);
      expect(rotationKey_0_5_26.time, moreOrLessEquals(26));
      expect(rotationKey_0_5_26.value, quaternionMoreOrLessEquals(Quaternion(0.199165419, -0.0791223049, 0.0251595601, 0.0251595601)));
      final rotationKey_0_5_27 = channel_0_5.rotationKeys.elementAt(27);
      expect(rotationKey_0_5_27.time, moreOrLessEquals(27));
      expect(rotationKey_0_5_27.value, quaternionMoreOrLessEquals(Quaternion(0.181997553, -0.0722811222, 0.0252592899, 0.0252592899)));
      final rotationKey_0_5_28 = channel_0_5.rotationKeys.elementAt(28);
      expect(rotationKey_0_5_28.time, moreOrLessEquals(28));
      expect(rotationKey_0_5_28.value, quaternionMoreOrLessEquals(Quaternion(0.16588378, -0.0658974424, 0.025344355, 0.025344355)));
      final rotationKey_0_5_29 = channel_0_5.rotationKeys.elementAt(29);
      expect(rotationKey_0_5_29.time, moreOrLessEquals(29));
      expect(rotationKey_0_5_29.value, quaternionMoreOrLessEquals(Quaternion(0.151640877, -0.060299214, 0.0254127402, 0.0254127402)));
      final rotationKey_0_5_30 = channel_0_5.rotationKeys.elementAt(30);
      expect(rotationKey_0_5_30.time, moreOrLessEquals(30));
      expect(rotationKey_0_5_30.value, quaternionMoreOrLessEquals(Quaternion(0.139699966, -0.0556572229, 0.0254651215, 0.0254651215)));
      final rotationKey_0_5_31 = channel_0_5.rotationKeys.elementAt(31);
      expect(rotationKey_0_5_31.time, moreOrLessEquals(31));
      expect(rotationKey_0_5_31.value, quaternionMoreOrLessEquals(Quaternion(0.128246039, -0.051273711, 0.0209561884, 0.0209561884)));
      final rotationKey_0_5_32 = channel_0_5.rotationKeys.elementAt(32);
      expect(rotationKey_0_5_32.time, moreOrLessEquals(32));
      expect(rotationKey_0_5_32.value, quaternionMoreOrLessEquals(Quaternion(0.115487576, -0.0464601927, 0.00729725743, 0.00729725743)));
      final rotationKey_0_5_33 = channel_0_5.rotationKeys.elementAt(33);
      expect(rotationKey_0_5_33.time, moreOrLessEquals(33));
      expect(rotationKey_0_5_33.value, quaternionMoreOrLessEquals(Quaternion(0.101873919, -0.0413829088, -0.0147248413, -0.0147248413)));
      final rotationKey_0_5_34 = channel_0_5.rotationKeys.elementAt(34);
      expect(rotationKey_0_5_34.time, moreOrLessEquals(34));
      expect(rotationKey_0_5_34.value, quaternionMoreOrLessEquals(Quaternion(0.0882112458, -0.0363334045, -0.0427829735, -0.0427829735)));
      final rotationKey_0_5_35 = channel_0_5.rotationKeys.elementAt(35);
      expect(rotationKey_0_5_35.time, moreOrLessEquals(35));
      expect(rotationKey_0_5_35.value, quaternionMoreOrLessEquals(Quaternion(0.0755924881, -0.0317020155, -0.0730013996, -0.0730013996)));
      final rotationKey_0_5_36 = channel_0_5.rotationKeys.elementAt(36);
      expect(rotationKey_0_5_36.time, moreOrLessEquals(36));
      expect(rotationKey_0_5_36.value, quaternionMoreOrLessEquals(Quaternion(0.0651076958, -0.0278740041, -0.100872003, -0.100872003)));
      final rotationKey_0_5_37 = channel_0_5.rotationKeys.elementAt(37);
      expect(rotationKey_0_5_37.time, moreOrLessEquals(37));
      expect(rotationKey_0_5_37.value, quaternionMoreOrLessEquals(Quaternion(0.0575032271, -0.0251086485, -0.122636586, -0.122636586)));
      final rotationKey_0_5_38 = channel_0_5.rotationKeys.elementAt(38);
      expect(rotationKey_0_5_38.time, moreOrLessEquals(38));
      expect(rotationKey_0_5_38.value, quaternionMoreOrLessEquals(Quaternion(0.0530452542, -0.0234926157, -0.13611041, -0.13611041)));
      final rotationKey_0_5_39 = channel_0_5.rotationKeys.elementAt(39);
      expect(rotationKey_0_5_39.time, moreOrLessEquals(39));
      expect(rotationKey_0_5_39.value, quaternionMoreOrLessEquals(Quaternion(0.0516220368, -0.0229779836, -0.140585721, -0.140585721)));
      expect(channel_0_5.scalingKeys.length, equals(40));
      final scalingKey_0_5_0 = channel_0_5.scalingKeys.elementAt(0);
      expect(scalingKey_0_5_0.time, isZero);
      expect(scalingKey_0_5_0.value, vector3MoreOrLessEquals(Vector3(0.99999994, 0.99999994, 1)));
      final scalingKey_0_5_1 = channel_0_5.scalingKeys.elementAt(1);
      expect(scalingKey_0_5_1.time, moreOrLessEquals(1));
      expect(scalingKey_0_5_1.value, vector3MoreOrLessEquals(Vector3(0.99999994, 0.99999994, 1)));
      final scalingKey_0_5_2 = channel_0_5.scalingKeys.elementAt(2);
      expect(scalingKey_0_5_2.time, moreOrLessEquals(2));
      expect(scalingKey_0_5_2.value, vector3MoreOrLessEquals(Vector3(0.999999881, 0.999999881, 1)));
      final scalingKey_0_5_3 = channel_0_5.scalingKeys.elementAt(3);
      expect(scalingKey_0_5_3.time, moreOrLessEquals(3));
      expect(scalingKey_0_5_3.value, vector3MoreOrLessEquals(Vector3(0.99999994, 0.99999994, 1)));
      final scalingKey_0_5_4 = channel_0_5.scalingKeys.elementAt(4);
      expect(scalingKey_0_5_4.time, moreOrLessEquals(4));
      expect(scalingKey_0_5_4.value, vector3MoreOrLessEquals(Vector3(0.99999994, 0.99999994, 1)));
      final scalingKey_0_5_5 = channel_0_5.scalingKeys.elementAt(5);
      expect(scalingKey_0_5_5.time, moreOrLessEquals(5));
      expect(scalingKey_0_5_5.value, vector3MoreOrLessEquals(Vector3(0.99999994, 0.99999994, 0.99999994)));
      final scalingKey_0_5_6 = channel_0_5.scalingKeys.elementAt(6);
      expect(scalingKey_0_5_6.time, moreOrLessEquals(6));
      expect(scalingKey_0_5_6.value, vector3MoreOrLessEquals(Vector3(0.999999881, 0.99999994, 1)));
      final scalingKey_0_5_7 = channel_0_5.scalingKeys.elementAt(7);
      expect(scalingKey_0_5_7.time, moreOrLessEquals(7));
      expect(scalingKey_0_5_7.value, vector3MoreOrLessEquals(Vector3(0.999999881, 0.99999994, 1)));
      final scalingKey_0_5_8 = channel_0_5.scalingKeys.elementAt(8);
      expect(scalingKey_0_5_8.time, moreOrLessEquals(8));
      expect(scalingKey_0_5_8.value, vector3MoreOrLessEquals(Vector3(0.999999881, 0.999999881, 0.99999994)));
      final scalingKey_0_5_9 = channel_0_5.scalingKeys.elementAt(9);
      expect(scalingKey_0_5_9.time, moreOrLessEquals(9));
      expect(scalingKey_0_5_9.value, vector3MoreOrLessEquals(Vector3(0.99999994, 0.99999994, 1)));
      final scalingKey_0_5_10 = channel_0_5.scalingKeys.elementAt(10);
      expect(scalingKey_0_5_10.time, moreOrLessEquals(10));
      expect(scalingKey_0_5_10.value, vector3MoreOrLessEquals(Vector3(0.99999994, 0.99999994, 1)));
      final scalingKey_0_5_11 = channel_0_5.scalingKeys.elementAt(11);
      expect(scalingKey_0_5_11.time, moreOrLessEquals(11));
      expect(scalingKey_0_5_11.value, vector3MoreOrLessEquals(Vector3(0.99999994, 0.99999994, 1)));
      final scalingKey_0_5_12 = channel_0_5.scalingKeys.elementAt(12);
      expect(scalingKey_0_5_12.time, moreOrLessEquals(12));
      expect(scalingKey_0_5_12.value, vector3MoreOrLessEquals(Vector3(0.99999994, 0.999999881, 1)));
      final scalingKey_0_5_13 = channel_0_5.scalingKeys.elementAt(13);
      expect(scalingKey_0_5_13.time, moreOrLessEquals(13));
      expect(scalingKey_0_5_13.value, vector3MoreOrLessEquals(Vector3(0.99999994, 0.99999994, 0.99999994)));
      final scalingKey_0_5_14 = channel_0_5.scalingKeys.elementAt(14);
      expect(scalingKey_0_5_14.time, moreOrLessEquals(14));
      expect(scalingKey_0_5_14.value, vector3MoreOrLessEquals(Vector3(0.99999994, 0.99999994, 0.99999994)));
      final scalingKey_0_5_15 = channel_0_5.scalingKeys.elementAt(15);
      expect(scalingKey_0_5_15.time, moreOrLessEquals(15));
      expect(scalingKey_0_5_15.value, vector3MoreOrLessEquals(Vector3(0.99999994, 0.99999994, 1)));
      final scalingKey_0_5_16 = channel_0_5.scalingKeys.elementAt(16);
      expect(scalingKey_0_5_16.time, moreOrLessEquals(16));
      expect(scalingKey_0_5_16.value, vector3MoreOrLessEquals(Vector3(0.99999994, 0.99999994, 1)));
      final scalingKey_0_5_17 = channel_0_5.scalingKeys.elementAt(17);
      expect(scalingKey_0_5_17.time, moreOrLessEquals(17));
      expect(scalingKey_0_5_17.value, vector3MoreOrLessEquals(Vector3(0.999999881, 0.99999994, 1)));
      final scalingKey_0_5_18 = channel_0_5.scalingKeys.elementAt(18);
      expect(scalingKey_0_5_18.time, moreOrLessEquals(18));
      expect(scalingKey_0_5_18.value, vector3MoreOrLessEquals(Vector3(0.99999994, 0.99999994, 1)));
      final scalingKey_0_5_19 = channel_0_5.scalingKeys.elementAt(19);
      expect(scalingKey_0_5_19.time, moreOrLessEquals(19));
      expect(scalingKey_0_5_19.value, vector3MoreOrLessEquals(Vector3(0.99999994, 0.99999994, 1)));
      final scalingKey_0_5_20 = channel_0_5.scalingKeys.elementAt(20);
      expect(scalingKey_0_5_20.time, moreOrLessEquals(20));
      expect(scalingKey_0_5_20.value, vector3MoreOrLessEquals(Vector3(0.99999994, 0.999999881, 1)));
      final scalingKey_0_5_21 = channel_0_5.scalingKeys.elementAt(21);
      expect(scalingKey_0_5_21.time, moreOrLessEquals(21));
      expect(scalingKey_0_5_21.value, vector3MoreOrLessEquals(Vector3(0.99999994, 0.999999881, 1)));
      final scalingKey_0_5_22 = channel_0_5.scalingKeys.elementAt(22);
      expect(scalingKey_0_5_22.time, moreOrLessEquals(22));
      expect(scalingKey_0_5_22.value, vector3MoreOrLessEquals(Vector3(0.99999994, 0.99999994, 1)));
      final scalingKey_0_5_23 = channel_0_5.scalingKeys.elementAt(23);
      expect(scalingKey_0_5_23.time, moreOrLessEquals(23));
      expect(scalingKey_0_5_23.value, vector3MoreOrLessEquals(Vector3(0.999999881, 0.99999994, 1)));
      final scalingKey_0_5_24 = channel_0_5.scalingKeys.elementAt(24);
      expect(scalingKey_0_5_24.time, moreOrLessEquals(24));
      expect(scalingKey_0_5_24.value, vector3MoreOrLessEquals(Vector3(0.99999994, 0.99999994, 1)));
      final scalingKey_0_5_25 = channel_0_5.scalingKeys.elementAt(25);
      expect(scalingKey_0_5_25.time, moreOrLessEquals(25));
      expect(scalingKey_0_5_25.value, vector3MoreOrLessEquals(Vector3(0.999999881, 0.99999994, 1)));
      final scalingKey_0_5_26 = channel_0_5.scalingKeys.elementAt(26);
      expect(scalingKey_0_5_26.time, moreOrLessEquals(26));
      expect(scalingKey_0_5_26.value, vector3MoreOrLessEquals(Vector3(0.99999994, 0.99999994, 0.99999994)));
      final scalingKey_0_5_27 = channel_0_5.scalingKeys.elementAt(27);
      expect(scalingKey_0_5_27.time, moreOrLessEquals(27));
      expect(scalingKey_0_5_27.value, vector3MoreOrLessEquals(Vector3(0.99999994, 0.999999881, 1)));
      final scalingKey_0_5_28 = channel_0_5.scalingKeys.elementAt(28);
      expect(scalingKey_0_5_28.time, moreOrLessEquals(28));
      expect(scalingKey_0_5_28.value, vector3MoreOrLessEquals(Vector3(0.99999994, 0.99999994, 1)));
      final scalingKey_0_5_29 = channel_0_5.scalingKeys.elementAt(29);
      expect(scalingKey_0_5_29.time, moreOrLessEquals(29));
      expect(scalingKey_0_5_29.value, vector3MoreOrLessEquals(Vector3(0.99999994, 0.99999994, 0.99999994)));
      final scalingKey_0_5_30 = channel_0_5.scalingKeys.elementAt(30);
      expect(scalingKey_0_5_30.time, moreOrLessEquals(30));
      expect(scalingKey_0_5_30.value, vector3MoreOrLessEquals(Vector3(0.999999881, 0.99999994, 1)));
      final scalingKey_0_5_31 = channel_0_5.scalingKeys.elementAt(31);
      expect(scalingKey_0_5_31.time, moreOrLessEquals(31));
      expect(scalingKey_0_5_31.value, vector3MoreOrLessEquals(Vector3(0.99999994, 0.99999994, 1)));
      final scalingKey_0_5_32 = channel_0_5.scalingKeys.elementAt(32);
      expect(scalingKey_0_5_32.time, moreOrLessEquals(32));
      expect(scalingKey_0_5_32.value, vector3MoreOrLessEquals(Vector3(0.999999881, 0.999999881, 1)));
      final scalingKey_0_5_33 = channel_0_5.scalingKeys.elementAt(33);
      expect(scalingKey_0_5_33.time, moreOrLessEquals(33));
      expect(scalingKey_0_5_33.value, vector3MoreOrLessEquals(Vector3(0.99999994, 0.99999994, 1)));
      final scalingKey_0_5_34 = channel_0_5.scalingKeys.elementAt(34);
      expect(scalingKey_0_5_34.time, moreOrLessEquals(34));
      expect(scalingKey_0_5_34.value, vector3MoreOrLessEquals(Vector3(0.99999994, 0.99999994, 1)));
      final scalingKey_0_5_35 = channel_0_5.scalingKeys.elementAt(35);
      expect(scalingKey_0_5_35.time, moreOrLessEquals(35));
      expect(scalingKey_0_5_35.value, vector3MoreOrLessEquals(Vector3(0.99999994, 0.99999994, 1)));
      final scalingKey_0_5_36 = channel_0_5.scalingKeys.elementAt(36);
      expect(scalingKey_0_5_36.time, moreOrLessEquals(36));
      expect(scalingKey_0_5_36.value, vector3MoreOrLessEquals(Vector3(0.99999994, 0.99999994, 1)));
      final scalingKey_0_5_37 = channel_0_5.scalingKeys.elementAt(37);
      expect(scalingKey_0_5_37.time, moreOrLessEquals(37));
      expect(scalingKey_0_5_37.value, vector3MoreOrLessEquals(Vector3(0.99999994, 0.99999994, 1)));
      final scalingKey_0_5_38 = channel_0_5.scalingKeys.elementAt(38);
      expect(scalingKey_0_5_38.time, moreOrLessEquals(38));
      expect(scalingKey_0_5_38.value, vector3MoreOrLessEquals(Vector3(0.99999994, 0.99999994, 1)));
      final scalingKey_0_5_39 = channel_0_5.scalingKeys.elementAt(39);
      expect(scalingKey_0_5_39.time, moreOrLessEquals(39));
      expect(scalingKey_0_5_39.value, vector3MoreOrLessEquals(Vector3(0.999999881, 0.99999994, 1)));
      expect(channel_0_5.preState, equals(AnimBehavior.defaults));
      expect(channel_0_5.postState, equals(AnimBehavior.defaults));
      final  channel_0_6 = animation_0.channels.elementAt(6);
      expect(channel_0_6.positionKeys.length, equals(40));
      final positionKey_0_6_0 = channel_0_6.positionKeys.elementAt(0);
      expect(positionKey_0_6_0.time, isZero);
      expect(positionKey_0_6_0.value, vector3MoreOrLessEquals(Vector3(2.47089886e-08, 1.20969367, -2.56671715e-08)));
      final positionKey_0_6_1 = channel_0_6.positionKeys.elementAt(1);
      expect(positionKey_0_6_1.time, moreOrLessEquals(1));
      expect(positionKey_0_6_1.value, vector3MoreOrLessEquals(Vector3(2.0254614e-08, 1.20969367, -2.41493563e-08)));
      final positionKey_0_6_2 = channel_0_6.positionKeys.elementAt(2);
      expect(positionKey_0_6_2.time, moreOrLessEquals(2));
      expect(positionKey_0_6_2.value, vector3MoreOrLessEquals(Vector3(1.58002411e-08, 1.20969367, -2.26315411e-08)));
      final positionKey_0_6_3 = channel_0_6.positionKeys.elementAt(3);
      expect(positionKey_0_6_3.time, moreOrLessEquals(3));
      expect(positionKey_0_6_3.value, vector3MoreOrLessEquals(Vector3(1.13458665e-08, 1.20969367, -2.11137277e-08)));
      final positionKey_0_6_4 = channel_0_6.positionKeys.elementAt(4);
      expect(positionKey_0_6_4.time, moreOrLessEquals(4));
      expect(positionKey_0_6_4.value, vector3MoreOrLessEquals(Vector3(6.8914936e-09, 1.20969367, -1.95959124e-08)));
      final positionKey_0_6_5 = channel_0_6.positionKeys.elementAt(5);
      expect(positionKey_0_6_5.time, moreOrLessEquals(5));
      expect(positionKey_0_6_5.value, vector3MoreOrLessEquals(Vector3(2.43711895e-09, 1.20969367, -1.80780972e-08)));
      final positionKey_0_6_6 = channel_0_6.positionKeys.elementAt(6);
      expect(positionKey_0_6_6.time, moreOrLessEquals(6));
      expect(positionKey_0_6_6.value, vector3MoreOrLessEquals(Vector3(-2.0172557e-09, 1.20969367, -1.6560282e-08)));
      final positionKey_0_6_7 = channel_0_6.positionKeys.elementAt(7);
      expect(positionKey_0_6_7.time, moreOrLessEquals(7));
      expect(positionKey_0_6_7.value, vector3MoreOrLessEquals(Vector3(-6.47163034e-09, 1.20969367, -1.50424668e-08)));
      final positionKey_0_6_8 = channel_0_6.positionKeys.elementAt(8);
      expect(positionKey_0_6_8.time, moreOrLessEquals(8));
      expect(positionKey_0_6_8.value, vector3MoreOrLessEquals(Vector3(-1.09260014e-08, 1.20969367, -1.35246525e-08)));
      final positionKey_0_6_9 = channel_0_6.positionKeys.elementAt(9);
      expect(positionKey_0_6_9.time, moreOrLessEquals(9));
      expect(positionKey_0_6_9.value, vector3MoreOrLessEquals(Vector3(-1.53803761e-08, 1.20969367, -1.20068382e-08)));
      final positionKey_0_6_10 = channel_0_6.positionKeys.elementAt(10);
      expect(positionKey_0_6_10.time, moreOrLessEquals(10));
      expect(positionKey_0_6_10.value, vector3MoreOrLessEquals(Vector3(-1.98347507e-08, 1.20969379, -1.0489023e-08)));
      final positionKey_0_6_11 = channel_0_6.positionKeys.elementAt(11);
      expect(positionKey_0_6_11.time, moreOrLessEquals(11));
      expect(positionKey_0_6_11.value, vector3MoreOrLessEquals(Vector3(-2.42891254e-08, 1.20969379, -8.97120778e-09)));
      final positionKey_0_6_12 = channel_0_6.positionKeys.elementAt(12);
      expect(positionKey_0_6_12.time, moreOrLessEquals(12));
      expect(positionKey_0_6_12.value, vector3MoreOrLessEquals(Vector3(-2.87435e-08, 1.20969379, -7.45339257e-09)));
      final positionKey_0_6_13 = channel_0_6.positionKeys.elementAt(13);
      expect(positionKey_0_6_13.time, moreOrLessEquals(13));
      expect(positionKey_0_6_13.value, vector3MoreOrLessEquals(Vector3(-3.31978711e-08, 1.20969379, -5.93557914e-09)));
      final positionKey_0_6_14 = channel_0_6.positionKeys.elementAt(14);
      expect(positionKey_0_6_14.time, moreOrLessEquals(14));
      expect(positionKey_0_6_14.value, vector3MoreOrLessEquals(Vector3(-3.76522493e-08, 1.20969379, -4.41776216e-09)));
      final positionKey_0_6_15 = channel_0_6.positionKeys.elementAt(15);
      expect(positionKey_0_6_15.time, moreOrLessEquals(15));
      expect(positionKey_0_6_15.value, vector3MoreOrLessEquals(Vector3(-4.21066204e-08, 1.20969379, -2.89994873e-09)));
      final positionKey_0_6_16 = channel_0_6.positionKeys.elementAt(16);
      expect(positionKey_0_6_16.time, moreOrLessEquals(16));
      expect(positionKey_0_6_16.value, vector3MoreOrLessEquals(Vector3(-4.65609915e-08, 1.20969379, -1.38213352e-09)));
      final positionKey_0_6_17 = channel_0_6.positionKeys.elementAt(17);
      expect(positionKey_0_6_17.time, moreOrLessEquals(17));
      expect(positionKey_0_6_17.value, vector3MoreOrLessEquals(Vector3(-5.10153697e-08, 1.20969379, 1.35681688e-10)));
      final positionKey_0_6_18 = channel_0_6.positionKeys.elementAt(18);
      expect(positionKey_0_6_18.time, moreOrLessEquals(18));
      expect(positionKey_0_6_18.value, vector3MoreOrLessEquals(Vector3(-5.54697408e-08, 1.20969379, 1.65349512e-09)));
      final positionKey_0_6_19 = channel_0_6.positionKeys.elementAt(19);
      expect(positionKey_0_6_19.time, moreOrLessEquals(19));
      expect(positionKey_0_6_19.value, vector3MoreOrLessEquals(Vector3(-5.9924119e-08, 1.20969379, 3.17131033e-09)));
      final positionKey_0_6_20 = channel_0_6.positionKeys.elementAt(20);
      expect(positionKey_0_6_20.time, moreOrLessEquals(20));
      expect(positionKey_0_6_20.value, vector3MoreOrLessEquals(Vector3(-6.43784901e-08, 1.20969379, 4.68912553e-09)));
      final positionKey_0_6_21 = channel_0_6.positionKeys.elementAt(21);
      expect(positionKey_0_6_21.time, moreOrLessEquals(21));
      expect(positionKey_0_6_21.value, vector3MoreOrLessEquals(Vector3(-6.88328612e-08, 1.20969379, 6.20694074e-09)));
      final positionKey_0_6_22 = channel_0_6.positionKeys.elementAt(22);
      expect(positionKey_0_6_22.time, moreOrLessEquals(22));
      expect(positionKey_0_6_22.value, vector3MoreOrLessEquals(Vector3(-7.32872394e-08, 1.20969379, 7.72475595e-09)));
      final positionKey_0_6_23 = channel_0_6.positionKeys.elementAt(23);
      expect(positionKey_0_6_23.time, moreOrLessEquals(23));
      expect(positionKey_0_6_23.value, vector3MoreOrLessEquals(Vector3(-7.77416105e-08, 1.20969379, 9.24257115e-09)));
      final positionKey_0_6_24 = channel_0_6.positionKeys.elementAt(24);
      expect(positionKey_0_6_24.time, moreOrLessEquals(24));
      expect(positionKey_0_6_24.value, vector3MoreOrLessEquals(Vector3(-8.21959887e-08, 1.20969379, 1.07603864e-08)));
      final positionKey_0_6_25 = channel_0_6.positionKeys.elementAt(25);
      expect(positionKey_0_6_25.time, moreOrLessEquals(25));
      expect(positionKey_0_6_25.value, vector3MoreOrLessEquals(Vector3(-8.66503598e-08, 1.20969379, 1.2278198e-08)));
      final positionKey_0_6_26 = channel_0_6.positionKeys.elementAt(26);
      expect(positionKey_0_6_26.time, moreOrLessEquals(26));
      expect(positionKey_0_6_26.value, vector3MoreOrLessEquals(Vector3(-9.11047309e-08, 1.20969379, 1.37960132e-08)));
      final positionKey_0_6_27 = channel_0_6.positionKeys.elementAt(27);
      expect(positionKey_0_6_27.time, moreOrLessEquals(27));
      expect(positionKey_0_6_27.value, vector3MoreOrLessEquals(Vector3(-9.55591091e-08, 1.20969379, 1.53138284e-08)));
      final positionKey_0_6_28 = channel_0_6.positionKeys.elementAt(28);
      expect(positionKey_0_6_28.time, moreOrLessEquals(28));
      expect(positionKey_0_6_28.value, vector3MoreOrLessEquals(Vector3(-1.00013487e-07, 1.20969379, 1.68316472e-08)));
      final positionKey_0_6_29 = channel_0_6.positionKeys.elementAt(29);
      expect(positionKey_0_6_29.time, moreOrLessEquals(29));
      expect(positionKey_0_6_29.value, vector3MoreOrLessEquals(Vector3(-1.04467851e-07, 1.20969379, 1.83494588e-08)));
      final positionKey_0_6_30 = channel_0_6.positionKeys.elementAt(30);
      expect(positionKey_0_6_30.time, moreOrLessEquals(30));
      expect(positionKey_0_6_30.value, vector3MoreOrLessEquals(Vector3(-1.08922229e-07, 1.20969391, 1.9867274e-08)));
      final positionKey_0_6_31 = channel_0_6.positionKeys.elementAt(31);
      expect(positionKey_0_6_31.time, moreOrLessEquals(31));
      expect(positionKey_0_6_31.value, vector3MoreOrLessEquals(Vector3(-1.13376608e-07, 1.20969391, 2.13850928e-08)));
      final positionKey_0_6_32 = channel_0_6.positionKeys.elementAt(32);
      expect(positionKey_0_6_32.time, moreOrLessEquals(32));
      expect(positionKey_0_6_32.value, vector3MoreOrLessEquals(Vector3(-1.17830972e-07, 1.20969391, 2.29029045e-08)));
      final positionKey_0_6_33 = channel_0_6.positionKeys.elementAt(33);
      expect(positionKey_0_6_33.time, moreOrLessEquals(33));
      expect(positionKey_0_6_33.value, vector3MoreOrLessEquals(Vector3(-1.22285343e-07, 1.20969391, 2.44207197e-08)));
      final positionKey_0_6_34 = channel_0_6.positionKeys.elementAt(34);
      expect(positionKey_0_6_34.time, moreOrLessEquals(34));
      expect(positionKey_0_6_34.value, vector3MoreOrLessEquals(Vector3(-1.26739735e-07, 1.20969391, 2.59385349e-08)));
      final positionKey_0_6_35 = channel_0_6.positionKeys.elementAt(35);
      expect(positionKey_0_6_35.time, moreOrLessEquals(35));
      expect(positionKey_0_6_35.value, vector3MoreOrLessEquals(Vector3(-1.31194099e-07, 1.20969391, 2.74563465e-08)));
      final positionKey_0_6_36 = channel_0_6.positionKeys.elementAt(36);
      expect(positionKey_0_6_36.time, moreOrLessEquals(36));
      expect(positionKey_0_6_36.value, vector3MoreOrLessEquals(Vector3(-1.35648463e-07, 1.20969391, 2.89741617e-08)));
      final positionKey_0_6_37 = channel_0_6.positionKeys.elementAt(37);
      expect(positionKey_0_6_37.time, moreOrLessEquals(37));
      expect(positionKey_0_6_37.value, vector3MoreOrLessEquals(Vector3(-1.40102856e-07, 1.20969391, 3.04919752e-08)));
      final positionKey_0_6_38 = channel_0_6.positionKeys.elementAt(38);
      expect(positionKey_0_6_38.time, moreOrLessEquals(38));
      expect(positionKey_0_6_38.value, vector3MoreOrLessEquals(Vector3(-1.4455722e-07, 1.20969391, 3.20097939e-08)));
      final positionKey_0_6_39 = channel_0_6.positionKeys.elementAt(39);
      expect(positionKey_0_6_39.time, moreOrLessEquals(39));
      expect(positionKey_0_6_39.value, vector3MoreOrLessEquals(Vector3(-1.49011612e-07, 1.20969391, 3.35276127e-08)));
      expect(channel_0_6.rotationKeys.length, equals(40));
      final rotationKey_0_6_0 = channel_0_6.rotationKeys.elementAt(0);
      expect(rotationKey_0_6_0.time, isZero);
      expect(rotationKey_0_6_0.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0.0423494205, 0.0423494205)));
      final rotationKey_0_6_1 = channel_0_6.rotationKeys.elementAt(1);
      expect(rotationKey_0_6_1.time, moreOrLessEquals(1));
      expect(rotationKey_0_6_1.value, quaternionMoreOrLessEquals(Quaternion(-0.000771381427, 0.00130695186, 0.0313990191, 0.0313990191)));
      final rotationKey_0_6_2 = channel_0_6.rotationKeys.elementAt(2);
      expect(rotationKey_0_6_2.time, moreOrLessEquals(2));
      expect(rotationKey_0_6_2.value, quaternionMoreOrLessEquals(Quaternion(-0.00310931751, 0.00528183999, -0.00179724453, -0.00179724453)));
      final rotationKey_0_6_3 = channel_0_6.rotationKeys.elementAt(3);
      expect(rotationKey_0_6_3.time, moreOrLessEquals(3));
      expect(rotationKey_0_6_3.value, quaternionMoreOrLessEquals(Quaternion(-0.00694933953, 0.0118426038, -0.0563729443, -0.0563729443)));
      final rotationKey_0_6_4 = channel_0_6.rotationKeys.elementAt(4);
      expect(rotationKey_0_6_4.time, moreOrLessEquals(4));
      expect(rotationKey_0_6_4.value, quaternionMoreOrLessEquals(Quaternion(-0.0120006725, 0.0205311328, -0.128280848, -0.128280848)));
      final rotationKey_0_6_5 = channel_0_6.rotationKeys.elementAt(5);
      expect(rotationKey_0_6_5.time, moreOrLessEquals(5));
      expect(rotationKey_0_6_5.value, quaternionMoreOrLessEquals(Quaternion(-0.0176851563, 0.0304031428, -0.209371597, -0.209371597)));
      final rotationKey_0_6_6 = channel_0_6.rotationKeys.elementAt(6);
      expect(rotationKey_0_6_6.time, moreOrLessEquals(6));
      expect(rotationKey_0_6_6.value, quaternionMoreOrLessEquals(Quaternion(-0.0232480168, 0.0402057096, -0.288899273, -0.288899273)));
      final rotationKey_0_6_7 = channel_0_6.rotationKeys.elementAt(7);
      expect(rotationKey_0_6_7.time, moreOrLessEquals(7));
      expect(rotationKey_0_6_7.value, quaternionMoreOrLessEquals(Quaternion(-0.0280182101, 0.0488128327, -0.35719952, -0.35719952)));
      final rotationKey_0_6_8 = channel_0_6.rotationKeys.elementAt(8);
      expect(rotationKey_0_6_8.time, moreOrLessEquals(8));
      expect(rotationKey_0_6_8.value, quaternionMoreOrLessEquals(Quaternion(-0.0316046961, 0.0555621833, -0.408533782, -0.408533782)));
      final rotationKey_0_6_9 = channel_0_6.rotationKeys.elementAt(9);
      expect(rotationKey_0_6_9.time, moreOrLessEquals(9));
      expect(rotationKey_0_6_9.value, quaternionMoreOrLessEquals(Quaternion(-0.0338903666, 0.0602538809, -0.44107765, -0.44107765)));
      final rotationKey_0_6_10 = channel_0_6.rotationKeys.elementAt(10);
      expect(rotationKey_0_6_10.time, moreOrLessEquals(10));
      expect(rotationKey_0_6_10.value, quaternionMoreOrLessEquals(Quaternion(-0.0349046029, 0.0629403889, -0.455145389, -0.455145389)));
      final rotationKey_0_6_11 = channel_0_6.rotationKeys.elementAt(11);
      expect(rotationKey_0_6_11.time, moreOrLessEquals(11));
      expect(rotationKey_0_6_11.value, quaternionMoreOrLessEquals(Quaternion(-0.0233369041, 0.0652602986, -0.459034204, -0.459034204)));
      final rotationKey_0_6_12 = channel_0_6.rotationKeys.elementAt(12);
      expect(rotationKey_0_6_12.time, moreOrLessEquals(12));
      expect(rotationKey_0_6_12.value, quaternionMoreOrLessEquals(Quaternion(0.0130469305, 0.0687526464, -0.459977835, -0.459977835)));
      final rotationKey_0_6_13 = channel_0_6.rotationKeys.elementAt(13);
      expect(rotationKey_0_6_13.time, moreOrLessEquals(13));
      expect(rotationKey_0_6_13.value, quaternionMoreOrLessEquals(Quaternion(0.0739425793, 0.073182717, -0.456662297, -0.456662297)));
      final rotationKey_0_6_14 = channel_0_6.rotationKeys.elementAt(14);
      expect(rotationKey_0_6_14.time, moreOrLessEquals(14));
      expect(rotationKey_0_6_14.value, quaternionMoreOrLessEquals(Quaternion(0.154986545, 0.0779999867, -0.4475725, -0.4475725)));
      final rotationKey_0_6_15 = channel_0_6.rotationKeys.elementAt(15);
      expect(rotationKey_0_6_15.time, moreOrLessEquals(15));
      expect(rotationKey_0_6_15.value, quaternionMoreOrLessEquals(Quaternion(0.246292681, 0.0824388713, -0.432279557, -0.432279557)));
      final rotationKey_0_6_16 = channel_0_6.rotationKeys.elementAt(16);
      expect(rotationKey_0_6_16.time, moreOrLessEquals(16));
      expect(rotationKey_0_6_16.value, quaternionMoreOrLessEquals(Quaternion(0.334487349, 0.0858574137, -0.412658095, -0.412658095)));
      final rotationKey_0_6_17 = channel_0_6.rotationKeys.elementAt(17);
      expect(rotationKey_0_6_17.time, moreOrLessEquals(17));
      expect(rotationKey_0_6_17.value, quaternionMoreOrLessEquals(Quaternion(0.40794903, 0.0880533308, -0.392528564, -0.392528564)));
      final rotationKey_0_6_18 = channel_0_6.rotationKeys.elementAt(18);
      expect(rotationKey_0_6_18.time, moreOrLessEquals(18));
      expect(rotationKey_0_6_18.value, quaternionMoreOrLessEquals(Quaternion(0.460562408, 0.0892371014, -0.375822723, -0.375822723)));
      final rotationKey_0_6_19 = channel_0_6.rotationKeys.elementAt(19);
      expect(rotationKey_0_6_19.time, moreOrLessEquals(19));
      expect(rotationKey_0_6_19.value, quaternionMoreOrLessEquals(Quaternion(0.491204202, 0.089761205, -0.365128547, -0.365128547)));
      final rotationKey_0_6_20 = channel_0_6.rotationKeys.elementAt(20);
      expect(rotationKey_0_6_20.time, moreOrLessEquals(20));
      expect(rotationKey_0_6_20.value, quaternionMoreOrLessEquals(Quaternion(0.501077652, 0.0899003148, -0.361515552, -0.361515552)));
      final rotationKey_0_6_21 = channel_0_6.rotationKeys.elementAt(21);
      expect(rotationKey_0_6_21.time, moreOrLessEquals(21));
      expect(rotationKey_0_6_21.value, quaternionMoreOrLessEquals(Quaternion(0.490510464, 0.0896266997, -0.365176648, -0.365176648)));
      final rotationKey_0_6_22 = channel_0_6.rotationKeys.elementAt(22);
      expect(rotationKey_0_6_22.time, moreOrLessEquals(22));
      expect(rotationKey_0_6_22.value, quaternionMoreOrLessEquals(Quaternion(0.45770359, 0.0886996165, -0.376000196, -0.376000196)));
      final rotationKey_0_6_23 = channel_0_6.rotationKeys.elementAt(23);
      expect(rotationKey_0_6_23.time, moreOrLessEquals(23));
      expect(rotationKey_0_6_23.value, quaternionMoreOrLessEquals(Quaternion(0.401333958, 0.0868543312, -0.392833382, -0.392833382)));
      final rotationKey_0_6_24 = channel_0_6.rotationKeys.elementAt(24);
      expect(rotationKey_0_6_24.time, moreOrLessEquals(24));
      expect(rotationKey_0_6_24.value, quaternionMoreOrLessEquals(Quaternion(0.322640777, 0.0837912187, -0.412927687, -0.412927687)));
      final rotationKey_0_6_25 = channel_0_6.rotationKeys.elementAt(25);
      expect(rotationKey_0_6_25.time, moreOrLessEquals(25));
      expect(rotationKey_0_6_25.value, quaternionMoreOrLessEquals(Quaternion(0.228389159, 0.0794382989, -0.432207733, -0.432207733)));
      final rotationKey_0_6_26 = channel_0_6.rotationKeys.elementAt(26);
      expect(rotationKey_0_6_26.time, moreOrLessEquals(26));
      expect(rotationKey_0_6_26.value, quaternionMoreOrLessEquals(Quaternion(0.131301582, 0.074219577, -0.446913689, -0.446913689)));
      final rotationKey_0_6_27 = channel_0_6.rotationKeys.elementAt(27);
      expect(rotationKey_0_6_27.time, moreOrLessEquals(27));
      expect(rotationKey_0_6_27.value, quaternionMoreOrLessEquals(Quaternion(0.0456845015, 0.0689966157, -0.455503076, -0.455503076)));
      final rotationKey_0_6_28 = channel_0_6.rotationKeys.elementAt(28);
      expect(rotationKey_0_6_28.time, moreOrLessEquals(28));
      expect(rotationKey_0_6_28.value, quaternionMoreOrLessEquals(Quaternion(-0.0182808116, 0.0646604002, -0.458816737, -0.458816737)));
      final rotationKey_0_6_29 = channel_0_6.rotationKeys.elementAt(29);
      expect(rotationKey_0_6_29.time, moreOrLessEquals(29));
      expect(rotationKey_0_6_29.value, quaternionMoreOrLessEquals(Quaternion(-0.056391485, 0.0617850311, -0.458640873, -0.458640873)));
      final rotationKey_0_6_30 = channel_0_6.rotationKeys.elementAt(30);
      expect(rotationKey_0_6_30.time, moreOrLessEquals(30));
      expect(rotationKey_0_6_30.value, quaternionMoreOrLessEquals(Quaternion(-0.0685210973, 0.0605807528, -0.456376135, -0.456376135)));
      final rotationKey_0_6_31 = channel_0_6.rotationKeys.elementAt(31);
      expect(rotationKey_0_6_31.time, moreOrLessEquals(31));
      expect(rotationKey_0_6_31.value, quaternionMoreOrLessEquals(Quaternion(-0.0672065839, 0.0605408587, -0.451983422, -0.451983422)));
      final rotationKey_0_6_32 = channel_0_6.rotationKeys.elementAt(32);
      expect(rotationKey_0_6_32.time, moreOrLessEquals(32));
      expect(rotationKey_0_6_32.value, quaternionMoreOrLessEquals(Quaternion(-0.0641054437, 0.0611527301, -0.444955379, -0.444955379)));
      final rotationKey_0_6_33 = channel_0_6.rotationKeys.elementAt(33);
      expect(rotationKey_0_6_33.time, moreOrLessEquals(33));
      expect(rotationKey_0_6_33.value, quaternionMoreOrLessEquals(Quaternion(-0.0593884103, 0.0623625703, -0.435585827, -0.435585827)));
      final rotationKey_0_6_34 = channel_0_6.rotationKeys.elementAt(34);
      expect(rotationKey_0_6_34.time, moreOrLessEquals(34));
      expect(rotationKey_0_6_34.value, quaternionMoreOrLessEquals(Quaternion(-0.0535045564, 0.0640220344, -0.42461288, -0.42461288)));
      final rotationKey_0_6_35 = channel_0_6.rotationKeys.elementAt(35);
      expect(rotationKey_0_6_35.time, moreOrLessEquals(35));
      expect(rotationKey_0_6_35.value, quaternionMoreOrLessEquals(Quaternion(-0.0471963845, 0.0658838972, -0.413245082, -0.413245082)));
      final rotationKey_0_6_36 = channel_0_6.rotationKeys.elementAt(36);
      expect(rotationKey_0_6_36.time, moreOrLessEquals(36));
      expect(rotationKey_0_6_36.value, quaternionMoreOrLessEquals(Quaternion(-0.0413508266, 0.0676519796, -0.402919382, -0.402919382)));
      final rotationKey_0_6_37 = channel_0_6.rotationKeys.elementAt(37);
      expect(rotationKey_0_6_37.time, moreOrLessEquals(37));
      expect(rotationKey_0_6_37.value, quaternionMoreOrLessEquals(Quaternion(-0.0367462896, 0.069065012, -0.394886971, -0.394886971)));
      final rotationKey_0_6_38 = channel_0_6.rotationKeys.elementAt(38);
      expect(rotationKey_0_6_38.time, moreOrLessEquals(38));
      expect(rotationKey_0_6_38.value, quaternionMoreOrLessEquals(Quaternion(-0.0338725783, 0.0699555948, -0.389917493, -0.389917493)));
      final rotationKey_0_6_39 = channel_0_6.rotationKeys.elementAt(39);
      expect(rotationKey_0_6_39.time, moreOrLessEquals(39));
      expect(rotationKey_0_6_39.value, quaternionMoreOrLessEquals(Quaternion(-0.0329138152, 0.0702548996, -0.388270319, -0.388270319)));
      expect(channel_0_6.scalingKeys.length, equals(40));
      final scalingKey_0_6_0 = channel_0_6.scalingKeys.elementAt(0);
      expect(scalingKey_0_6_0.time, isZero);
      expect(scalingKey_0_6_0.value, vector3MoreOrLessEquals(Vector3(1, 1, 1.00000012)));
      final scalingKey_0_6_1 = channel_0_6.scalingKeys.elementAt(1);
      expect(scalingKey_0_6_1.time, moreOrLessEquals(1));
      expect(scalingKey_0_6_1.value, vector3MoreOrLessEquals(Vector3(0.99999994, 1, 1.00000012)));
      final scalingKey_0_6_2 = channel_0_6.scalingKeys.elementAt(2);
      expect(scalingKey_0_6_2.time, moreOrLessEquals(2));
      expect(scalingKey_0_6_2.value, vector3MoreOrLessEquals(Vector3(1, 1, 1.00000012)));
      final scalingKey_0_6_3 = channel_0_6.scalingKeys.elementAt(3);
      expect(scalingKey_0_6_3.time, moreOrLessEquals(3));
      expect(scalingKey_0_6_3.value, vector3MoreOrLessEquals(Vector3(1, 1, 1.00000012)));
      final scalingKey_0_6_4 = channel_0_6.scalingKeys.elementAt(4);
      expect(scalingKey_0_6_4.time, moreOrLessEquals(4));
      expect(scalingKey_0_6_4.value, vector3MoreOrLessEquals(Vector3(1, 1, 1.00000012)));
      final scalingKey_0_6_5 = channel_0_6.scalingKeys.elementAt(5);
      expect(scalingKey_0_6_5.time, moreOrLessEquals(5));
      expect(scalingKey_0_6_5.value, vector3MoreOrLessEquals(Vector3(0.99999994, 1, 1.00000012)));
      final scalingKey_0_6_6 = channel_0_6.scalingKeys.elementAt(6);
      expect(scalingKey_0_6_6.time, moreOrLessEquals(6));
      expect(scalingKey_0_6_6.value, vector3MoreOrLessEquals(Vector3(0.99999994, 1, 1.00000012)));
      final scalingKey_0_6_7 = channel_0_6.scalingKeys.elementAt(7);
      expect(scalingKey_0_6_7.time, moreOrLessEquals(7));
      expect(scalingKey_0_6_7.value, vector3MoreOrLessEquals(Vector3(1, 1, 1.00000012)));
      final scalingKey_0_6_8 = channel_0_6.scalingKeys.elementAt(8);
      expect(scalingKey_0_6_8.time, moreOrLessEquals(8));
      expect(scalingKey_0_6_8.value, vector3MoreOrLessEquals(Vector3(0.99999994, 1, 1.00000012)));
      final scalingKey_0_6_9 = channel_0_6.scalingKeys.elementAt(9);
      expect(scalingKey_0_6_9.time, moreOrLessEquals(9));
      expect(scalingKey_0_6_9.value, vector3MoreOrLessEquals(Vector3(0.99999994, 1, 1.00000012)));
      final scalingKey_0_6_10 = channel_0_6.scalingKeys.elementAt(10);
      expect(scalingKey_0_6_10.time, moreOrLessEquals(10));
      expect(scalingKey_0_6_10.value, vector3MoreOrLessEquals(Vector3(1, 1, 1.00000012)));
      final scalingKey_0_6_11 = channel_0_6.scalingKeys.elementAt(11);
      expect(scalingKey_0_6_11.time, moreOrLessEquals(11));
      expect(scalingKey_0_6_11.value, vector3MoreOrLessEquals(Vector3(1, 1, 1.00000012)));
      final scalingKey_0_6_12 = channel_0_6.scalingKeys.elementAt(12);
      expect(scalingKey_0_6_12.time, moreOrLessEquals(12));
      expect(scalingKey_0_6_12.value, vector3MoreOrLessEquals(Vector3(1, 1, 1.00000012)));
      final scalingKey_0_6_13 = channel_0_6.scalingKeys.elementAt(13);
      expect(scalingKey_0_6_13.time, moreOrLessEquals(13));
      expect(scalingKey_0_6_13.value, vector3MoreOrLessEquals(Vector3(0.99999994, 1, 1.00000012)));
      final scalingKey_0_6_14 = channel_0_6.scalingKeys.elementAt(14);
      expect(scalingKey_0_6_14.time, moreOrLessEquals(14));
      expect(scalingKey_0_6_14.value, vector3MoreOrLessEquals(Vector3(1, 1, 1.00000012)));
      final scalingKey_0_6_15 = channel_0_6.scalingKeys.elementAt(15);
      expect(scalingKey_0_6_15.time, moreOrLessEquals(15));
      expect(scalingKey_0_6_15.value, vector3MoreOrLessEquals(Vector3(0.99999994, 1, 1.00000012)));
      final scalingKey_0_6_16 = channel_0_6.scalingKeys.elementAt(16);
      expect(scalingKey_0_6_16.time, moreOrLessEquals(16));
      expect(scalingKey_0_6_16.value, vector3MoreOrLessEquals(Vector3(1, 1, 1.00000012)));
      final scalingKey_0_6_17 = channel_0_6.scalingKeys.elementAt(17);
      expect(scalingKey_0_6_17.time, moreOrLessEquals(17));
      expect(scalingKey_0_6_17.value, vector3MoreOrLessEquals(Vector3(0.99999994, 1, 1)));
      final scalingKey_0_6_18 = channel_0_6.scalingKeys.elementAt(18);
      expect(scalingKey_0_6_18.time, moreOrLessEquals(18));
      expect(scalingKey_0_6_18.value, vector3MoreOrLessEquals(Vector3(1, 1, 1.00000012)));
      final scalingKey_0_6_19 = channel_0_6.scalingKeys.elementAt(19);
      expect(scalingKey_0_6_19.time, moreOrLessEquals(19));
      expect(scalingKey_0_6_19.value, vector3MoreOrLessEquals(Vector3(0.99999994, 1, 1.00000012)));
      final scalingKey_0_6_20 = channel_0_6.scalingKeys.elementAt(20);
      expect(scalingKey_0_6_20.time, moreOrLessEquals(20));
      expect(scalingKey_0_6_20.value, vector3MoreOrLessEquals(Vector3(1.00000012, 1, 0.99999994)));
      final scalingKey_0_6_21 = channel_0_6.scalingKeys.elementAt(21);
      expect(scalingKey_0_6_21.time, moreOrLessEquals(21));
      expect(scalingKey_0_6_21.value, vector3MoreOrLessEquals(Vector3(1.00000012, 0.99999994, 1)));
      final scalingKey_0_6_22 = channel_0_6.scalingKeys.elementAt(22);
      expect(scalingKey_0_6_22.time, moreOrLessEquals(22));
      expect(scalingKey_0_6_22.value, vector3MoreOrLessEquals(Vector3(1.00000012, 1, 0.99999994)));
      final scalingKey_0_6_23 = channel_0_6.scalingKeys.elementAt(23);
      expect(scalingKey_0_6_23.time, moreOrLessEquals(23));
      expect(scalingKey_0_6_23.value, vector3MoreOrLessEquals(Vector3(1.00000012, 1, 1)));
      final scalingKey_0_6_24 = channel_0_6.scalingKeys.elementAt(24);
      expect(scalingKey_0_6_24.time, moreOrLessEquals(24));
      expect(scalingKey_0_6_24.value, vector3MoreOrLessEquals(Vector3(1.00000012, 1, 1)));
      final scalingKey_0_6_25 = channel_0_6.scalingKeys.elementAt(25);
      expect(scalingKey_0_6_25.time, moreOrLessEquals(25));
      expect(scalingKey_0_6_25.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_6_26 = channel_0_6.scalingKeys.elementAt(26);
      expect(scalingKey_0_6_26.time, moreOrLessEquals(26));
      expect(scalingKey_0_6_26.value, vector3MoreOrLessEquals(Vector3(1.00000012, 1, 1)));
      final scalingKey_0_6_27 = channel_0_6.scalingKeys.elementAt(27);
      expect(scalingKey_0_6_27.time, moreOrLessEquals(27));
      expect(scalingKey_0_6_27.value, vector3MoreOrLessEquals(Vector3(1.00000012, 1, 0.99999994)));
      final scalingKey_0_6_28 = channel_0_6.scalingKeys.elementAt(28);
      expect(scalingKey_0_6_28.time, moreOrLessEquals(28));
      expect(scalingKey_0_6_28.value, vector3MoreOrLessEquals(Vector3(1.00000012, 0.99999994, 1)));
      final scalingKey_0_6_29 = channel_0_6.scalingKeys.elementAt(29);
      expect(scalingKey_0_6_29.time, moreOrLessEquals(29));
      expect(scalingKey_0_6_29.value, vector3MoreOrLessEquals(Vector3(1.00000012, 0.99999994, 1)));
      final scalingKey_0_6_30 = channel_0_6.scalingKeys.elementAt(30);
      expect(scalingKey_0_6_30.time, moreOrLessEquals(30));
      expect(scalingKey_0_6_30.value, vector3MoreOrLessEquals(Vector3(1.00000012, 1, 1)));
      final scalingKey_0_6_31 = channel_0_6.scalingKeys.elementAt(31);
      expect(scalingKey_0_6_31.time, moreOrLessEquals(31));
      expect(scalingKey_0_6_31.value, vector3MoreOrLessEquals(Vector3(1, 0.99999994, 1)));
      final scalingKey_0_6_32 = channel_0_6.scalingKeys.elementAt(32);
      expect(scalingKey_0_6_32.time, moreOrLessEquals(32));
      expect(scalingKey_0_6_32.value, vector3MoreOrLessEquals(Vector3(1.00000012, 0.99999994, 1)));
      final scalingKey_0_6_33 = channel_0_6.scalingKeys.elementAt(33);
      expect(scalingKey_0_6_33.time, moreOrLessEquals(33));
      expect(scalingKey_0_6_33.value, vector3MoreOrLessEquals(Vector3(1.00000012, 0.99999994, 1)));
      final scalingKey_0_6_34 = channel_0_6.scalingKeys.elementAt(34);
      expect(scalingKey_0_6_34.time, moreOrLessEquals(34));
      expect(scalingKey_0_6_34.value, vector3MoreOrLessEquals(Vector3(1.00000012, 1, 1)));
      final scalingKey_0_6_35 = channel_0_6.scalingKeys.elementAt(35);
      expect(scalingKey_0_6_35.time, moreOrLessEquals(35));
      expect(scalingKey_0_6_35.value, vector3MoreOrLessEquals(Vector3(1.00000012, 1, 0.99999994)));
      final scalingKey_0_6_36 = channel_0_6.scalingKeys.elementAt(36);
      expect(scalingKey_0_6_36.time, moreOrLessEquals(36));
      expect(scalingKey_0_6_36.value, vector3MoreOrLessEquals(Vector3(1, 0.99999994, 1)));
      final scalingKey_0_6_37 = channel_0_6.scalingKeys.elementAt(37);
      expect(scalingKey_0_6_37.time, moreOrLessEquals(37));
      expect(scalingKey_0_6_37.value, vector3MoreOrLessEquals(Vector3(1, 0.99999994, 1)));
      final scalingKey_0_6_38 = channel_0_6.scalingKeys.elementAt(38);
      expect(scalingKey_0_6_38.time, moreOrLessEquals(38));
      expect(scalingKey_0_6_38.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_6_39 = channel_0_6.scalingKeys.elementAt(39);
      expect(scalingKey_0_6_39.time, moreOrLessEquals(39));
      expect(scalingKey_0_6_39.value, vector3MoreOrLessEquals(Vector3(1.00000012, 1, 1)));
      expect(channel_0_6.preState, equals(AnimBehavior.defaults));
      expect(channel_0_6.postState, equals(AnimBehavior.defaults));
      final  channel_0_7 = animation_0.channels.elementAt(7);
      expect(channel_0_7.positionKeys.length, equals(40));
      final positionKey_0_7_0 = channel_0_7.positionKeys.elementAt(0);
      expect(positionKey_0_7_0.time, isZero);
      expect(positionKey_0_7_0.value, vector3MoreOrLessEquals(Vector3(-2.00879185e-07, 1.30275965, -3.64732458e-08)));
      final positionKey_0_7_1 = channel_0_7.positionKeys.elementAt(1);
      expect(positionKey_0_7_1.time, moreOrLessEquals(1));
      expect(positionKey_0_7_1.value, vector3MoreOrLessEquals(Vector3(-1.95728433e-07, 1.30275965, -3.47738727e-08)));
      final positionKey_0_7_2 = channel_0_7.positionKeys.elementAt(2);
      expect(positionKey_0_7_2.time, moreOrLessEquals(2));
      expect(positionKey_0_7_2.value, vector3MoreOrLessEquals(Vector3(-1.90577694e-07, 1.30275965, -3.30744996e-08)));
      final positionKey_0_7_3 = channel_0_7.positionKeys.elementAt(3);
      expect(positionKey_0_7_3.time, moreOrLessEquals(3));
      expect(positionKey_0_7_3.value, vector3MoreOrLessEquals(Vector3(-1.85426941e-07, 1.30275965, -3.13751265e-08)));
      final positionKey_0_7_4 = channel_0_7.positionKeys.elementAt(4);
      expect(positionKey_0_7_4.time, moreOrLessEquals(4));
      expect(positionKey_0_7_4.value, vector3MoreOrLessEquals(Vector3(-1.80276189e-07, 1.30275965, -2.96757516e-08)));
      final positionKey_0_7_5 = channel_0_7.positionKeys.elementAt(5);
      expect(positionKey_0_7_5.time, moreOrLessEquals(5));
      expect(positionKey_0_7_5.value, vector3MoreOrLessEquals(Vector3(-1.7512545e-07, 1.30275965, -2.79763785e-08)));
      final positionKey_0_7_6 = channel_0_7.positionKeys.elementAt(6);
      expect(positionKey_0_7_6.time, moreOrLessEquals(6));
      expect(positionKey_0_7_6.value, vector3MoreOrLessEquals(Vector3(-1.69974697e-07, 1.30275965, -2.62770055e-08)));
      final positionKey_0_7_7 = channel_0_7.positionKeys.elementAt(7);
      expect(positionKey_0_7_7.time, moreOrLessEquals(7));
      expect(positionKey_0_7_7.value, vector3MoreOrLessEquals(Vector3(-1.64823945e-07, 1.30275965, -2.45776306e-08)));
      final positionKey_0_7_8 = channel_0_7.positionKeys.elementAt(8);
      expect(positionKey_0_7_8.time, moreOrLessEquals(8));
      expect(positionKey_0_7_8.value, vector3MoreOrLessEquals(Vector3(-1.59673206e-07, 1.30275965, -2.28782575e-08)));
      final positionKey_0_7_9 = channel_0_7.positionKeys.elementAt(9);
      expect(positionKey_0_7_9.time, moreOrLessEquals(9));
      expect(positionKey_0_7_9.value, vector3MoreOrLessEquals(Vector3(-1.54522453e-07, 1.30275965, -2.11788844e-08)));
      final positionKey_0_7_10 = channel_0_7.positionKeys.elementAt(10);
      expect(positionKey_0_7_10.time, moreOrLessEquals(10));
      expect(positionKey_0_7_10.value, vector3MoreOrLessEquals(Vector3(-1.49371701e-07, 1.30275977, -1.94795113e-08)));
      final positionKey_0_7_11 = channel_0_7.positionKeys.elementAt(11);
      expect(positionKey_0_7_11.time, moreOrLessEquals(11));
      expect(positionKey_0_7_11.value, vector3MoreOrLessEquals(Vector3(-1.44220962e-07, 1.30275977, -1.77801383e-08)));
      final positionKey_0_7_12 = channel_0_7.positionKeys.elementAt(12);
      expect(positionKey_0_7_12.time, moreOrLessEquals(12));
      expect(positionKey_0_7_12.value, vector3MoreOrLessEquals(Vector3(-1.3907021e-07, 1.30275977, -1.60807652e-08)));
      final positionKey_0_7_13 = channel_0_7.positionKeys.elementAt(13);
      expect(positionKey_0_7_13.time, moreOrLessEquals(13));
      expect(positionKey_0_7_13.value, vector3MoreOrLessEquals(Vector3(-1.33919457e-07, 1.30275977, -1.43813903e-08)));
      final positionKey_0_7_14 = channel_0_7.positionKeys.elementAt(14);
      expect(positionKey_0_7_14.time, moreOrLessEquals(14));
      expect(positionKey_0_7_14.value, vector3MoreOrLessEquals(Vector3(-1.28768704e-07, 1.30275977, -1.26820154e-08)));
      final positionKey_0_7_15 = channel_0_7.positionKeys.elementAt(15);
      expect(positionKey_0_7_15.time, moreOrLessEquals(15));
      expect(positionKey_0_7_15.value, vector3MoreOrLessEquals(Vector3(-1.23617966e-07, 1.30275977, -1.09826441e-08)));
      final positionKey_0_7_16 = channel_0_7.positionKeys.elementAt(16);
      expect(positionKey_0_7_16.time, moreOrLessEquals(16));
      expect(positionKey_0_7_16.value, vector3MoreOrLessEquals(Vector3(-1.1846722e-07, 1.30275977, -9.28327104e-09)));
      final positionKey_0_7_17 = channel_0_7.positionKeys.elementAt(17);
      expect(positionKey_0_7_17.time, moreOrLessEquals(17));
      expect(positionKey_0_7_17.value, vector3MoreOrLessEquals(Vector3(-1.13316467e-07, 1.30275977, -7.58389795e-09)));
      final positionKey_0_7_18 = channel_0_7.positionKeys.elementAt(18);
      expect(positionKey_0_7_18.time, moreOrLessEquals(18));
      expect(positionKey_0_7_18.value, vector3MoreOrLessEquals(Vector3(-1.08165722e-07, 1.30275977, -5.88452309e-09)));
      final positionKey_0_7_19 = channel_0_7.positionKeys.elementAt(19);
      expect(positionKey_0_7_19.time, moreOrLessEquals(19));
      expect(positionKey_0_7_19.value, vector3MoreOrLessEquals(Vector3(-1.03014976e-07, 1.30275977, -4.18515e-09)));
      final positionKey_0_7_20 = channel_0_7.positionKeys.elementAt(20);
      expect(positionKey_0_7_20.time, moreOrLessEquals(20));
      expect(positionKey_0_7_20.value, vector3MoreOrLessEquals(Vector3(-9.78642234e-08, 1.30275977, -2.48577692e-09)));
      final positionKey_0_7_21 = channel_0_7.positionKeys.elementAt(21);
      expect(positionKey_0_7_21.time, moreOrLessEquals(21));
      expect(positionKey_0_7_21.value, vector3MoreOrLessEquals(Vector3(-9.27134778e-08, 1.30275977, -7.86403831e-10)));
      final positionKey_0_7_22 = channel_0_7.positionKeys.elementAt(22);
      expect(positionKey_0_7_22.time, moreOrLessEquals(22));
      expect(positionKey_0_7_22.value, vector3MoreOrLessEquals(Vector3(-8.75627251e-08, 1.30275977, 9.12969256e-10)));
      final positionKey_0_7_23 = channel_0_7.positionKeys.elementAt(23);
      expect(positionKey_0_7_23.time, moreOrLessEquals(23));
      expect(positionKey_0_7_23.value, vector3MoreOrLessEquals(Vector3(-8.24119795e-08, 1.30275977, 2.61234234e-09)));
      final positionKey_0_7_24 = channel_0_7.positionKeys.elementAt(24);
      expect(positionKey_0_7_24.time, moreOrLessEquals(24));
      expect(positionKey_0_7_24.value, vector3MoreOrLessEquals(Vector3(-7.72612339e-08, 1.30275977, 4.31171543e-09)));
      final positionKey_0_7_25 = channel_0_7.positionKeys.elementAt(25);
      expect(positionKey_0_7_25.time, moreOrLessEquals(25));
      expect(positionKey_0_7_25.value, vector3MoreOrLessEquals(Vector3(-7.21104811e-08, 1.30275977, 6.01108852e-09)));
      final positionKey_0_7_26 = channel_0_7.positionKeys.elementAt(26);
      expect(positionKey_0_7_26.time, moreOrLessEquals(26));
      expect(positionKey_0_7_26.value, vector3MoreOrLessEquals(Vector3(-6.69597426e-08, 1.30275977, 7.71046516e-09)));
      final positionKey_0_7_27 = channel_0_7.positionKeys.elementAt(27);
      expect(positionKey_0_7_27.time, moreOrLessEquals(27));
      expect(positionKey_0_7_27.value, vector3MoreOrLessEquals(Vector3(-6.18089899e-08, 1.30275977, 9.40983824e-09)));
      final positionKey_0_7_28 = channel_0_7.positionKeys.elementAt(28);
      expect(positionKey_0_7_28.time, moreOrLessEquals(28));
      expect(positionKey_0_7_28.value, vector3MoreOrLessEquals(Vector3(-5.6658223e-08, 1.30275977, 1.11092149e-08)));
      final positionKey_0_7_29 = channel_0_7.positionKeys.elementAt(29);
      expect(positionKey_0_7_29.time, moreOrLessEquals(29));
      expect(positionKey_0_7_29.value, vector3MoreOrLessEquals(Vector3(-5.15074987e-08, 1.30275977, 1.28085844e-08)));
      final positionKey_0_7_30 = channel_0_7.positionKeys.elementAt(30);
      expect(positionKey_0_7_30.time, moreOrLessEquals(30));
      expect(positionKey_0_7_30.value, vector3MoreOrLessEquals(Vector3(-4.6356746e-08, 1.30275989, 1.45079575e-08)));
      final positionKey_0_7_31 = channel_0_7.positionKeys.elementAt(31);
      expect(positionKey_0_7_31.time, moreOrLessEquals(31));
      expect(positionKey_0_7_31.value, vector3MoreOrLessEquals(Vector3(-4.12059791e-08, 1.30275989, 1.62073341e-08)));
      final positionKey_0_7_32 = channel_0_7.positionKeys.elementAt(32);
      expect(positionKey_0_7_32.time, moreOrLessEquals(32));
      expect(positionKey_0_7_32.value, vector3MoreOrLessEquals(Vector3(-3.60552548e-08, 1.30275989, 1.79067037e-08)));
      final positionKey_0_7_33 = channel_0_7.positionKeys.elementAt(33);
      expect(positionKey_0_7_33.time, moreOrLessEquals(33));
      expect(positionKey_0_7_33.value, vector3MoreOrLessEquals(Vector3(-3.09045021e-08, 1.30275989, 1.96060768e-08)));
      final positionKey_0_7_34 = channel_0_7.positionKeys.elementAt(34);
      expect(positionKey_0_7_34.time, moreOrLessEquals(34));
      expect(positionKey_0_7_34.value, vector3MoreOrLessEquals(Vector3(-2.57537494e-08, 1.30275989, 2.13054498e-08)));
      final positionKey_0_7_35 = channel_0_7.positionKeys.elementAt(35);
      expect(positionKey_0_7_35.time, moreOrLessEquals(35));
      expect(positionKey_0_7_35.value, vector3MoreOrLessEquals(Vector3(-2.06030109e-08, 1.30275989, 2.30048229e-08)));
      final positionKey_0_7_36 = channel_0_7.positionKeys.elementAt(36);
      expect(positionKey_0_7_36.time, moreOrLessEquals(36));
      expect(positionKey_0_7_36.value, vector3MoreOrLessEquals(Vector3(-1.54522581e-08, 1.30275989, 2.47041996e-08)));
      final positionKey_0_7_37 = channel_0_7.positionKeys.elementAt(37);
      expect(positionKey_0_7_37.time, moreOrLessEquals(37));
      expect(positionKey_0_7_37.value, vector3MoreOrLessEquals(Vector3(-1.03015054e-08, 1.30275989, 2.64035691e-08)));
      final positionKey_0_7_38 = channel_0_7.positionKeys.elementAt(38);
      expect(positionKey_0_7_38.time, moreOrLessEquals(38));
      expect(positionKey_0_7_38.value, vector3MoreOrLessEquals(Vector3(-5.15076692e-09, 1.30275989, 2.81029457e-08)));
      final positionKey_0_7_39 = channel_0_7.positionKeys.elementAt(39);
      expect(positionKey_0_7_39.time, moreOrLessEquals(39));
      expect(positionKey_0_7_39.value, vector3MoreOrLessEquals(Vector3(0, 1.30275989, 2.98023224e-08)));
      expect(channel_0_7.rotationKeys.length, equals(40));
      final rotationKey_0_7_0 = channel_0_7.rotationKeys.elementAt(0);
      expect(rotationKey_0_7_0.time, isZero);
      expect(rotationKey_0_7_0.value, quaternionMoreOrLessEquals(Quaternion(0, 0, -0.011526146, -0.011526146)));
      final rotationKey_0_7_1 = channel_0_7.rotationKeys.elementAt(1);
      expect(rotationKey_0_7_1.time, moreOrLessEquals(1));
      expect(rotationKey_0_7_1.value, quaternionMoreOrLessEquals(Quaternion(0.0083655268, 0.0166428722, -0.010987944, -0.010987944)));
      final rotationKey_0_7_2 = channel_0_7.rotationKeys.elementAt(2);
      expect(rotationKey_0_7_2.time, moreOrLessEquals(2));
      expect(rotationKey_0_7_2.value, quaternionMoreOrLessEquals(Quaternion(0.0344843417, 0.0685605705, -0.00902392901, -0.00902392901)));
      final rotationKey_0_7_3 = channel_0_7.rotationKeys.elementAt(3);
      expect(rotationKey_0_7_3.time, moreOrLessEquals(3));
      expect(rotationKey_0_7_3.value, quaternionMoreOrLessEquals(Quaternion(0.0795979872, 0.158144221, -0.0049107559, -0.0049107559)));
      final rotationKey_0_7_4 = channel_0_7.rotationKeys.elementAt(4);
      expect(rotationKey_0_7_4.time, moreOrLessEquals(4));
      expect(rotationKey_0_7_4.value, quaternionMoreOrLessEquals(Quaternion(0.141785979, 0.281506836, 0.00215266156, 0.00215266156)));
      final rotationKey_0_7_5 = channel_0_7.rotationKeys.elementAt(5);
      expect(rotationKey_0_7_5.time, moreOrLessEquals(5));
      expect(rotationKey_0_7_5.value, quaternionMoreOrLessEquals(Quaternion(0.2121308, 0.420920342, 0.0124645494, 0.0124645494)));
      final rotationKey_0_7_6 = channel_0_7.rotationKeys.elementAt(6);
      expect(rotationKey_0_7_6.time, moreOrLessEquals(6));
      expect(rotationKey_0_7_6.value, quaternionMoreOrLessEquals(Quaternion(0.276372433, 0.548144102, 0.0253194366, 0.0253194366)));
      final rotationKey_0_7_7 = channel_0_7.rotationKeys.elementAt(7);
      expect(rotationKey_0_7_7.time, moreOrLessEquals(7));
      expect(rotationKey_0_7_7.value, quaternionMoreOrLessEquals(Quaternion(0.324095666, 0.64261353, 0.0395457447, 0.0395457447)));
      final rotationKey_0_7_8 = channel_0_7.rotationKeys.elementAt(8);
      expect(rotationKey_0_7_8.time, moreOrLessEquals(8));
      expect(rotationKey_0_7_8.value, quaternionMoreOrLessEquals(Quaternion(0.353824943, 0.701463282, 0.0545349903, 0.0545349903)));
      final rotationKey_0_7_9 = channel_0_7.rotationKeys.elementAt(9);
      expect(rotationKey_0_7_9.time, moreOrLessEquals(9));
      expect(rotationKey_0_7_9.value, quaternionMoreOrLessEquals(Quaternion(0.369037688, 0.731591344, 0.0704643801, 0.0704643801)));
      final rotationKey_0_7_10 = channel_0_7.rotationKeys.elementAt(10);
      expect(rotationKey_0_7_10.time, moreOrLessEquals(10));
      expect(rotationKey_0_7_10.value, quaternionMoreOrLessEquals(Quaternion(0.373204917, 0.73985076, 0.0879223794, 0.0879223794)));
      final rotationKey_0_7_11 = channel_0_7.rotationKeys.elementAt(11);
      expect(rotationKey_0_7_11.time, moreOrLessEquals(11));
      expect(rotationKey_0_7_11.value, quaternionMoreOrLessEquals(Quaternion(0.372935325, 0.73444587, 0.110036694, 0.110036694)));
      final rotationKey_0_7_12 = channel_0_7.rotationKeys.elementAt(12);
      expect(rotationKey_0_7_12.time, moreOrLessEquals(12));
      expect(rotationKey_0_7_12.value, quaternionMoreOrLessEquals(Quaternion(0.372989744, 0.720206857, 0.139352292, 0.139352292)));
      final rotationKey_0_7_13 = channel_0_7.rotationKeys.elementAt(13);
      expect(rotationKey_0_7_13.time, moreOrLessEquals(13));
      expect(rotationKey_0_7_13.value, quaternionMoreOrLessEquals(Quaternion(0.372377038, 0.696358383, 0.174995303, 0.174995303)));
      final rotationKey_0_7_14 = channel_0_7.rotationKeys.elementAt(14);
      expect(rotationKey_0_7_14.time, moreOrLessEquals(14));
      expect(rotationKey_0_7_14.value, quaternionMoreOrLessEquals(Quaternion(0.369761258, 0.6629197, 0.214853376, 0.214853376)));
      final rotationKey_0_7_15 = channel_0_7.rotationKeys.elementAt(15);
      expect(rotationKey_0_7_15.time, moreOrLessEquals(15));
      expect(rotationKey_0_7_15.value, quaternionMoreOrLessEquals(Quaternion(0.36379388, 0.621511519, 0.255513608, 0.255513608)));
      final rotationKey_0_7_16 = channel_0_7.rotationKeys.elementAt(16);
      expect(rotationKey_0_7_16.time, moreOrLessEquals(16));
      expect(rotationKey_0_7_16.value, quaternionMoreOrLessEquals(Quaternion(0.353623629, 0.575646996, 0.292942733, 0.292942733)));
      final rotationKey_0_7_17 = channel_0_7.rotationKeys.elementAt(17);
      expect(rotationKey_0_7_17.time, moreOrLessEquals(17));
      expect(rotationKey_0_7_17.value, quaternionMoreOrLessEquals(Quaternion(0.339220941, 0.529954851, 0.32369566, 0.32369566)));
      final rotationKey_0_7_18 = channel_0_7.rotationKeys.elementAt(18);
      expect(rotationKey_0_7_18.time, moreOrLessEquals(18));
      expect(rotationKey_0_7_18.value, quaternionMoreOrLessEquals(Quaternion(0.321239322, 0.488742679, 0.345803142, 0.345803142)));
      final rotationKey_0_7_19 = channel_0_7.rotationKeys.elementAt(19);
      expect(rotationKey_0_7_19.time, moreOrLessEquals(19));
      expect(rotationKey_0_7_19.value, quaternionMoreOrLessEquals(Quaternion(0.300574183, 0.454949766, 0.358792424, 0.358792424)));
      final rotationKey_0_7_20 = channel_0_7.rotationKeys.elementAt(20);
      expect(rotationKey_0_7_20.time, moreOrLessEquals(20));
      expect(rotationKey_0_7_20.value, quaternionMoreOrLessEquals(Quaternion(0.277987063, 0.429984152, 0.363120884, 0.363120884)));
      final rotationKey_0_7_21 = channel_0_7.rotationKeys.elementAt(21);
      expect(rotationKey_0_7_21.time, moreOrLessEquals(21));
      expect(rotationKey_0_7_21.value, quaternionMoreOrLessEquals(Quaternion(0.249197111, 0.410816938, 0.361142218, 0.361142218)));
      final rotationKey_0_7_22 = channel_0_7.rotationKeys.elementAt(22);
      expect(rotationKey_0_7_22.time, moreOrLessEquals(22));
      expect(rotationKey_0_7_22.value, quaternionMoreOrLessEquals(Quaternion(0.209449872, 0.394009858, 0.354137272, 0.354137272)));
      final rotationKey_0_7_23 = channel_0_7.rotationKeys.elementAt(23);
      expect(rotationKey_0_7_23.time, moreOrLessEquals(23));
      expect(rotationKey_0_7_23.value, quaternionMoreOrLessEquals(Quaternion(0.15949057, 0.379341394, 0.341342509, 0.341342509)));
      final rotationKey_0_7_24 = channel_0_7.rotationKeys.elementAt(24);
      expect(rotationKey_0_7_24.time, moreOrLessEquals(24));
      expect(rotationKey_0_7_24.value, quaternionMoreOrLessEquals(Quaternion(0.101896159, 0.366509527, 0.322458327, 0.322458327)));
      final rotationKey_0_7_25 = channel_0_7.rotationKeys.elementAt(25);
      expect(rotationKey_0_7_25.time, moreOrLessEquals(25));
      expect(rotationKey_0_7_25.value, quaternionMoreOrLessEquals(Quaternion(0.0414126851, 0.355239898, 0.298147231, 0.298147231)));
      final rotationKey_0_7_26 = channel_0_7.rotationKeys.elementAt(26);
      expect(rotationKey_0_7_26.time, moreOrLessEquals(26));
      expect(rotationKey_0_7_26.value, quaternionMoreOrLessEquals(Quaternion(-0.0158292148, 0.345409065, 0.27021575, 0.27021575)));
      final rotationKey_0_7_27 = channel_0_7.rotationKeys.elementAt(27);
      expect(rotationKey_0_7_27.time, moreOrLessEquals(27));
      expect(rotationKey_0_7_27.value, quaternionMoreOrLessEquals(Quaternion(-0.0640871227, 0.337059438, 0.241156533, 0.241156533)));
      final rotationKey_0_7_28 = channel_0_7.rotationKeys.elementAt(28);
      expect(rotationKey_0_7_28.time, moreOrLessEquals(28));
      expect(rotationKey_0_7_28.value, quaternionMoreOrLessEquals(Quaternion(-0.0995523557, 0.330278575, 0.213312551, 0.213312551)));
      final rotationKey_0_7_29 = channel_0_7.rotationKeys.elementAt(29);
      expect(rotationKey_0_7_29.time, moreOrLessEquals(29));
      expect(rotationKey_0_7_29.value, quaternionMoreOrLessEquals(Quaternion(-0.120684803, 0.325060546, 0.188285336, 0.188285336)));
      final rotationKey_0_7_30 = channel_0_7.rotationKeys.elementAt(30);
      expect(rotationKey_0_7_30.time, moreOrLessEquals(30));
      expect(rotationKey_0_7_30.value, quaternionMoreOrLessEquals(Quaternion(-0.127573609, 0.321249068, 0.166848958, 0.166848958)));
      final rotationKey_0_7_31 = channel_0_7.rotationKeys.elementAt(31);
      expect(rotationKey_0_7_31.time, moreOrLessEquals(31));
      expect(rotationKey_0_7_31.value, quaternionMoreOrLessEquals(Quaternion(-0.127636492, 0.318325788, 0.145612389, 0.145612389)));
      final rotationKey_0_7_32 = channel_0_7.rotationKeys.elementAt(32);
      expect(rotationKey_0_7_32.time, moreOrLessEquals(32));
      expect(rotationKey_0_7_32.value, quaternionMoreOrLessEquals(Quaternion(-0.127747267, 0.315955192, 0.121290468, 0.121290468)));
      final rotationKey_0_7_33 = channel_0_7.rotationKeys.elementAt(33);
      expect(rotationKey_0_7_33.time, moreOrLessEquals(33));
      expect(rotationKey_0_7_33.value, quaternionMoreOrLessEquals(Quaternion(-0.127874866, 0.314133108, 0.0948064104, 0.0948064104)));
      final rotationKey_0_7_34 = channel_0_7.rotationKeys.elementAt(34);
      expect(rotationKey_0_7_34.time, moreOrLessEquals(34));
      expect(rotationKey_0_7_34.value, quaternionMoreOrLessEquals(Quaternion(-0.1279874, 0.312824875, 0.0678386465, 0.0678386465)));
      final rotationKey_0_7_35 = channel_0_7.rotationKeys.elementAt(35);
      expect(rotationKey_0_7_35.time, moreOrLessEquals(35));
      expect(rotationKey_0_7_35.value, quaternionMoreOrLessEquals(Quaternion(-0.128063753, 0.311964035, 0.0426545404, 0.0426545404)));
      final rotationKey_0_7_36 = channel_0_7.rotationKeys.elementAt(36);
      expect(rotationKey_0_7_36.time, moreOrLessEquals(36));
      expect(rotationKey_0_7_36.value, quaternionMoreOrLessEquals(Quaternion(-0.128101781, 0.311460674, 0.0215273909, 0.0215273909)));
      final rotationKey_0_7_37 = channel_0_7.rotationKeys.elementAt(37);
      expect(rotationKey_0_7_37.time, moreOrLessEquals(37));
      expect(rotationKey_0_7_37.value, quaternionMoreOrLessEquals(Quaternion(-0.128114492, 0.311216444, 0.00606547249, 0.00606547249)));
      final rotationKey_0_7_38 = channel_0_7.rotationKeys.elementAt(38);
      expect(rotationKey_0_7_38.time, moreOrLessEquals(38));
      expect(rotationKey_0_7_38.value, quaternionMoreOrLessEquals(Quaternion(-0.128117293, 0.311134607, -0.00307331653, -0.00307331653)));
      final rotationKey_0_7_39 = channel_0_7.rotationKeys.elementAt(39);
      expect(rotationKey_0_7_39.time, moreOrLessEquals(39));
      expect(rotationKey_0_7_39.value, quaternionMoreOrLessEquals(Quaternion(-0.128118217, 0.311125815, -0.00600964855, -0.00600964855)));
      expect(channel_0_7.scalingKeys.length, equals(40));
      final scalingKey_0_7_0 = channel_0_7.scalingKeys.elementAt(0);
      expect(scalingKey_0_7_0.time, isZero);
      expect(scalingKey_0_7_0.value, vector3MoreOrLessEquals(Vector3(0.999999821, 0.999999821, 1)));
      final scalingKey_0_7_1 = channel_0_7.scalingKeys.elementAt(1);
      expect(scalingKey_0_7_1.time, moreOrLessEquals(1));
      expect(scalingKey_0_7_1.value, vector3MoreOrLessEquals(Vector3(0.999999881, 0.999999881, 1)));
      final scalingKey_0_7_2 = channel_0_7.scalingKeys.elementAt(2);
      expect(scalingKey_0_7_2.time, moreOrLessEquals(2));
      expect(scalingKey_0_7_2.value, vector3MoreOrLessEquals(Vector3(0.999999821, 0.999999881, 1)));
      final scalingKey_0_7_3 = channel_0_7.scalingKeys.elementAt(3);
      expect(scalingKey_0_7_3.time, moreOrLessEquals(3));
      expect(scalingKey_0_7_3.value, vector3MoreOrLessEquals(Vector3(0.999999881, 0.999999881, 1)));
      final scalingKey_0_7_4 = channel_0_7.scalingKeys.elementAt(4);
      expect(scalingKey_0_7_4.time, moreOrLessEquals(4));
      expect(scalingKey_0_7_4.value, vector3MoreOrLessEquals(Vector3(0.999999881, 0.999999881, 0.99999994)));
      final scalingKey_0_7_5 = channel_0_7.scalingKeys.elementAt(5);
      expect(scalingKey_0_7_5.time, moreOrLessEquals(5));
      expect(scalingKey_0_7_5.value, vector3MoreOrLessEquals(Vector3(0.999999881, 0.999999881, 1)));
      final scalingKey_0_7_6 = channel_0_7.scalingKeys.elementAt(6);
      expect(scalingKey_0_7_6.time, moreOrLessEquals(6));
      expect(scalingKey_0_7_6.value, vector3MoreOrLessEquals(Vector3(0.999999881, 0.999999881, 0.99999994)));
      final scalingKey_0_7_7 = channel_0_7.scalingKeys.elementAt(7);
      expect(scalingKey_0_7_7.time, moreOrLessEquals(7));
      expect(scalingKey_0_7_7.value, vector3MoreOrLessEquals(Vector3(0.999999881, 0.999999881, 1)));
      final scalingKey_0_7_8 = channel_0_7.scalingKeys.elementAt(8);
      expect(scalingKey_0_7_8.time, moreOrLessEquals(8));
      expect(scalingKey_0_7_8.value, vector3MoreOrLessEquals(Vector3(0.999999821, 0.999999881, 0.99999994)));
      final scalingKey_0_7_9 = channel_0_7.scalingKeys.elementAt(9);
      expect(scalingKey_0_7_9.time, moreOrLessEquals(9));
      expect(scalingKey_0_7_9.value, vector3MoreOrLessEquals(Vector3(0.999999762, 0.999999881, 0.999999881)));
      final scalingKey_0_7_10 = channel_0_7.scalingKeys.elementAt(10);
      expect(scalingKey_0_7_10.time, moreOrLessEquals(10));
      expect(scalingKey_0_7_10.value, vector3MoreOrLessEquals(Vector3(0.999999821, 0.999999821, 0.999999881)));
      final scalingKey_0_7_11 = channel_0_7.scalingKeys.elementAt(11);
      expect(scalingKey_0_7_11.time, moreOrLessEquals(11));
      expect(scalingKey_0_7_11.value, vector3MoreOrLessEquals(Vector3(0.99999994, 0.999999881, 0.99999994)));
      final scalingKey_0_7_12 = channel_0_7.scalingKeys.elementAt(12);
      expect(scalingKey_0_7_12.time, moreOrLessEquals(12));
      expect(scalingKey_0_7_12.value, vector3MoreOrLessEquals(Vector3(0.99999994, 0.99999994, 1.00000012)));
      final scalingKey_0_7_13 = channel_0_7.scalingKeys.elementAt(13);
      expect(scalingKey_0_7_13.time, moreOrLessEquals(13));
      expect(scalingKey_0_7_13.value, vector3MoreOrLessEquals(Vector3(0.999999881, 0.999999881, 1)));
      final scalingKey_0_7_14 = channel_0_7.scalingKeys.elementAt(14);
      expect(scalingKey_0_7_14.time, moreOrLessEquals(14));
      expect(scalingKey_0_7_14.value, vector3MoreOrLessEquals(Vector3(0.99999994, 0.99999994, 1)));
      final scalingKey_0_7_15 = channel_0_7.scalingKeys.elementAt(15);
      expect(scalingKey_0_7_15.time, moreOrLessEquals(15));
      expect(scalingKey_0_7_15.value, vector3MoreOrLessEquals(Vector3(0.999999821, 0.999999881, 0.99999994)));
      final scalingKey_0_7_16 = channel_0_7.scalingKeys.elementAt(16);
      expect(scalingKey_0_7_16.time, moreOrLessEquals(16));
      expect(scalingKey_0_7_16.value, vector3MoreOrLessEquals(Vector3(0.999999881, 0.99999994, 1)));
      final scalingKey_0_7_17 = channel_0_7.scalingKeys.elementAt(17);
      expect(scalingKey_0_7_17.time, moreOrLessEquals(17));
      expect(scalingKey_0_7_17.value, vector3MoreOrLessEquals(Vector3(0.999999881, 0.999999881, 0.99999994)));
      final scalingKey_0_7_18 = channel_0_7.scalingKeys.elementAt(18);
      expect(scalingKey_0_7_18.time, moreOrLessEquals(18));
      expect(scalingKey_0_7_18.value, vector3MoreOrLessEquals(Vector3(0.99999994, 0.999999881, 0.99999994)));
      final scalingKey_0_7_19 = channel_0_7.scalingKeys.elementAt(19);
      expect(scalingKey_0_7_19.time, moreOrLessEquals(19));
      expect(scalingKey_0_7_19.value, vector3MoreOrLessEquals(Vector3(0.999999881, 0.999999881, 0.99999994)));
      final scalingKey_0_7_20 = channel_0_7.scalingKeys.elementAt(20);
      expect(scalingKey_0_7_20.time, moreOrLessEquals(20));
      expect(scalingKey_0_7_20.value, vector3MoreOrLessEquals(Vector3(0.99999994, 0.99999994, 1)));
      final scalingKey_0_7_21 = channel_0_7.scalingKeys.elementAt(21);
      expect(scalingKey_0_7_21.time, moreOrLessEquals(21));
      expect(scalingKey_0_7_21.value, vector3MoreOrLessEquals(Vector3(0.999999881, 0.999999881, 1)));
      final scalingKey_0_7_22 = channel_0_7.scalingKeys.elementAt(22);
      expect(scalingKey_0_7_22.time, moreOrLessEquals(22));
      expect(scalingKey_0_7_22.value, vector3MoreOrLessEquals(Vector3(0.99999994, 0.99999994, 1)));
      final scalingKey_0_7_23 = channel_0_7.scalingKeys.elementAt(23);
      expect(scalingKey_0_7_23.time, moreOrLessEquals(23));
      expect(scalingKey_0_7_23.value, vector3MoreOrLessEquals(Vector3(0.99999994, 0.99999994, 1)));
      final scalingKey_0_7_24 = channel_0_7.scalingKeys.elementAt(24);
      expect(scalingKey_0_7_24.time, moreOrLessEquals(24));
      expect(scalingKey_0_7_24.value, vector3MoreOrLessEquals(Vector3(0.999999881, 0.99999994, 1)));
      final scalingKey_0_7_25 = channel_0_7.scalingKeys.elementAt(25);
      expect(scalingKey_0_7_25.time, moreOrLessEquals(25));
      expect(scalingKey_0_7_25.value, vector3MoreOrLessEquals(Vector3(0.999999881, 0.99999994, 1)));
      final scalingKey_0_7_26 = channel_0_7.scalingKeys.elementAt(26);
      expect(scalingKey_0_7_26.time, moreOrLessEquals(26));
      expect(scalingKey_0_7_26.value, vector3MoreOrLessEquals(Vector3(0.999999881, 0.99999994, 1)));
      final scalingKey_0_7_27 = channel_0_7.scalingKeys.elementAt(27);
      expect(scalingKey_0_7_27.time, moreOrLessEquals(27));
      expect(scalingKey_0_7_27.value, vector3MoreOrLessEquals(Vector3(0.99999994, 0.999999881, 1)));
      final scalingKey_0_7_28 = channel_0_7.scalingKeys.elementAt(28);
      expect(scalingKey_0_7_28.time, moreOrLessEquals(28));
      expect(scalingKey_0_7_28.value, vector3MoreOrLessEquals(Vector3(0.999999881, 0.999999881, 1)));
      final scalingKey_0_7_29 = channel_0_7.scalingKeys.elementAt(29);
      expect(scalingKey_0_7_29.time, moreOrLessEquals(29));
      expect(scalingKey_0_7_29.value, vector3MoreOrLessEquals(Vector3(0.99999994, 0.99999994, 1)));
      final scalingKey_0_7_30 = channel_0_7.scalingKeys.elementAt(30);
      expect(scalingKey_0_7_30.time, moreOrLessEquals(30));
      expect(scalingKey_0_7_30.value, vector3MoreOrLessEquals(Vector3(1, 0.99999994, 1)));
      final scalingKey_0_7_31 = channel_0_7.scalingKeys.elementAt(31);
      expect(scalingKey_0_7_31.time, moreOrLessEquals(31));
      expect(scalingKey_0_7_31.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_7_32 = channel_0_7.scalingKeys.elementAt(32);
      expect(scalingKey_0_7_32.time, moreOrLessEquals(32));
      expect(scalingKey_0_7_32.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_7_33 = channel_0_7.scalingKeys.elementAt(33);
      expect(scalingKey_0_7_33.time, moreOrLessEquals(33));
      expect(scalingKey_0_7_33.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_7_34 = channel_0_7.scalingKeys.elementAt(34);
      expect(scalingKey_0_7_34.time, moreOrLessEquals(34));
      expect(scalingKey_0_7_34.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_7_35 = channel_0_7.scalingKeys.elementAt(35);
      expect(scalingKey_0_7_35.time, moreOrLessEquals(35));
      expect(scalingKey_0_7_35.value, vector3MoreOrLessEquals(Vector3(0.99999994, 0.99999994, 1)));
      final scalingKey_0_7_36 = channel_0_7.scalingKeys.elementAt(36);
      expect(scalingKey_0_7_36.time, moreOrLessEquals(36));
      expect(scalingKey_0_7_36.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_7_37 = channel_0_7.scalingKeys.elementAt(37);
      expect(scalingKey_0_7_37.time, moreOrLessEquals(37));
      expect(scalingKey_0_7_37.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_7_38 = channel_0_7.scalingKeys.elementAt(38);
      expect(scalingKey_0_7_38.time, moreOrLessEquals(38));
      expect(scalingKey_0_7_38.value, vector3MoreOrLessEquals(Vector3(1, 0.99999994, 1)));
      final scalingKey_0_7_39 = channel_0_7.scalingKeys.elementAt(39);
      expect(scalingKey_0_7_39.time, moreOrLessEquals(39));
      expect(scalingKey_0_7_39.value, vector3MoreOrLessEquals(Vector3(1, 0.99999994, 1)));
      expect(channel_0_7.preState, equals(AnimBehavior.defaults));
      expect(channel_0_7.postState, equals(AnimBehavior.defaults));
      final  channel_0_8 = animation_0.channels.elementAt(8);
      expect(channel_0_8.positionKeys.length, equals(40));
      final positionKey_0_8_0 = channel_0_8.positionKeys.elementAt(0);
      expect(positionKey_0_8_0.time, isZero);
      expect(positionKey_0_8_0.value, vector3MoreOrLessEquals(Vector3(0, 1.24803305, -1.42108547e-14)));
      final positionKey_0_8_1 = channel_0_8.positionKeys.elementAt(1);
      expect(positionKey_0_8_1.time, moreOrLessEquals(1));
      expect(positionKey_0_8_1.value, vector3MoreOrLessEquals(Vector3(-9.55202584e-10, 1.24803305, -3.71837916e-09)));
      final positionKey_0_8_2 = channel_0_8.positionKeys.elementAt(2);
      expect(positionKey_0_8_2.time, moreOrLessEquals(2));
      expect(positionKey_0_8_2.value, vector3MoreOrLessEquals(Vector3(-1.91040517e-09, 1.24803305, -7.43674411e-09)));
      final positionKey_0_8_3 = channel_0_8.positionKeys.elementAt(3);
      expect(positionKey_0_8_3.time, moreOrLessEquals(3));
      expect(positionKey_0_8_3.value, vector3MoreOrLessEquals(Vector3(-2.86560775e-09, 1.24803305, -1.11551088e-08)));
      final positionKey_0_8_4 = channel_0_8.positionKeys.elementAt(4);
      expect(positionKey_0_8_4.time, moreOrLessEquals(4));
      expect(positionKey_0_8_4.value, vector3MoreOrLessEquals(Vector3(-3.82081033e-09, 1.24803305, -1.4873474e-08)));
      final positionKey_0_8_5 = channel_0_8.positionKeys.elementAt(5);
      expect(positionKey_0_8_5.time, moreOrLessEquals(5));
      expect(positionKey_0_8_5.value, vector3MoreOrLessEquals(Vector3(-4.77601292e-09, 1.24803305, -1.85918392e-08)));
      final positionKey_0_8_6 = channel_0_8.positionKeys.elementAt(6);
      expect(positionKey_0_8_6.time, moreOrLessEquals(6));
      expect(positionKey_0_8_6.value, vector3MoreOrLessEquals(Vector3(-5.7312155e-09, 1.24803305, -2.23102035e-08)));
      final positionKey_0_8_7 = channel_0_8.positionKeys.elementAt(7);
      expect(positionKey_0_8_7.time, moreOrLessEquals(7));
      expect(positionKey_0_8_7.value, vector3MoreOrLessEquals(Vector3(-6.68641853e-09, 1.24803305, -2.60285713e-08)));
      final positionKey_0_8_8 = channel_0_8.positionKeys.elementAt(8);
      expect(positionKey_0_8_8.time, moreOrLessEquals(8));
      expect(positionKey_0_8_8.value, vector3MoreOrLessEquals(Vector3(-7.64162067e-09, 1.24803305, -2.97469338e-08)));
      final positionKey_0_8_9 = channel_0_8.positionKeys.elementAt(9);
      expect(positionKey_0_8_9.time, moreOrLessEquals(9));
      expect(positionKey_0_8_9.value, vector3MoreOrLessEquals(Vector3(-8.59682281e-09, 1.24803305, -3.34652981e-08)));
      final positionKey_0_8_10 = channel_0_8.positionKeys.elementAt(10);
      expect(positionKey_0_8_10.time, moreOrLessEquals(10));
      expect(positionKey_0_8_10.value, vector3MoreOrLessEquals(Vector3(-9.55202584e-09, 1.24803305, -3.71836641e-08)));
      final positionKey_0_8_11 = channel_0_8.positionKeys.elementAt(11);
      expect(positionKey_0_8_11.time, moreOrLessEquals(11));
      expect(positionKey_0_8_11.value, vector3MoreOrLessEquals(Vector3(-1.05072289e-08, 1.24803305, -4.09020302e-08)));
      final positionKey_0_8_12 = channel_0_8.positionKeys.elementAt(12);
      expect(positionKey_0_8_12.time, moreOrLessEquals(12));
      expect(positionKey_0_8_12.value, vector3MoreOrLessEquals(Vector3(-1.1462431e-08, 1.24803305, -4.46203927e-08)));
      final positionKey_0_8_13 = channel_0_8.positionKeys.elementAt(13);
      expect(positionKey_0_8_13.time, moreOrLessEquals(13));
      expect(positionKey_0_8_13.value, vector3MoreOrLessEquals(Vector3(-1.24176331e-08, 1.24803305, -4.83387588e-08)));
      final positionKey_0_8_14 = channel_0_8.positionKeys.elementAt(14);
      expect(positionKey_0_8_14.time, moreOrLessEquals(14));
      expect(positionKey_0_8_14.value, vector3MoreOrLessEquals(Vector3(-1.33728371e-08, 1.24803305, -5.20571284e-08)));
      final positionKey_0_8_15 = channel_0_8.positionKeys.elementAt(15);
      expect(positionKey_0_8_15.time, moreOrLessEquals(15));
      expect(positionKey_0_8_15.value, vector3MoreOrLessEquals(Vector3(-1.43280392e-08, 1.24803305, -5.57754909e-08)));
      final positionKey_0_8_16 = channel_0_8.positionKeys.elementAt(16);
      expect(positionKey_0_8_16.time, moreOrLessEquals(16));
      expect(positionKey_0_8_16.value, vector3MoreOrLessEquals(Vector3(-1.52832413e-08, 1.24803305, -5.94938534e-08)));
      final positionKey_0_8_17 = channel_0_8.positionKeys.elementAt(17);
      expect(positionKey_0_8_17.time, moreOrLessEquals(17));
      expect(positionKey_0_8_17.value, vector3MoreOrLessEquals(Vector3(-1.62384435e-08, 1.24803305, -6.32122195e-08)));
      final positionKey_0_8_18 = channel_0_8.positionKeys.elementAt(18);
      expect(positionKey_0_8_18.time, moreOrLessEquals(18));
      expect(positionKey_0_8_18.value, vector3MoreOrLessEquals(Vector3(-1.71936456e-08, 1.24803305, -6.6930582e-08)));
      final positionKey_0_8_19 = channel_0_8.positionKeys.elementAt(19);
      expect(positionKey_0_8_19.time, moreOrLessEquals(19));
      expect(positionKey_0_8_19.value, vector3MoreOrLessEquals(Vector3(-1.81488495e-08, 1.24803305, -7.06489516e-08)));
      final positionKey_0_8_20 = channel_0_8.positionKeys.elementAt(20);
      expect(positionKey_0_8_20.time, moreOrLessEquals(20));
      expect(positionKey_0_8_20.value, vector3MoreOrLessEquals(Vector3(-1.91040517e-08, 1.24803317, -7.43673141e-08)));
      final positionKey_0_8_21 = channel_0_8.positionKeys.elementAt(21);
      expect(positionKey_0_8_21.time, moreOrLessEquals(21));
      expect(positionKey_0_8_21.value, vector3MoreOrLessEquals(Vector3(-2.00592538e-08, 1.24803317, -7.80856766e-08)));
      final positionKey_0_8_22 = channel_0_8.positionKeys.elementAt(22);
      expect(positionKey_0_8_22.time, moreOrLessEquals(22));
      expect(positionKey_0_8_22.value, vector3MoreOrLessEquals(Vector3(-2.10144577e-08, 1.24803317, -8.18040462e-08)));
      final positionKey_0_8_23 = channel_0_8.positionKeys.elementAt(23);
      expect(positionKey_0_8_23.time, moreOrLessEquals(23));
      expect(positionKey_0_8_23.value, vector3MoreOrLessEquals(Vector3(-2.19696599e-08, 1.24803317, -8.55224087e-08)));
      final positionKey_0_8_24 = channel_0_8.positionKeys.elementAt(24);
      expect(positionKey_0_8_24.time, moreOrLessEquals(24));
      expect(positionKey_0_8_24.value, vector3MoreOrLessEquals(Vector3(-2.2924862e-08, 1.24803317, -8.92407712e-08)));
      final positionKey_0_8_25 = channel_0_8.positionKeys.elementAt(25);
      expect(positionKey_0_8_25.time, moreOrLessEquals(25));
      expect(positionKey_0_8_25.value, vector3MoreOrLessEquals(Vector3(-2.38800641e-08, 1.24803317, -9.29591408e-08)));
      final positionKey_0_8_26 = channel_0_8.positionKeys.elementAt(26);
      expect(positionKey_0_8_26.time, moreOrLessEquals(26));
      expect(positionKey_0_8_26.value, vector3MoreOrLessEquals(Vector3(-2.48352663e-08, 1.24803317, -9.66775033e-08)));
      final positionKey_0_8_27 = channel_0_8.positionKeys.elementAt(27);
      expect(positionKey_0_8_27.time, moreOrLessEquals(27));
      expect(positionKey_0_8_27.value, vector3MoreOrLessEquals(Vector3(-2.57904702e-08, 1.24803317, -1.00395873e-07)));
      final positionKey_0_8_28 = channel_0_8.positionKeys.elementAt(28);
      expect(positionKey_0_8_28.time, moreOrLessEquals(28));
      expect(positionKey_0_8_28.value, vector3MoreOrLessEquals(Vector3(-2.67456741e-08, 1.24803317, -1.04114243e-07)));
      final positionKey_0_8_29 = channel_0_8.positionKeys.elementAt(29);
      expect(positionKey_0_8_29.time, moreOrLessEquals(29));
      expect(positionKey_0_8_29.value, vector3MoreOrLessEquals(Vector3(-2.77008745e-08, 1.24803317, -1.07832598e-07)));
      final positionKey_0_8_30 = channel_0_8.positionKeys.elementAt(30);
      expect(positionKey_0_8_30.time, moreOrLessEquals(30));
      expect(positionKey_0_8_30.value, vector3MoreOrLessEquals(Vector3(-2.86560784e-08, 1.24803317, -1.11550968e-07)));
      final positionKey_0_8_31 = channel_0_8.positionKeys.elementAt(31);
      expect(positionKey_0_8_31.time, moreOrLessEquals(31));
      expect(positionKey_0_8_31.value, vector3MoreOrLessEquals(Vector3(-2.96112823e-08, 1.24803317, -1.15269337e-07)));
      final positionKey_0_8_32 = channel_0_8.positionKeys.elementAt(32);
      expect(positionKey_0_8_32.time, moreOrLessEquals(32));
      expect(positionKey_0_8_32.value, vector3MoreOrLessEquals(Vector3(-3.05664827e-08, 1.24803317, -1.18987693e-07)));
      final positionKey_0_8_33 = channel_0_8.positionKeys.elementAt(33);
      expect(positionKey_0_8_33.time, moreOrLessEquals(33));
      expect(positionKey_0_8_33.value, vector3MoreOrLessEquals(Vector3(-3.15216866e-08, 1.24803317, -1.22706055e-07)));
      final positionKey_0_8_34 = channel_0_8.positionKeys.elementAt(34);
      expect(positionKey_0_8_34.time, moreOrLessEquals(34));
      expect(positionKey_0_8_34.value, vector3MoreOrLessEquals(Vector3(-3.2476887e-08, 1.24803317, -1.26424425e-07)));
      final positionKey_0_8_35 = channel_0_8.positionKeys.elementAt(35);
      expect(positionKey_0_8_35.time, moreOrLessEquals(35));
      expect(positionKey_0_8_35.value, vector3MoreOrLessEquals(Vector3(-3.34320909e-08, 1.24803317, -1.30142794e-07)));
      final positionKey_0_8_36 = channel_0_8.positionKeys.elementAt(36);
      expect(positionKey_0_8_36.time, moreOrLessEquals(36));
      expect(positionKey_0_8_36.value, vector3MoreOrLessEquals(Vector3(-3.43872912e-08, 1.24803317, -1.3386115e-07)));
      final positionKey_0_8_37 = channel_0_8.positionKeys.elementAt(37);
      expect(positionKey_0_8_37.time, moreOrLessEquals(37));
      expect(positionKey_0_8_37.value, vector3MoreOrLessEquals(Vector3(-3.53424952e-08, 1.24803317, -1.37579519e-07)));
      final positionKey_0_8_38 = channel_0_8.positionKeys.elementAt(38);
      expect(positionKey_0_8_38.time, moreOrLessEquals(38));
      expect(positionKey_0_8_38.value, vector3MoreOrLessEquals(Vector3(-3.62976991e-08, 1.24803317, -1.41297889e-07)));
      final positionKey_0_8_39 = channel_0_8.positionKeys.elementAt(39);
      expect(positionKey_0_8_39.time, moreOrLessEquals(39));
      expect(positionKey_0_8_39.value, vector3MoreOrLessEquals(Vector3(-3.7252903e-08, 1.24803317, -1.45016259e-07)));
      expect(channel_0_8.rotationKeys.length, equals(40));
      final rotationKey_0_8_0 = channel_0_8.rotationKeys.elementAt(0);
      expect(rotationKey_0_8_0.time, isZero);
      expect(rotationKey_0_8_0.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0, 0)));
      final rotationKey_0_8_1 = channel_0_8.rotationKeys.elementAt(1);
      expect(rotationKey_0_8_1.time, moreOrLessEquals(1));
      expect(rotationKey_0_8_1.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0.00643022265, 0.00643022265)));
      final rotationKey_0_8_2 = channel_0_8.rotationKeys.elementAt(2);
      expect(rotationKey_0_8_2.time, moreOrLessEquals(2));
      expect(rotationKey_0_8_2.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0.025801504, 0.025801504)));
      final rotationKey_0_8_3 = channel_0_8.rotationKeys.elementAt(3);
      expect(rotationKey_0_8_3.time, moreOrLessEquals(3));
      expect(rotationKey_0_8_3.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0.0573317744, 0.0573317744)));
      final rotationKey_0_8_4 = channel_0_8.rotationKeys.elementAt(4);
      expect(rotationKey_0_8_4.time, moreOrLessEquals(4));
      expect(rotationKey_0_8_4.value, quaternionMoreOrLessEquals(Quaternion(-1.35950751e-10, 1.37296685e-09, 0.0985377952, 0.0985377952)));
      final rotationKey_0_8_5 = channel_0_8.rotationKeys.elementAt(5);
      expect(rotationKey_0_8_5.time, moreOrLessEquals(5));
      expect(rotationKey_0_8_5.value, quaternionMoreOrLessEquals(Quaternion(-2.50081428e-10, 1.70637338e-09, 0.145008236, 0.145008236)));
      final rotationKey_0_8_6 = channel_0_8.rotationKeys.elementAt(6);
      expect(rotationKey_0_8_6.time, moreOrLessEquals(6));
      expect(rotationKey_0_8_6.value, quaternionMoreOrLessEquals(Quaternion(-3.95510485e-10, 2.03137707e-09, 0.191111997, 0.191111997)));
      final rotationKey_0_8_7 = channel_0_8.rotationKeys.elementAt(7);
      expect(rotationKey_0_8_7.time, moreOrLessEquals(7));
      expect(rotationKey_0_8_7.value, quaternionMoreOrLessEquals(Quaternion(-5.58947333e-10, 2.34885267e-09, 0.231501639, 0.231501639)));
      final rotationKey_0_8_8 = channel_0_8.rotationKeys.elementAt(8);
      expect(rotationKey_0_8_8.time, moreOrLessEquals(8));
      expect(rotationKey_0_8_8.value, quaternionMoreOrLessEquals(Quaternion(-7.24102334e-10, 2.66265987e-09, 0.262416512, 0.262416512)));
      final rotationKey_0_8_9 = channel_0_8.rotationKeys.elementAt(9);
      expect(rotationKey_0_8_9.time, moreOrLessEquals(9));
      expect(rotationKey_0_8_9.value, quaternionMoreOrLessEquals(Quaternion(-8.75384376e-10, 2.97830027e-09, 0.281992495, 0.281992495)));
      final rotationKey_0_8_10 = channel_0_8.rotationKeys.elementAt(10);
      expect(rotationKey_0_8_10.time, moreOrLessEquals(10));
      expect(rotationKey_0_8_10.value, quaternionMoreOrLessEquals(Quaternion(-9.99424099e-10, 3.30123506e-09, 0.289755076, 0.289755076)));
      final rotationKey_0_8_11 = channel_0_8.rotationKeys.elementAt(11);
      expect(rotationKey_0_8_11.time, moreOrLessEquals(11));
      expect(rotationKey_0_8_11.value, quaternionMoreOrLessEquals(Quaternion(-1.04568798e-09, 3.64717789e-09, 0.275607288, 0.275607288)));
      final rotationKey_0_8_12 = channel_0_8.rotationKeys.elementAt(12);
      expect(rotationKey_0_8_12.time, moreOrLessEquals(12));
      expect(rotationKey_0_8_12.value, quaternionMoreOrLessEquals(Quaternion(-9.40405753e-10, 4.03079614e-09, 0.227203578, 0.227203578)));
      final rotationKey_0_8_13 = channel_0_8.rotationKeys.elementAt(13);
      expect(rotationKey_0_8_13.time, moreOrLessEquals(13));
      expect(rotationKey_0_8_13.value, quaternionMoreOrLessEquals(Quaternion(-6.35901998e-10, 4.43864412e-09, 0.141816929, 0.141816929)));
      final rotationKey_0_8_14 = channel_0_8.rotationKeys.elementAt(14);
      expect(rotationKey_0_8_14.time, moreOrLessEquals(14));
      expect(rotationKey_0_8_14.value, quaternionMoreOrLessEquals(Quaternion(-1.054936e-10, 4.82773199e-09, 0.0218463708, 0.0218463708)));
      final rotationKey_0_8_15 = channel_0_8.rotationKeys.elementAt(15);
      expect(rotationKey_0_8_15.time, moreOrLessEquals(15));
      expect(rotationKey_0_8_15.value, quaternionMoreOrLessEquals(Quaternion(6.15492879e-10, 5.13706411e-09, -0.118963294, -0.118963294)));
      final rotationKey_0_8_16 = channel_0_8.rotationKeys.elementAt(16);
      expect(rotationKey_0_8_16.time, moreOrLessEquals(16));
      expect(rotationKey_0_8_16.value, quaternionMoreOrLessEquals(Quaternion(1.41624479e-09, 5.33390798e-09, -0.256625354, -0.256625354)));
      final rotationKey_0_8_17 = channel_0_8.rotationKeys.elementAt(17);
      expect(rotationKey_0_8_17.time, moreOrLessEquals(17));
      expect(rotationKey_0_8_17.value, quaternionMoreOrLessEquals(Quaternion(2.16533169e-09, 5.44919088e-09, -0.369280845, -0.369280845)));
      final rotationKey_0_8_18 = channel_0_8.rotationKeys.elementAt(18);
      expect(rotationKey_0_8_18.time, moreOrLessEquals(18));
      expect(rotationKey_0_8_18.value, quaternionMoreOrLessEquals(Quaternion(2.77733969e-09, 5.55271695e-09, -0.447340012, -0.447340012)));
      final rotationKey_0_8_19 = channel_0_8.rotationKeys.elementAt(19);
      expect(rotationKey_0_8_19.time, moreOrLessEquals(19));
      expect(rotationKey_0_8_19.value, quaternionMoreOrLessEquals(Quaternion(3.22050075e-09, 5.70758729e-09, -0.491417974, -0.491417974)));
      final rotationKey_0_8_20 = channel_0_8.rotationKeys.elementAt(20);
      expect(rotationKey_0_8_20.time, moreOrLessEquals(20));
      expect(rotationKey_0_8_20.value, quaternionMoreOrLessEquals(Quaternion(3.48629903e-09, 5.95262328e-09, -0.505377471, -0.505377471)));
      final rotationKey_0_8_21 = channel_0_8.rotationKeys.elementAt(21);
      expect(rotationKey_0_8_21.time, moreOrLessEquals(21));
      expect(rotationKey_0_8_21.value, quaternionMoreOrLessEquals(Quaternion(3.60810626e-09, 6.28071328e-09, -0.498128414, -0.498128414)));
      final rotationKey_0_8_22 = channel_0_8.rotationKeys.elementAt(22);
      expect(rotationKey_0_8_22.time, moreOrLessEquals(22));
      expect(rotationKey_0_8_22.value, quaternionMoreOrLessEquals(Quaternion(2.67915201e-09, 7.17829751e-09, -0.475957692, -0.475957692)));
      final rotationKey_0_8_23 = channel_0_8.rotationKeys.elementAt(23);
      expect(rotationKey_0_8_23.time, moreOrLessEquals(23));
      expect(rotationKey_0_8_23.value, quaternionMoreOrLessEquals(Quaternion(2.48539345e-09, 7.61490604e-09, -0.43885079, -0.43885079)));
      final rotationKey_0_8_24 = channel_0_8.rotationKeys.elementAt(24);
      expect(rotationKey_0_8_24.time, moreOrLessEquals(24));
      expect(rotationKey_0_8_24.value, quaternionMoreOrLessEquals(Quaternion(2.15077778e-09, 8.0770608e-09, -0.388569355, -0.388569355)));
      final rotationKey_0_8_25 = channel_0_8.rotationKeys.elementAt(25);
      expect(rotationKey_0_8_25.time, moreOrLessEquals(25));
      expect(rotationKey_0_8_25.value, quaternionMoreOrLessEquals(Quaternion(1.70522851e-09, 8.53816839e-09, -0.329675376, -0.329675376)));
      final rotationKey_0_8_26 = channel_0_8.rotationKeys.elementAt(26);
      expect(rotationKey_0_8_26.time, moreOrLessEquals(26));
      expect(rotationKey_0_8_26.value, quaternionMoreOrLessEquals(Quaternion(1.20844579e-09, 8.97405794e-09, -0.269322783, -0.269322783)));
      final rotationKey_0_8_27 = channel_0_8.rotationKeys.elementAt(27);
      expect(rotationKey_0_8_27.time, moreOrLessEquals(27));
      expect(rotationKey_0_8_27.value, quaternionMoreOrLessEquals(Quaternion(7.34350913e-10, 9.37461042e-09, -0.215310112, -0.215310112)));
      final rotationKey_0_8_28 = channel_0_8.rotationKeys.elementAt(28);
      expect(rotationKey_0_8_28.time, moreOrLessEquals(28));
      expect(rotationKey_0_8_28.value, quaternionMoreOrLessEquals(Quaternion(3.48531259e-10, 9.74536984e-09, -0.173698023, -0.173698023)));
      final rotationKey_0_8_29 = channel_0_8.rotationKeys.elementAt(29);
      expect(rotationKey_0_8_29.time, moreOrLessEquals(29));
      expect(rotationKey_0_8_29.value, quaternionMoreOrLessEquals(Quaternion(9.5524505e-11, 1.00994191e-08, -0.147750244, -0.147750244)));
      final rotationKey_0_8_30 = channel_0_8.rotationKeys.elementAt(30);
      expect(rotationKey_0_8_30.time, moreOrLessEquals(30));
      expect(rotationKey_0_8_30.value, quaternionMoreOrLessEquals(Quaternion(4.03563427e-15, 1.04481428e-08, -0.138389811, -0.138389811)));
      final rotationKey_0_8_31 = channel_0_8.rotationKeys.elementAt(31);
      expect(rotationKey_0_8_31.time, moreOrLessEquals(31));
      expect(rotationKey_0_8_31.value, quaternionMoreOrLessEquals(Quaternion(0.00659940671, -0.000447037164, -0.137420237, -0.137420237)));
      final rotationKey_0_8_32 = channel_0_8.rotationKeys.elementAt(32);
      expect(rotationKey_0_8_32.time, moreOrLessEquals(32));
      expect(rotationKey_0_8_32.value, quaternionMoreOrLessEquals(Quaternion(0.0264550894, -0.00179221726, -0.136775181, -0.136775181)));
      final rotationKey_0_8_33 = channel_0_8.rotationKeys.elementAt(33);
      expect(rotationKey_0_8_33.time, moreOrLessEquals(33));
      expect(rotationKey_0_8_33.value, quaternionMoreOrLessEquals(Quaternion(0.0584609471, -0.00396077009, -0.136362284, -0.136362284)));
      final rotationKey_0_8_34 = channel_0_8.rotationKeys.elementAt(34);
      expect(rotationKey_0_8_34.time, moreOrLessEquals(34));
      expect(rotationKey_0_8_34.value, quaternionMoreOrLessEquals(Quaternion(0.0992599726, -0.00672522793, -0.136029854, -0.136029854)));
      final rotationKey_0_8_35 = channel_0_8.rotationKeys.elementAt(35);
      expect(rotationKey_0_8_35.time, moreOrLessEquals(35));
      expect(rotationKey_0_8_35.value, quaternionMoreOrLessEquals(Quaternion(0.143163145, -0.00969987456, -0.135646641, -0.135646641)));
      final rotationKey_0_8_36 = channel_0_8.rotationKeys.elementAt(36);
      expect(rotationKey_0_8_36.time, moreOrLessEquals(36));
      expect(rotationKey_0_8_36.value, quaternionMoreOrLessEquals(Quaternion(0.183532059, -0.0124346875, -0.135186478, -0.135186478)));
      final rotationKey_0_8_37 = channel_0_8.rotationKeys.elementAt(37);
      expect(rotationKey_0_8_37.time, moreOrLessEquals(37));
      expect(rotationKey_0_8_37.value, quaternionMoreOrLessEquals(Quaternion(0.214914128, -0.0145602571, -0.134735465, -0.134735465)));
      final rotationKey_0_8_38 = channel_0_8.rotationKeys.elementAt(38);
      expect(rotationKey_0_8_38.time, moreOrLessEquals(38));
      expect(rotationKey_0_8_38.value, quaternionMoreOrLessEquals(Quaternion(0.234257773, -0.015870152, -0.134415075, -0.134415075)));
      final rotationKey_0_8_39 = channel_0_8.rotationKeys.elementAt(39);
      expect(rotationKey_0_8_39.time, moreOrLessEquals(39));
      expect(rotationKey_0_8_39.value, quaternionMoreOrLessEquals(Quaternion(0.240666419, -0.0163040385, -0.134303242, -0.134303242)));
      expect(channel_0_8.scalingKeys.length, equals(40));
      final scalingKey_0_8_0 = channel_0_8.scalingKeys.elementAt(0);
      expect(scalingKey_0_8_0.time, isZero);
      expect(scalingKey_0_8_0.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_8_1 = channel_0_8.scalingKeys.elementAt(1);
      expect(scalingKey_0_8_1.time, moreOrLessEquals(1));
      expect(scalingKey_0_8_1.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_8_2 = channel_0_8.scalingKeys.elementAt(2);
      expect(scalingKey_0_8_2.time, moreOrLessEquals(2));
      expect(scalingKey_0_8_2.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_8_3 = channel_0_8.scalingKeys.elementAt(3);
      expect(scalingKey_0_8_3.time, moreOrLessEquals(3));
      expect(scalingKey_0_8_3.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_8_4 = channel_0_8.scalingKeys.elementAt(4);
      expect(scalingKey_0_8_4.time, moreOrLessEquals(4));
      expect(scalingKey_0_8_4.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_8_5 = channel_0_8.scalingKeys.elementAt(5);
      expect(scalingKey_0_8_5.time, moreOrLessEquals(5));
      expect(scalingKey_0_8_5.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_8_6 = channel_0_8.scalingKeys.elementAt(6);
      expect(scalingKey_0_8_6.time, moreOrLessEquals(6));
      expect(scalingKey_0_8_6.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_8_7 = channel_0_8.scalingKeys.elementAt(7);
      expect(scalingKey_0_8_7.time, moreOrLessEquals(7));
      expect(scalingKey_0_8_7.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_8_8 = channel_0_8.scalingKeys.elementAt(8);
      expect(scalingKey_0_8_8.time, moreOrLessEquals(8));
      expect(scalingKey_0_8_8.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_8_9 = channel_0_8.scalingKeys.elementAt(9);
      expect(scalingKey_0_8_9.time, moreOrLessEquals(9));
      expect(scalingKey_0_8_9.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_8_10 = channel_0_8.scalingKeys.elementAt(10);
      expect(scalingKey_0_8_10.time, moreOrLessEquals(10));
      expect(scalingKey_0_8_10.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_8_11 = channel_0_8.scalingKeys.elementAt(11);
      expect(scalingKey_0_8_11.time, moreOrLessEquals(11));
      expect(scalingKey_0_8_11.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_8_12 = channel_0_8.scalingKeys.elementAt(12);
      expect(scalingKey_0_8_12.time, moreOrLessEquals(12));
      expect(scalingKey_0_8_12.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_8_13 = channel_0_8.scalingKeys.elementAt(13);
      expect(scalingKey_0_8_13.time, moreOrLessEquals(13));
      expect(scalingKey_0_8_13.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_8_14 = channel_0_8.scalingKeys.elementAt(14);
      expect(scalingKey_0_8_14.time, moreOrLessEquals(14));
      expect(scalingKey_0_8_14.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_8_15 = channel_0_8.scalingKeys.elementAt(15);
      expect(scalingKey_0_8_15.time, moreOrLessEquals(15));
      expect(scalingKey_0_8_15.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_8_16 = channel_0_8.scalingKeys.elementAt(16);
      expect(scalingKey_0_8_16.time, moreOrLessEquals(16));
      expect(scalingKey_0_8_16.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_8_17 = channel_0_8.scalingKeys.elementAt(17);
      expect(scalingKey_0_8_17.time, moreOrLessEquals(17));
      expect(scalingKey_0_8_17.value, vector3MoreOrLessEquals(Vector3(0.99999994, 0.99999994, 1)));
      final scalingKey_0_8_18 = channel_0_8.scalingKeys.elementAt(18);
      expect(scalingKey_0_8_18.time, moreOrLessEquals(18));
      expect(scalingKey_0_8_18.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_8_19 = channel_0_8.scalingKeys.elementAt(19);
      expect(scalingKey_0_8_19.time, moreOrLessEquals(19));
      expect(scalingKey_0_8_19.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_8_20 = channel_0_8.scalingKeys.elementAt(20);
      expect(scalingKey_0_8_20.time, moreOrLessEquals(20));
      expect(scalingKey_0_8_20.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_8_21 = channel_0_8.scalingKeys.elementAt(21);
      expect(scalingKey_0_8_21.time, moreOrLessEquals(21));
      expect(scalingKey_0_8_21.value, vector3MoreOrLessEquals(Vector3(0.99999994, 0.99999994, 1)));
      final scalingKey_0_8_22 = channel_0_8.scalingKeys.elementAt(22);
      expect(scalingKey_0_8_22.time, moreOrLessEquals(22));
      expect(scalingKey_0_8_22.value, vector3MoreOrLessEquals(Vector3(0.99999994, 0.99999994, 1)));
      final scalingKey_0_8_23 = channel_0_8.scalingKeys.elementAt(23);
      expect(scalingKey_0_8_23.time, moreOrLessEquals(23));
      expect(scalingKey_0_8_23.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_8_24 = channel_0_8.scalingKeys.elementAt(24);
      expect(scalingKey_0_8_24.time, moreOrLessEquals(24));
      expect(scalingKey_0_8_24.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_8_25 = channel_0_8.scalingKeys.elementAt(25);
      expect(scalingKey_0_8_25.time, moreOrLessEquals(25));
      expect(scalingKey_0_8_25.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_8_26 = channel_0_8.scalingKeys.elementAt(26);
      expect(scalingKey_0_8_26.time, moreOrLessEquals(26));
      expect(scalingKey_0_8_26.value, vector3MoreOrLessEquals(Vector3(0.99999994, 0.99999994, 1)));
      final scalingKey_0_8_27 = channel_0_8.scalingKeys.elementAt(27);
      expect(scalingKey_0_8_27.time, moreOrLessEquals(27));
      expect(scalingKey_0_8_27.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_8_28 = channel_0_8.scalingKeys.elementAt(28);
      expect(scalingKey_0_8_28.time, moreOrLessEquals(28));
      expect(scalingKey_0_8_28.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_8_29 = channel_0_8.scalingKeys.elementAt(29);
      expect(scalingKey_0_8_29.time, moreOrLessEquals(29));
      expect(scalingKey_0_8_29.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_8_30 = channel_0_8.scalingKeys.elementAt(30);
      expect(scalingKey_0_8_30.time, moreOrLessEquals(30));
      expect(scalingKey_0_8_30.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_8_31 = channel_0_8.scalingKeys.elementAt(31);
      expect(scalingKey_0_8_31.time, moreOrLessEquals(31));
      expect(scalingKey_0_8_31.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_8_32 = channel_0_8.scalingKeys.elementAt(32);
      expect(scalingKey_0_8_32.time, moreOrLessEquals(32));
      expect(scalingKey_0_8_32.value, vector3MoreOrLessEquals(Vector3(0.99999994, 0.99999994, 0.99999994)));
      final scalingKey_0_8_33 = channel_0_8.scalingKeys.elementAt(33);
      expect(scalingKey_0_8_33.time, moreOrLessEquals(33));
      expect(scalingKey_0_8_33.value, vector3MoreOrLessEquals(Vector3(0.99999994, 1, 0.99999994)));
      final scalingKey_0_8_34 = channel_0_8.scalingKeys.elementAt(34);
      expect(scalingKey_0_8_34.time, moreOrLessEquals(34));
      expect(scalingKey_0_8_34.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_8_35 = channel_0_8.scalingKeys.elementAt(35);
      expect(scalingKey_0_8_35.time, moreOrLessEquals(35));
      expect(scalingKey_0_8_35.value, vector3MoreOrLessEquals(Vector3(1, 0.99999994, 1)));
      final scalingKey_0_8_36 = channel_0_8.scalingKeys.elementAt(36);
      expect(scalingKey_0_8_36.time, moreOrLessEquals(36));
      expect(scalingKey_0_8_36.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_8_37 = channel_0_8.scalingKeys.elementAt(37);
      expect(scalingKey_0_8_37.time, moreOrLessEquals(37));
      expect(scalingKey_0_8_37.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_8_38 = channel_0_8.scalingKeys.elementAt(38);
      expect(scalingKey_0_8_38.time, moreOrLessEquals(38));
      expect(scalingKey_0_8_38.value, vector3MoreOrLessEquals(Vector3(0.99999994, 1, 1)));
      final scalingKey_0_8_39 = channel_0_8.scalingKeys.elementAt(39);
      expect(scalingKey_0_8_39.time, moreOrLessEquals(39));
      expect(scalingKey_0_8_39.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      expect(channel_0_8.preState, equals(AnimBehavior.defaults));
      expect(channel_0_8.postState, equals(AnimBehavior.defaults));
      final  channel_0_9 = animation_0.channels.elementAt(9);
      expect(channel_0_9.positionKeys.length, equals(32));
      final positionKey_0_9_0 = channel_0_9.positionKeys.elementAt(0);
      expect(positionKey_0_9_0.time, isZero);
      expect(positionKey_0_9_0.value, vector3MoreOrLessEquals(Vector3(0, 1.26316071, 2.84217094e-14)));
      final positionKey_0_9_1 = channel_0_9.positionKeys.elementAt(1);
      expect(positionKey_0_9_1.time, moreOrLessEquals(1));
      expect(positionKey_0_9_1.value, vector3MoreOrLessEquals(Vector3(-9.55202584e-10, 1.26316071, -2.42597956e-11)));
      final positionKey_0_9_2 = channel_0_9.positionKeys.elementAt(2);
      expect(positionKey_0_9_2.time, moreOrLessEquals(2));
      expect(positionKey_0_9_2.value, vector3MoreOrLessEquals(Vector3(-1.91040517e-09, 1.26316071, -4.85480128e-11)));
      final positionKey_0_9_3 = channel_0_9.positionKeys.elementAt(3);
      expect(positionKey_0_9_3.time, moreOrLessEquals(3));
      expect(positionKey_0_9_3.value, vector3MoreOrLessEquals(Vector3(-2.86560775e-09, 1.26316071, -7.28362301e-11)));
      final positionKey_0_9_4 = channel_0_9.positionKeys.elementAt(4);
      expect(positionKey_0_9_4.time, moreOrLessEquals(4));
      expect(positionKey_0_9_4.value, vector3MoreOrLessEquals(Vector3(-3.82081033e-09, 1.26316071, -9.71244474e-11)));
      final positionKey_0_9_5 = channel_0_9.positionKeys.elementAt(5);
      expect(positionKey_0_9_5.time, moreOrLessEquals(5));
      expect(positionKey_0_9_5.value, vector3MoreOrLessEquals(Vector3(-4.77601292e-09, 1.26316071, -1.21412658e-10)));
      final positionKey_0_9_6 = channel_0_9.positionKeys.elementAt(6);
      expect(positionKey_0_9_6.time, moreOrLessEquals(6));
      expect(positionKey_0_9_6.value, vector3MoreOrLessEquals(Vector3(-5.7312155e-09, 1.26316071, -1.45700882e-10)));
      final positionKey_0_9_7 = channel_0_9.positionKeys.elementAt(7);
      expect(positionKey_0_9_7.time, moreOrLessEquals(7));
      expect(positionKey_0_9_7.value, vector3MoreOrLessEquals(Vector3(-6.68641853e-09, 1.26316071, -1.69989106e-10)));
      final positionKey_0_9_8 = channel_0_9.positionKeys.elementAt(8);
      expect(positionKey_0_9_8.time, moreOrLessEquals(8));
      expect(positionKey_0_9_8.value, vector3MoreOrLessEquals(Vector3(-7.64162067e-09, 1.26316071, -1.94277316e-10)));
      final positionKey_0_9_9 = channel_0_9.positionKeys.elementAt(9);
      expect(positionKey_0_9_9.time, moreOrLessEquals(9));
      expect(positionKey_0_9_9.value, vector3MoreOrLessEquals(Vector3(-8.59682281e-09, 1.26316071, -2.18565527e-10)));
      final positionKey_0_9_10 = channel_0_9.positionKeys.elementAt(10);
      expect(positionKey_0_9_10.time, moreOrLessEquals(10));
      expect(positionKey_0_9_10.value, vector3MoreOrLessEquals(Vector3(-9.55202584e-09, 1.26316071, -2.42853737e-10)));
      final positionKey_0_9_11 = channel_0_9.positionKeys.elementAt(11);
      expect(positionKey_0_9_11.time, moreOrLessEquals(11));
      expect(positionKey_0_9_11.value, vector3MoreOrLessEquals(Vector3(-1.05072289e-08, 1.26316071, -2.67141975e-10)));
      final positionKey_0_9_12 = channel_0_9.positionKeys.elementAt(12);
      expect(positionKey_0_9_12.time, moreOrLessEquals(12));
      expect(positionKey_0_9_12.value, vector3MoreOrLessEquals(Vector3(-1.1462431e-08, 1.26316071, -2.91430186e-10)));
      final positionKey_0_9_13 = channel_0_9.positionKeys.elementAt(13);
      expect(positionKey_0_9_13.time, moreOrLessEquals(13));
      expect(positionKey_0_9_13.value, vector3MoreOrLessEquals(Vector3(-1.24176331e-08, 1.26316071, -3.15718396e-10)));
      final positionKey_0_9_14 = channel_0_9.positionKeys.elementAt(14);
      expect(positionKey_0_9_14.time, moreOrLessEquals(14));
      expect(positionKey_0_9_14.value, vector3MoreOrLessEquals(Vector3(-1.33728371e-08, 1.26316071, -3.40006634e-10)));
      final positionKey_0_9_15 = channel_0_9.positionKeys.elementAt(15);
      expect(positionKey_0_9_15.time, moreOrLessEquals(15));
      expect(positionKey_0_9_15.value, vector3MoreOrLessEquals(Vector3(-1.43280392e-08, 1.26316071, -3.64294817e-10)));
      final positionKey_0_9_16 = channel_0_9.positionKeys.elementAt(16);
      expect(positionKey_0_9_16.time, moreOrLessEquals(16));
      expect(positionKey_0_9_16.value, vector3MoreOrLessEquals(Vector3(-1.52832413e-08, 1.26316071, -3.88583055e-10)));
      final positionKey_0_9_17 = channel_0_9.positionKeys.elementAt(17);
      expect(positionKey_0_9_17.time, moreOrLessEquals(17));
      expect(positionKey_0_9_17.value, vector3MoreOrLessEquals(Vector3(-1.62384435e-08, 1.26316071, -4.12871265e-10)));
      final positionKey_0_9_18 = channel_0_9.positionKeys.elementAt(18);
      expect(positionKey_0_9_18.time, moreOrLessEquals(18));
      expect(positionKey_0_9_18.value, vector3MoreOrLessEquals(Vector3(-1.71936456e-08, 1.26316071, -4.37159475e-10)));
      final positionKey_0_9_19 = channel_0_9.positionKeys.elementAt(19);
      expect(positionKey_0_9_19.time, moreOrLessEquals(19));
      expect(positionKey_0_9_19.value, vector3MoreOrLessEquals(Vector3(-1.81488495e-08, 1.26316071, -4.61447686e-10)));
      final positionKey_0_9_20 = channel_0_9.positionKeys.elementAt(20);
      expect(positionKey_0_9_20.time, moreOrLessEquals(20));
      expect(positionKey_0_9_20.value, vector3MoreOrLessEquals(Vector3(-1.91040517e-08, 1.26316071, -4.85735896e-10)));
      final positionKey_0_9_21 = channel_0_9.positionKeys.elementAt(21);
      expect(positionKey_0_9_21.time, moreOrLessEquals(21));
      expect(positionKey_0_9_21.value, vector3MoreOrLessEquals(Vector3(-2.00592538e-08, 1.26316071, -5.10024134e-10)));
      final positionKey_0_9_22 = channel_0_9.positionKeys.elementAt(22);
      expect(positionKey_0_9_22.time, moreOrLessEquals(22));
      expect(positionKey_0_9_22.value, vector3MoreOrLessEquals(Vector3(-2.10144577e-08, 1.26316071, -5.34312372e-10)));
      final positionKey_0_9_23 = channel_0_9.positionKeys.elementAt(23);
      expect(positionKey_0_9_23.time, moreOrLessEquals(23));
      expect(positionKey_0_9_23.value, vector3MoreOrLessEquals(Vector3(-2.19696599e-08, 1.26316071, -5.58600555e-10)));
      final positionKey_0_9_24 = channel_0_9.positionKeys.elementAt(24);
      expect(positionKey_0_9_24.time, moreOrLessEquals(24));
      expect(positionKey_0_9_24.value, vector3MoreOrLessEquals(Vector3(-2.2924862e-08, 1.26316071, -5.82888793e-10)));
      final positionKey_0_9_25 = channel_0_9.positionKeys.elementAt(25);
      expect(positionKey_0_9_25.time, moreOrLessEquals(25));
      expect(positionKey_0_9_25.value, vector3MoreOrLessEquals(Vector3(-2.38800641e-08, 1.26316071, -6.07176975e-10)));
      final positionKey_0_9_26 = channel_0_9.positionKeys.elementAt(26);
      expect(positionKey_0_9_26.time, moreOrLessEquals(26));
      expect(positionKey_0_9_26.value, vector3MoreOrLessEquals(Vector3(-2.48352663e-08, 1.26316071, -6.31465213e-10)));
      final positionKey_0_9_27 = channel_0_9.positionKeys.elementAt(27);
      expect(positionKey_0_9_27.time, moreOrLessEquals(27));
      expect(positionKey_0_9_27.value, vector3MoreOrLessEquals(Vector3(-2.57904702e-08, 1.26316071, -6.55753452e-10)));
      final positionKey_0_9_28 = channel_0_9.positionKeys.elementAt(28);
      expect(positionKey_0_9_28.time, moreOrLessEquals(28));
      expect(positionKey_0_9_28.value, vector3MoreOrLessEquals(Vector3(-2.67456741e-08, 1.26316071, -6.8004169e-10)));
      final positionKey_0_9_29 = channel_0_9.positionKeys.elementAt(29);
      expect(positionKey_0_9_29.time, moreOrLessEquals(29));
      expect(positionKey_0_9_29.value, vector3MoreOrLessEquals(Vector3(-2.77008745e-08, 1.26316071, -7.04329872e-10)));
      final positionKey_0_9_30 = channel_0_9.positionKeys.elementAt(30);
      expect(positionKey_0_9_30.time, moreOrLessEquals(30));
      expect(positionKey_0_9_30.value, vector3MoreOrLessEquals(Vector3(-2.86560784e-08, 1.26316071, -7.28618055e-10)));
      final positionKey_0_9_31 = channel_0_9.positionKeys.elementAt(31);
      expect(positionKey_0_9_31.time, moreOrLessEquals(39));
      expect(positionKey_0_9_31.value, vector3MoreOrLessEquals(Vector3(-3.7252903e-08, 1.26316071, -9.47212087e-10)));
      expect(channel_0_9.rotationKeys.length, equals(32));
      final rotationKey_0_9_0 = channel_0_9.rotationKeys.elementAt(0);
      expect(rotationKey_0_9_0.time, isZero);
      expect(rotationKey_0_9_0.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0, 0)));
      final rotationKey_0_9_1 = channel_0_9.rotationKeys.elementAt(1);
      expect(rotationKey_0_9_1.time, moreOrLessEquals(1));
      expect(rotationKey_0_9_1.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0.00562163582, 0.00562163582)));
      final rotationKey_0_9_2 = channel_0_9.rotationKeys.elementAt(2);
      expect(rotationKey_0_9_2.time, moreOrLessEquals(2));
      expect(rotationKey_0_9_2.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0.0225746706, 0.0225746706)));
      final rotationKey_0_9_3 = channel_0_9.rotationKeys.elementAt(3);
      expect(rotationKey_0_9_3.time, moreOrLessEquals(3));
      expect(rotationKey_0_9_3.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0.0502239205, 0.0502239205)));
      final rotationKey_0_9_4 = channel_0_9.rotationKeys.elementAt(4);
      expect(rotationKey_0_9_4.time, moreOrLessEquals(4));
      expect(rotationKey_0_9_4.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0.0864617079, 0.0864617079)));
      final rotationKey_0_9_5 = channel_0_9.rotationKeys.elementAt(5);
      expect(rotationKey_0_9_5.time, moreOrLessEquals(5));
      expect(rotationKey_0_9_5.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0.127462655, 0.127462655)));
      final rotationKey_0_9_6 = channel_0_9.rotationKeys.elementAt(6);
      expect(rotationKey_0_9_6.time, moreOrLessEquals(6));
      expect(rotationKey_0_9_6.value, quaternionMoreOrLessEquals(Quaternion(1.11516552e-09, 1.90323313e-10, 0.168235645, 0.168235645)));
      final rotationKey_0_9_7 = channel_0_9.rotationKeys.elementAt(7);
      expect(rotationKey_0_9_7.time, moreOrLessEquals(7));
      expect(rotationKey_0_9_7.value, quaternionMoreOrLessEquals(Quaternion(1.29210664e-09, 2.69134715e-10, 0.203914911, 0.203914911)));
      final rotationKey_0_9_8 = channel_0_9.rotationKeys.elementAt(8);
      expect(rotationKey_0_9_8.time, moreOrLessEquals(8));
      expect(rotationKey_0_9_8.value, quaternionMoreOrLessEquals(Quaternion(1.46760171e-09, 3.48390122e-10, 0.230968714, 0.230968714)));
      final rotationKey_0_9_9 = channel_0_9.rotationKeys.elementAt(9);
      expect(rotationKey_0_9_9.time, moreOrLessEquals(9));
      expect(rotationKey_0_9_9.value, quaternionMoreOrLessEquals(Quaternion(1.64410396e-09, 4.20131013e-10, 0.247582287, 0.247582287)));
      final rotationKey_0_9_10 = channel_0_9.rotationKeys.elementAt(10);
      expect(rotationKey_0_9_10.time, moreOrLessEquals(10));
      expect(rotationKey_0_9_10.value, quaternionMoreOrLessEquals(Quaternion(1.82399784e-09, 4.77576534e-10, 0.253291279, 0.253291279)));
      final rotationKey_0_9_11 = channel_0_9.rotationKeys.elementAt(11);
      expect(rotationKey_0_9_11.time, moreOrLessEquals(11));
      expect(rotationKey_0_9_11.value, quaternionMoreOrLessEquals(Quaternion(2.01205408e-09, 5.03235675e-10, 0.242636472, 0.242636472)));
      final rotationKey_0_9_12 = channel_0_9.rotationKeys.elementAt(12);
      expect(rotationKey_0_9_12.time, moreOrLessEquals(12));
      expect(rotationKey_0_9_12.value, quaternionMoreOrLessEquals(Quaternion(2.21244978e-09, 4.73637518e-10, 0.209335163, 0.209335163)));
      final rotationKey_0_9_13 = channel_0_9.rotationKeys.elementAt(13);
      expect(rotationKey_0_9_13.time, moreOrLessEquals(13));
      expect(rotationKey_0_9_13.value, quaternionMoreOrLessEquals(Quaternion(2.42213605e-09, 3.75881132e-10, 0.153350249, 0.153350249)));
      final rotationKey_0_9_14 = channel_0_9.rotationKeys.elementAt(14);
      expect(rotationKey_0_9_14.time, moreOrLessEquals(14));
      expect(rotationKey_0_9_14.value, quaternionMoreOrLessEquals(Quaternion(2.6316922e-09, 2.05156545e-10, 0.0777203292, 0.0777203292)));
      final rotationKey_0_9_15 = channel_0_9.rotationKeys.elementAt(15);
      expect(rotationKey_0_9_15.time, moreOrLessEquals(15));
      expect(rotationKey_0_9_15.value, quaternionMoreOrLessEquals(Quaternion(2.82809287e-09, -2.73307123e-11, -0.0096635567, -0.0096635567)));
      final rotationKey_0_9_16 = channel_0_9.rotationKeys.elementAt(16);
      expect(rotationKey_0_9_16.time, moreOrLessEquals(16));
      expect(rotationKey_0_9_16.value, quaternionMoreOrLessEquals(Quaternion(3.00257663e-09, -2.92325664e-10, -0.0969001129, -0.0969001129)));
      final rotationKey_0_9_17 = channel_0_9.rotationKeys.elementAt(17);
      expect(rotationKey_0_9_17.time, moreOrLessEquals(17));
      expect(rotationKey_0_9_17.value, quaternionMoreOrLessEquals(Quaternion(3.15744542e-09, -5.51927282e-10, -0.172190934, -0.172190934)));
      final rotationKey_0_9_18 = channel_0_9.rotationKeys.elementAt(18);
      expect(rotationKey_0_9_18.time, moreOrLessEquals(18));
      expect(rotationKey_0_9_18.value, quaternionMoreOrLessEquals(Quaternion(3.30458705e-09, -7.73341335e-10, -0.227864176, -0.227864176)));
      final rotationKey_0_9_19 = channel_0_9.rotationKeys.elementAt(19);
      expect(rotationKey_0_9_19.time, moreOrLessEquals(19));
      expect(rotationKey_0_9_19.value, quaternionMoreOrLessEquals(Quaternion(3.45818618e-09, -9.35238331e-10, -0.261063427, -0.261063427)));
      final rotationKey_0_9_20 = channel_0_9.rotationKeys.elementAt(20);
      expect(rotationKey_0_9_20.time, moreOrLessEquals(20));
      expect(rotationKey_0_9_20.value, quaternionMoreOrLessEquals(Quaternion(3.62889963e-09, -1.0253195e-09, -0.271898329, -0.271898329)));
      final rotationKey_0_9_21 = channel_0_9.rotationKeys.elementAt(21);
      expect(rotationKey_0_9_21.time, moreOrLessEquals(21));
      expect(rotationKey_0_9_21.value, quaternionMoreOrLessEquals(Quaternion(3.817064e-09, -1.05251241e-09, -0.265818506, -0.265818506)));
      final rotationKey_0_9_22 = channel_0_9.rotationKeys.elementAt(22);
      expect(rotationKey_0_9_22.time, moreOrLessEquals(22));
      expect(rotationKey_0_9_22.value, quaternionMoreOrLessEquals(Quaternion(3.75943143e-09, -2.043266e-09, -0.247395709, -0.247395709)));
      final rotationKey_0_9_23 = channel_0_9.rotationKeys.elementAt(23);
      expect(rotationKey_0_9_23.time, moreOrLessEquals(23));
      expect(rotationKey_0_9_23.value, quaternionMoreOrLessEquals(Quaternion(3.99498035e-09, -2.01261163e-09, -0.217078313, -0.217078313)));
      final rotationKey_0_9_24 = channel_0_9.rotationKeys.elementAt(24);
      expect(rotationKey_0_9_24.time, moreOrLessEquals(24));
      expect(rotationKey_0_9_24.value, quaternionMoreOrLessEquals(Quaternion(4.25128821e-09, -1.92740468e-09, -0.176866531, -0.176866531)));
      final rotationKey_0_9_25 = channel_0_9.rotationKeys.elementAt(25);
      expect(rotationKey_0_9_25.time, moreOrLessEquals(25));
      expect(rotationKey_0_9_25.value, quaternionMoreOrLessEquals(Quaternion(4.51723281e-09, -1.79902071e-09, -0.130776808, -0.130776808)));
      final rotationKey_0_9_26 = channel_0_9.rotationKeys.elementAt(26);
      expect(rotationKey_0_9_26.time, moreOrLessEquals(26));
      expect(rotationKey_0_9_26.value, quaternionMoreOrLessEquals(Quaternion(4.78006079e-09, -1.64986846e-09, -0.0844021663, -0.0844021663)));
      final rotationKey_0_9_27 = channel_0_9.rotationKeys.elementAt(27);
      expect(rotationKey_0_9_27.time, moreOrLessEquals(27));
      expect(rotationKey_0_9_27.value, quaternionMoreOrLessEquals(Quaternion(5.02999331e-09, -1.50832402e-09, -0.0434695259, -0.0434695259)));
      final rotationKey_0_9_28 = channel_0_9.rotationKeys.elementAt(28);
      expect(rotationKey_0_9_28.time, moreOrLessEquals(28));
      expect(rotationKey_0_9_28.value, quaternionMoreOrLessEquals(Quaternion(5.26250687e-09, -1.40085032e-09, -0.012310545, -0.012310545)));
      final rotationKey_0_9_29 = channel_0_9.rotationKeys.elementAt(29);
      expect(rotationKey_0_9_29.time, moreOrLessEquals(29));
      expect(rotationKey_0_9_29.value, quaternionMoreOrLessEquals(Quaternion(5.47711876e-09, -1.34672473e-09, 0.00675144512, 0.00675144512)));
      final rotationKey_0_9_30 = channel_0_9.rotationKeys.elementAt(30);
      expect(rotationKey_0_9_30.time, moreOrLessEquals(30));
      expect(rotationKey_0_9_30.value, quaternionMoreOrLessEquals(Quaternion(5.67466696e-09, -1.35736877e-09, 0.0130637605, 0.0130637605)));
      final rotationKey_0_9_31 = channel_0_9.rotationKeys.elementAt(31);
      expect(rotationKey_0_9_31.time, moreOrLessEquals(39));
      expect(rotationKey_0_9_31.value, quaternionMoreOrLessEquals(Quaternion(7.37706696e-09, -1.76457948e-09, 0.0130637605, 0.0130637605)));
      expect(channel_0_9.scalingKeys.length, equals(32));
      final scalingKey_0_9_0 = channel_0_9.scalingKeys.elementAt(0);
      expect(scalingKey_0_9_0.time, isZero);
      expect(scalingKey_0_9_0.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_9_1 = channel_0_9.scalingKeys.elementAt(1);
      expect(scalingKey_0_9_1.time, moreOrLessEquals(1));
      expect(scalingKey_0_9_1.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_9_2 = channel_0_9.scalingKeys.elementAt(2);
      expect(scalingKey_0_9_2.time, moreOrLessEquals(2));
      expect(scalingKey_0_9_2.value, vector3MoreOrLessEquals(Vector3(0.99999994, 0.99999994, 1)));
      final scalingKey_0_9_3 = channel_0_9.scalingKeys.elementAt(3);
      expect(scalingKey_0_9_3.time, moreOrLessEquals(3));
      expect(scalingKey_0_9_3.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_9_4 = channel_0_9.scalingKeys.elementAt(4);
      expect(scalingKey_0_9_4.time, moreOrLessEquals(4));
      expect(scalingKey_0_9_4.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_9_5 = channel_0_9.scalingKeys.elementAt(5);
      expect(scalingKey_0_9_5.time, moreOrLessEquals(5));
      expect(scalingKey_0_9_5.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_9_6 = channel_0_9.scalingKeys.elementAt(6);
      expect(scalingKey_0_9_6.time, moreOrLessEquals(6));
      expect(scalingKey_0_9_6.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_9_7 = channel_0_9.scalingKeys.elementAt(7);
      expect(scalingKey_0_9_7.time, moreOrLessEquals(7));
      expect(scalingKey_0_9_7.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_9_8 = channel_0_9.scalingKeys.elementAt(8);
      expect(scalingKey_0_9_8.time, moreOrLessEquals(8));
      expect(scalingKey_0_9_8.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_9_9 = channel_0_9.scalingKeys.elementAt(9);
      expect(scalingKey_0_9_9.time, moreOrLessEquals(9));
      expect(scalingKey_0_9_9.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_9_10 = channel_0_9.scalingKeys.elementAt(10);
      expect(scalingKey_0_9_10.time, moreOrLessEquals(10));
      expect(scalingKey_0_9_10.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_9_11 = channel_0_9.scalingKeys.elementAt(11);
      expect(scalingKey_0_9_11.time, moreOrLessEquals(11));
      expect(scalingKey_0_9_11.value, vector3MoreOrLessEquals(Vector3(0.99999994, 0.99999994, 1)));
      final scalingKey_0_9_12 = channel_0_9.scalingKeys.elementAt(12);
      expect(scalingKey_0_9_12.time, moreOrLessEquals(12));
      expect(scalingKey_0_9_12.value, vector3MoreOrLessEquals(Vector3(0.99999994, 0.99999994, 1)));
      final scalingKey_0_9_13 = channel_0_9.scalingKeys.elementAt(13);
      expect(scalingKey_0_9_13.time, moreOrLessEquals(13));
      expect(scalingKey_0_9_13.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_9_14 = channel_0_9.scalingKeys.elementAt(14);
      expect(scalingKey_0_9_14.time, moreOrLessEquals(14));
      expect(scalingKey_0_9_14.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_9_15 = channel_0_9.scalingKeys.elementAt(15);
      expect(scalingKey_0_9_15.time, moreOrLessEquals(15));
      expect(scalingKey_0_9_15.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_9_16 = channel_0_9.scalingKeys.elementAt(16);
      expect(scalingKey_0_9_16.time, moreOrLessEquals(16));
      expect(scalingKey_0_9_16.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_9_17 = channel_0_9.scalingKeys.elementAt(17);
      expect(scalingKey_0_9_17.time, moreOrLessEquals(17));
      expect(scalingKey_0_9_17.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_9_18 = channel_0_9.scalingKeys.elementAt(18);
      expect(scalingKey_0_9_18.time, moreOrLessEquals(18));
      expect(scalingKey_0_9_18.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_9_19 = channel_0_9.scalingKeys.elementAt(19);
      expect(scalingKey_0_9_19.time, moreOrLessEquals(19));
      expect(scalingKey_0_9_19.value, vector3MoreOrLessEquals(Vector3(0.99999994, 0.99999994, 1)));
      final scalingKey_0_9_20 = channel_0_9.scalingKeys.elementAt(20);
      expect(scalingKey_0_9_20.time, moreOrLessEquals(20));
      expect(scalingKey_0_9_20.value, vector3MoreOrLessEquals(Vector3(0.999999881, 0.999999881, 0.99999994)));
      final scalingKey_0_9_21 = channel_0_9.scalingKeys.elementAt(21);
      expect(scalingKey_0_9_21.time, moreOrLessEquals(21));
      expect(scalingKey_0_9_21.value, vector3MoreOrLessEquals(Vector3(0.999999881, 0.999999881, 0.99999994)));
      final scalingKey_0_9_22 = channel_0_9.scalingKeys.elementAt(22);
      expect(scalingKey_0_9_22.time, moreOrLessEquals(22));
      expect(scalingKey_0_9_22.value, vector3MoreOrLessEquals(Vector3(0.99999994, 0.99999994, 0.99999994)));
      final scalingKey_0_9_23 = channel_0_9.scalingKeys.elementAt(23);
      expect(scalingKey_0_9_23.time, moreOrLessEquals(23));
      expect(scalingKey_0_9_23.value, vector3MoreOrLessEquals(Vector3(0.99999994, 0.99999994, 0.99999994)));
      final scalingKey_0_9_24 = channel_0_9.scalingKeys.elementAt(24);
      expect(scalingKey_0_9_24.time, moreOrLessEquals(24));
      expect(scalingKey_0_9_24.value, vector3MoreOrLessEquals(Vector3(0.99999994, 0.99999994, 0.99999994)));
      final scalingKey_0_9_25 = channel_0_9.scalingKeys.elementAt(25);
      expect(scalingKey_0_9_25.time, moreOrLessEquals(25));
      expect(scalingKey_0_9_25.value, vector3MoreOrLessEquals(Vector3(0.99999994, 0.99999994, 0.99999994)));
      final scalingKey_0_9_26 = channel_0_9.scalingKeys.elementAt(26);
      expect(scalingKey_0_9_26.time, moreOrLessEquals(26));
      expect(scalingKey_0_9_26.value, vector3MoreOrLessEquals(Vector3(0.999999881, 0.999999881, 0.99999994)));
      final scalingKey_0_9_27 = channel_0_9.scalingKeys.elementAt(27);
      expect(scalingKey_0_9_27.time, moreOrLessEquals(27));
      expect(scalingKey_0_9_27.value, vector3MoreOrLessEquals(Vector3(0.99999994, 0.99999994, 0.99999994)));
      final scalingKey_0_9_28 = channel_0_9.scalingKeys.elementAt(28);
      expect(scalingKey_0_9_28.time, moreOrLessEquals(28));
      expect(scalingKey_0_9_28.value, vector3MoreOrLessEquals(Vector3(0.99999994, 0.99999994, 0.99999994)));
      final scalingKey_0_9_29 = channel_0_9.scalingKeys.elementAt(29);
      expect(scalingKey_0_9_29.time, moreOrLessEquals(29));
      expect(scalingKey_0_9_29.value, vector3MoreOrLessEquals(Vector3(0.99999994, 0.99999994, 0.99999994)));
      final scalingKey_0_9_30 = channel_0_9.scalingKeys.elementAt(30);
      expect(scalingKey_0_9_30.time, moreOrLessEquals(30));
      expect(scalingKey_0_9_30.value, vector3MoreOrLessEquals(Vector3(0.99999994, 0.99999994, 0.99999994)));
      final scalingKey_0_9_31 = channel_0_9.scalingKeys.elementAt(31);
      expect(scalingKey_0_9_31.time, moreOrLessEquals(39));
      expect(scalingKey_0_9_31.value, vector3MoreOrLessEquals(Vector3(0.99999994, 0.99999994, 0.99999994)));
      expect(channel_0_9.preState, equals(AnimBehavior.defaults));
      expect(channel_0_9.postState, equals(AnimBehavior.defaults));
      expect(animation_0.meshChannels.length, isZero);
      expect(animation_0.meshMorphChannels.length, isZero);
    });
  });

  test('collada', () {
    testScene('anims.dae', (scene) {
      final animations = scene.animations;
      expect(animations, isNotEmpty);
      expect(animations.length, equals(1));
      final animation_0 = animations.elementAt(0);
      expect(animation_0.name, isEmpty);
      expect(animation_0.duration, moreOrLessEquals(11.9666672));
      expect(animation_0.ticksPerSecond, moreOrLessEquals(1));
      expect(animation_0.channels.length, equals(64));
      final  channel_0_0 = animation_0.channels.elementAt(0);
      expect(channel_0_0.positionKeys.length, equals(5));
      final positionKey_0_0_0 = channel_0_0.positionKeys.elementAt(0);
      expect(positionKey_0_0_0.time, moreOrLessEquals(0.0333329998));
      expect(positionKey_0_0_0.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_0_1 = channel_0_0.positionKeys.elementAt(1);
      expect(positionKey_0_0_1.time, moreOrLessEquals(3.01666665));
      expect(positionKey_0_0_1.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_0_2 = channel_0_0.positionKeys.elementAt(2);
      expect(positionKey_0_0_2.time, moreOrLessEquals(6));
      expect(positionKey_0_0_2.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_0_3 = channel_0_0.positionKeys.elementAt(3);
      expect(positionKey_0_0_3.time, moreOrLessEquals(8.98333359));
      expect(positionKey_0_0_3.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_0_4 = channel_0_0.positionKeys.elementAt(4);
      expect(positionKey_0_0_4.time, moreOrLessEquals(11.9666672));
      expect(positionKey_0_0_4.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      expect(channel_0_0.rotationKeys.length, equals(5));
      final rotationKey_0_0_0 = channel_0_0.rotationKeys.elementAt(0);
      expect(rotationKey_0_0_0.time, moreOrLessEquals(0.0333329998));
      expect(rotationKey_0_0_0.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 2.38497613e-08, 2.38497613e-08)));
      final rotationKey_0_0_1 = channel_0_0.rotationKeys.elementAt(1);
      expect(rotationKey_0_0_1.time, moreOrLessEquals(3.01666665));
      expect(rotationKey_0_0_1.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0.707107008, 0.707107008)));
      final rotationKey_0_0_2 = channel_0_0.rotationKeys.elementAt(2);
      expect(rotationKey_0_0_2.time, moreOrLessEquals(6));
      expect(rotationKey_0_0_2.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 1, 1)));
      final rotationKey_0_0_3 = channel_0_0.rotationKeys.elementAt(3);
      expect(rotationKey_0_0_3.time, moreOrLessEquals(8.98333359));
      expect(rotationKey_0_0_3.value, quaternionMoreOrLessEquals(Quaternion(0, 0, -0.707106054, -0.707106054)));
      final rotationKey_0_0_4 = channel_0_0.rotationKeys.elementAt(4);
      expect(rotationKey_0_0_4.time, moreOrLessEquals(11.9666672));
      expect(rotationKey_0_0_4.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 3.49691106e-07, 3.49691106e-07)));
      expect(channel_0_0.scalingKeys.length, equals(5));
      final scalingKey_0_0_0 = channel_0_0.scalingKeys.elementAt(0);
      expect(scalingKey_0_0_0.time, moreOrLessEquals(0.0333329998));
      expect(scalingKey_0_0_0.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_0_1 = channel_0_0.scalingKeys.elementAt(1);
      expect(scalingKey_0_0_1.time, moreOrLessEquals(3.01666665));
      expect(scalingKey_0_0_1.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_0_2 = channel_0_0.scalingKeys.elementAt(2);
      expect(scalingKey_0_0_2.time, moreOrLessEquals(6));
      expect(scalingKey_0_0_2.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_0_3 = channel_0_0.scalingKeys.elementAt(3);
      expect(scalingKey_0_0_3.time, moreOrLessEquals(8.98333359));
      expect(scalingKey_0_0_3.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_0_4 = channel_0_0.scalingKeys.elementAt(4);
      expect(scalingKey_0_0_4.time, moreOrLessEquals(11.9666672));
      expect(scalingKey_0_0_4.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      expect(channel_0_0.preState, equals(AnimBehavior.defaults));
      expect(channel_0_0.postState, equals(AnimBehavior.defaults));
      final  channel_0_1 = animation_0.channels.elementAt(1);
      expect(channel_0_1.positionKeys.length, equals(5));
      final positionKey_0_1_0 = channel_0_1.positionKeys.elementAt(0);
      expect(positionKey_0_1_0.time, moreOrLessEquals(0.0333329998));
      expect(positionKey_0_1_0.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_1_1 = channel_0_1.positionKeys.elementAt(1);
      expect(positionKey_0_1_1.time, moreOrLessEquals(3.01666665));
      expect(positionKey_0_1_1.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_1_2 = channel_0_1.positionKeys.elementAt(2);
      expect(positionKey_0_1_2.time, moreOrLessEquals(6));
      expect(positionKey_0_1_2.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_1_3 = channel_0_1.positionKeys.elementAt(3);
      expect(positionKey_0_1_3.time, moreOrLessEquals(8.98333359));
      expect(positionKey_0_1_3.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_1_4 = channel_0_1.positionKeys.elementAt(4);
      expect(positionKey_0_1_4.time, moreOrLessEquals(11.9666672));
      expect(positionKey_0_1_4.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      expect(channel_0_1.rotationKeys.length, equals(5));
      final rotationKey_0_1_0 = channel_0_1.rotationKeys.elementAt(0);
      expect(rotationKey_0_1_0.time, moreOrLessEquals(0.0333329998));
      expect(rotationKey_0_1_0.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 2.38497613e-08, 2.38497613e-08)));
      final rotationKey_0_1_1 = channel_0_1.rotationKeys.elementAt(1);
      expect(rotationKey_0_1_1.time, moreOrLessEquals(3.01666665));
      expect(rotationKey_0_1_1.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0.707107008, 0.707107008)));
      final rotationKey_0_1_2 = channel_0_1.rotationKeys.elementAt(2);
      expect(rotationKey_0_1_2.time, moreOrLessEquals(6));
      expect(rotationKey_0_1_2.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 1, 1)));
      final rotationKey_0_1_3 = channel_0_1.rotationKeys.elementAt(3);
      expect(rotationKey_0_1_3.time, moreOrLessEquals(8.98333359));
      expect(rotationKey_0_1_3.value, quaternionMoreOrLessEquals(Quaternion(0, 0, -0.707106054, -0.707106054)));
      final rotationKey_0_1_4 = channel_0_1.rotationKeys.elementAt(4);
      expect(rotationKey_0_1_4.time, moreOrLessEquals(11.9666672));
      expect(rotationKey_0_1_4.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 3.49691106e-07, 3.49691106e-07)));
      expect(channel_0_1.scalingKeys.length, equals(5));
      final scalingKey_0_1_0 = channel_0_1.scalingKeys.elementAt(0);
      expect(scalingKey_0_1_0.time, moreOrLessEquals(0.0333329998));
      expect(scalingKey_0_1_0.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_1_1 = channel_0_1.scalingKeys.elementAt(1);
      expect(scalingKey_0_1_1.time, moreOrLessEquals(3.01666665));
      expect(scalingKey_0_1_1.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_1_2 = channel_0_1.scalingKeys.elementAt(2);
      expect(scalingKey_0_1_2.time, moreOrLessEquals(6));
      expect(scalingKey_0_1_2.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_1_3 = channel_0_1.scalingKeys.elementAt(3);
      expect(scalingKey_0_1_3.time, moreOrLessEquals(8.98333359));
      expect(scalingKey_0_1_3.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_1_4 = channel_0_1.scalingKeys.elementAt(4);
      expect(scalingKey_0_1_4.time, moreOrLessEquals(11.9666672));
      expect(scalingKey_0_1_4.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      expect(channel_0_1.preState, equals(AnimBehavior.defaults));
      expect(channel_0_1.postState, equals(AnimBehavior.defaults));
      final  channel_0_2 = animation_0.channels.elementAt(2);
      expect(channel_0_2.positionKeys.length, equals(5));
      final positionKey_0_2_0 = channel_0_2.positionKeys.elementAt(0);
      expect(positionKey_0_2_0.time, moreOrLessEquals(0.0333329998));
      expect(positionKey_0_2_0.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_2_1 = channel_0_2.positionKeys.elementAt(1);
      expect(positionKey_0_2_1.time, moreOrLessEquals(3.01666665));
      expect(positionKey_0_2_1.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_2_2 = channel_0_2.positionKeys.elementAt(2);
      expect(positionKey_0_2_2.time, moreOrLessEquals(6));
      expect(positionKey_0_2_2.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_2_3 = channel_0_2.positionKeys.elementAt(3);
      expect(positionKey_0_2_3.time, moreOrLessEquals(8.98333359));
      expect(positionKey_0_2_3.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_2_4 = channel_0_2.positionKeys.elementAt(4);
      expect(positionKey_0_2_4.time, moreOrLessEquals(11.9666672));
      expect(positionKey_0_2_4.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      expect(channel_0_2.rotationKeys.length, equals(5));
      final rotationKey_0_2_0 = channel_0_2.rotationKeys.elementAt(0);
      expect(rotationKey_0_2_0.time, moreOrLessEquals(0.0333329998));
      expect(rotationKey_0_2_0.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 2.38497613e-08, 2.38497613e-08)));
      final rotationKey_0_2_1 = channel_0_2.rotationKeys.elementAt(1);
      expect(rotationKey_0_2_1.time, moreOrLessEquals(3.01666665));
      expect(rotationKey_0_2_1.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0.707107008, 0.707107008)));
      final rotationKey_0_2_2 = channel_0_2.rotationKeys.elementAt(2);
      expect(rotationKey_0_2_2.time, moreOrLessEquals(6));
      expect(rotationKey_0_2_2.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 1, 1)));
      final rotationKey_0_2_3 = channel_0_2.rotationKeys.elementAt(3);
      expect(rotationKey_0_2_3.time, moreOrLessEquals(8.98333359));
      expect(rotationKey_0_2_3.value, quaternionMoreOrLessEquals(Quaternion(0, 0, -0.707106054, -0.707106054)));
      final rotationKey_0_2_4 = channel_0_2.rotationKeys.elementAt(4);
      expect(rotationKey_0_2_4.time, moreOrLessEquals(11.9666672));
      expect(rotationKey_0_2_4.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 3.49691106e-07, 3.49691106e-07)));
      expect(channel_0_2.scalingKeys.length, equals(5));
      final scalingKey_0_2_0 = channel_0_2.scalingKeys.elementAt(0);
      expect(scalingKey_0_2_0.time, moreOrLessEquals(0.0333329998));
      expect(scalingKey_0_2_0.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_2_1 = channel_0_2.scalingKeys.elementAt(1);
      expect(scalingKey_0_2_1.time, moreOrLessEquals(3.01666665));
      expect(scalingKey_0_2_1.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_2_2 = channel_0_2.scalingKeys.elementAt(2);
      expect(scalingKey_0_2_2.time, moreOrLessEquals(6));
      expect(scalingKey_0_2_2.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_2_3 = channel_0_2.scalingKeys.elementAt(3);
      expect(scalingKey_0_2_3.time, moreOrLessEquals(8.98333359));
      expect(scalingKey_0_2_3.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_2_4 = channel_0_2.scalingKeys.elementAt(4);
      expect(scalingKey_0_2_4.time, moreOrLessEquals(11.9666672));
      expect(scalingKey_0_2_4.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      expect(channel_0_2.preState, equals(AnimBehavior.defaults));
      expect(channel_0_2.postState, equals(AnimBehavior.defaults));
      final  channel_0_3 = animation_0.channels.elementAt(3);
      expect(channel_0_3.positionKeys.length, equals(5));
      final positionKey_0_3_0 = channel_0_3.positionKeys.elementAt(0);
      expect(positionKey_0_3_0.time, moreOrLessEquals(0.0333329998));
      expect(positionKey_0_3_0.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_3_1 = channel_0_3.positionKeys.elementAt(1);
      expect(positionKey_0_3_1.time, moreOrLessEquals(3.01666665));
      expect(positionKey_0_3_1.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_3_2 = channel_0_3.positionKeys.elementAt(2);
      expect(positionKey_0_3_2.time, moreOrLessEquals(6));
      expect(positionKey_0_3_2.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_3_3 = channel_0_3.positionKeys.elementAt(3);
      expect(positionKey_0_3_3.time, moreOrLessEquals(8.98333359));
      expect(positionKey_0_3_3.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_3_4 = channel_0_3.positionKeys.elementAt(4);
      expect(positionKey_0_3_4.time, moreOrLessEquals(11.9666672));
      expect(positionKey_0_3_4.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      expect(channel_0_3.rotationKeys.length, equals(5));
      final rotationKey_0_3_0 = channel_0_3.rotationKeys.elementAt(0);
      expect(rotationKey_0_3_0.time, moreOrLessEquals(0.0333329998));
      expect(rotationKey_0_3_0.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 2.38497613e-08, 2.38497613e-08)));
      final rotationKey_0_3_1 = channel_0_3.rotationKeys.elementAt(1);
      expect(rotationKey_0_3_1.time, moreOrLessEquals(3.01666665));
      expect(rotationKey_0_3_1.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0.707107008, 0.707107008)));
      final rotationKey_0_3_2 = channel_0_3.rotationKeys.elementAt(2);
      expect(rotationKey_0_3_2.time, moreOrLessEquals(6));
      expect(rotationKey_0_3_2.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 1, 1)));
      final rotationKey_0_3_3 = channel_0_3.rotationKeys.elementAt(3);
      expect(rotationKey_0_3_3.time, moreOrLessEquals(8.98333359));
      expect(rotationKey_0_3_3.value, quaternionMoreOrLessEquals(Quaternion(0, 0, -0.707106054, -0.707106054)));
      final rotationKey_0_3_4 = channel_0_3.rotationKeys.elementAt(4);
      expect(rotationKey_0_3_4.time, moreOrLessEquals(11.9666672));
      expect(rotationKey_0_3_4.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 3.49691106e-07, 3.49691106e-07)));
      expect(channel_0_3.scalingKeys.length, equals(5));
      final scalingKey_0_3_0 = channel_0_3.scalingKeys.elementAt(0);
      expect(scalingKey_0_3_0.time, moreOrLessEquals(0.0333329998));
      expect(scalingKey_0_3_0.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_3_1 = channel_0_3.scalingKeys.elementAt(1);
      expect(scalingKey_0_3_1.time, moreOrLessEquals(3.01666665));
      expect(scalingKey_0_3_1.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_3_2 = channel_0_3.scalingKeys.elementAt(2);
      expect(scalingKey_0_3_2.time, moreOrLessEquals(6));
      expect(scalingKey_0_3_2.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_3_3 = channel_0_3.scalingKeys.elementAt(3);
      expect(scalingKey_0_3_3.time, moreOrLessEquals(8.98333359));
      expect(scalingKey_0_3_3.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_3_4 = channel_0_3.scalingKeys.elementAt(4);
      expect(scalingKey_0_3_4.time, moreOrLessEquals(11.9666672));
      expect(scalingKey_0_3_4.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      expect(channel_0_3.preState, equals(AnimBehavior.defaults));
      expect(channel_0_3.postState, equals(AnimBehavior.defaults));
      final  channel_0_4 = animation_0.channels.elementAt(4);
      expect(channel_0_4.positionKeys.length, equals(5));
      final positionKey_0_4_0 = channel_0_4.positionKeys.elementAt(0);
      expect(positionKey_0_4_0.time, moreOrLessEquals(0.0333329998));
      expect(positionKey_0_4_0.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_4_1 = channel_0_4.positionKeys.elementAt(1);
      expect(positionKey_0_4_1.time, moreOrLessEquals(3.01666665));
      expect(positionKey_0_4_1.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_4_2 = channel_0_4.positionKeys.elementAt(2);
      expect(positionKey_0_4_2.time, moreOrLessEquals(6));
      expect(positionKey_0_4_2.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_4_3 = channel_0_4.positionKeys.elementAt(3);
      expect(positionKey_0_4_3.time, moreOrLessEquals(8.98333359));
      expect(positionKey_0_4_3.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_4_4 = channel_0_4.positionKeys.elementAt(4);
      expect(positionKey_0_4_4.time, moreOrLessEquals(11.9666672));
      expect(positionKey_0_4_4.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      expect(channel_0_4.rotationKeys.length, equals(5));
      final rotationKey_0_4_0 = channel_0_4.rotationKeys.elementAt(0);
      expect(rotationKey_0_4_0.time, moreOrLessEquals(0.0333329998));
      expect(rotationKey_0_4_0.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 2.38497613e-08, 2.38497613e-08)));
      final rotationKey_0_4_1 = channel_0_4.rotationKeys.elementAt(1);
      expect(rotationKey_0_4_1.time, moreOrLessEquals(3.01666665));
      expect(rotationKey_0_4_1.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0.707107008, 0.707107008)));
      final rotationKey_0_4_2 = channel_0_4.rotationKeys.elementAt(2);
      expect(rotationKey_0_4_2.time, moreOrLessEquals(6));
      expect(rotationKey_0_4_2.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 1, 1)));
      final rotationKey_0_4_3 = channel_0_4.rotationKeys.elementAt(3);
      expect(rotationKey_0_4_3.time, moreOrLessEquals(8.98333359));
      expect(rotationKey_0_4_3.value, quaternionMoreOrLessEquals(Quaternion(0, 0, -0.707106054, -0.707106054)));
      final rotationKey_0_4_4 = channel_0_4.rotationKeys.elementAt(4);
      expect(rotationKey_0_4_4.time, moreOrLessEquals(11.9666672));
      expect(rotationKey_0_4_4.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 3.49691106e-07, 3.49691106e-07)));
      expect(channel_0_4.scalingKeys.length, equals(5));
      final scalingKey_0_4_0 = channel_0_4.scalingKeys.elementAt(0);
      expect(scalingKey_0_4_0.time, moreOrLessEquals(0.0333329998));
      expect(scalingKey_0_4_0.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_4_1 = channel_0_4.scalingKeys.elementAt(1);
      expect(scalingKey_0_4_1.time, moreOrLessEquals(3.01666665));
      expect(scalingKey_0_4_1.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_4_2 = channel_0_4.scalingKeys.elementAt(2);
      expect(scalingKey_0_4_2.time, moreOrLessEquals(6));
      expect(scalingKey_0_4_2.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_4_3 = channel_0_4.scalingKeys.elementAt(3);
      expect(scalingKey_0_4_3.time, moreOrLessEquals(8.98333359));
      expect(scalingKey_0_4_3.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_4_4 = channel_0_4.scalingKeys.elementAt(4);
      expect(scalingKey_0_4_4.time, moreOrLessEquals(11.9666672));
      expect(scalingKey_0_4_4.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      expect(channel_0_4.preState, equals(AnimBehavior.defaults));
      expect(channel_0_4.postState, equals(AnimBehavior.defaults));
      final  channel_0_5 = animation_0.channels.elementAt(5);
      expect(channel_0_5.positionKeys.length, equals(5));
      final positionKey_0_5_0 = channel_0_5.positionKeys.elementAt(0);
      expect(positionKey_0_5_0.time, moreOrLessEquals(0.0333329998));
      expect(positionKey_0_5_0.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_5_1 = channel_0_5.positionKeys.elementAt(1);
      expect(positionKey_0_5_1.time, moreOrLessEquals(3.01666665));
      expect(positionKey_0_5_1.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_5_2 = channel_0_5.positionKeys.elementAt(2);
      expect(positionKey_0_5_2.time, moreOrLessEquals(6));
      expect(positionKey_0_5_2.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_5_3 = channel_0_5.positionKeys.elementAt(3);
      expect(positionKey_0_5_3.time, moreOrLessEquals(8.98333359));
      expect(positionKey_0_5_3.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_5_4 = channel_0_5.positionKeys.elementAt(4);
      expect(positionKey_0_5_4.time, moreOrLessEquals(11.9666672));
      expect(positionKey_0_5_4.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      expect(channel_0_5.rotationKeys.length, equals(5));
      final rotationKey_0_5_0 = channel_0_5.rotationKeys.elementAt(0);
      expect(rotationKey_0_5_0.time, moreOrLessEquals(0.0333329998));
      expect(rotationKey_0_5_0.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 2.38497613e-08, 2.38497613e-08)));
      final rotationKey_0_5_1 = channel_0_5.rotationKeys.elementAt(1);
      expect(rotationKey_0_5_1.time, moreOrLessEquals(3.01666665));
      expect(rotationKey_0_5_1.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0.707107008, 0.707107008)));
      final rotationKey_0_5_2 = channel_0_5.rotationKeys.elementAt(2);
      expect(rotationKey_0_5_2.time, moreOrLessEquals(6));
      expect(rotationKey_0_5_2.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 1, 1)));
      final rotationKey_0_5_3 = channel_0_5.rotationKeys.elementAt(3);
      expect(rotationKey_0_5_3.time, moreOrLessEquals(8.98333359));
      expect(rotationKey_0_5_3.value, quaternionMoreOrLessEquals(Quaternion(0, 0, -0.707106054, -0.707106054)));
      final rotationKey_0_5_4 = channel_0_5.rotationKeys.elementAt(4);
      expect(rotationKey_0_5_4.time, moreOrLessEquals(11.9666672));
      expect(rotationKey_0_5_4.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 3.49691106e-07, 3.49691106e-07)));
      expect(channel_0_5.scalingKeys.length, equals(5));
      final scalingKey_0_5_0 = channel_0_5.scalingKeys.elementAt(0);
      expect(scalingKey_0_5_0.time, moreOrLessEquals(0.0333329998));
      expect(scalingKey_0_5_0.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_5_1 = channel_0_5.scalingKeys.elementAt(1);
      expect(scalingKey_0_5_1.time, moreOrLessEquals(3.01666665));
      expect(scalingKey_0_5_1.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_5_2 = channel_0_5.scalingKeys.elementAt(2);
      expect(scalingKey_0_5_2.time, moreOrLessEquals(6));
      expect(scalingKey_0_5_2.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_5_3 = channel_0_5.scalingKeys.elementAt(3);
      expect(scalingKey_0_5_3.time, moreOrLessEquals(8.98333359));
      expect(scalingKey_0_5_3.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_5_4 = channel_0_5.scalingKeys.elementAt(4);
      expect(scalingKey_0_5_4.time, moreOrLessEquals(11.9666672));
      expect(scalingKey_0_5_4.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      expect(channel_0_5.preState, equals(AnimBehavior.defaults));
      expect(channel_0_5.postState, equals(AnimBehavior.defaults));
      final  channel_0_6 = animation_0.channels.elementAt(6);
      expect(channel_0_6.positionKeys.length, equals(5));
      final positionKey_0_6_0 = channel_0_6.positionKeys.elementAt(0);
      expect(positionKey_0_6_0.time, moreOrLessEquals(0.0333329998));
      expect(positionKey_0_6_0.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_6_1 = channel_0_6.positionKeys.elementAt(1);
      expect(positionKey_0_6_1.time, moreOrLessEquals(3.01666665));
      expect(positionKey_0_6_1.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_6_2 = channel_0_6.positionKeys.elementAt(2);
      expect(positionKey_0_6_2.time, moreOrLessEquals(6));
      expect(positionKey_0_6_2.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_6_3 = channel_0_6.positionKeys.elementAt(3);
      expect(positionKey_0_6_3.time, moreOrLessEquals(8.98333359));
      expect(positionKey_0_6_3.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_6_4 = channel_0_6.positionKeys.elementAt(4);
      expect(positionKey_0_6_4.time, moreOrLessEquals(11.9666672));
      expect(positionKey_0_6_4.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      expect(channel_0_6.rotationKeys.length, equals(5));
      final rotationKey_0_6_0 = channel_0_6.rotationKeys.elementAt(0);
      expect(rotationKey_0_6_0.time, moreOrLessEquals(0.0333329998));
      expect(rotationKey_0_6_0.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 2.38497613e-08, 2.38497613e-08)));
      final rotationKey_0_6_1 = channel_0_6.rotationKeys.elementAt(1);
      expect(rotationKey_0_6_1.time, moreOrLessEquals(3.01666665));
      expect(rotationKey_0_6_1.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0.707107008, 0.707107008)));
      final rotationKey_0_6_2 = channel_0_6.rotationKeys.elementAt(2);
      expect(rotationKey_0_6_2.time, moreOrLessEquals(6));
      expect(rotationKey_0_6_2.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 1, 1)));
      final rotationKey_0_6_3 = channel_0_6.rotationKeys.elementAt(3);
      expect(rotationKey_0_6_3.time, moreOrLessEquals(8.98333359));
      expect(rotationKey_0_6_3.value, quaternionMoreOrLessEquals(Quaternion(0, 0, -0.707106054, -0.707106054)));
      final rotationKey_0_6_4 = channel_0_6.rotationKeys.elementAt(4);
      expect(rotationKey_0_6_4.time, moreOrLessEquals(11.9666672));
      expect(rotationKey_0_6_4.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 3.49691106e-07, 3.49691106e-07)));
      expect(channel_0_6.scalingKeys.length, equals(5));
      final scalingKey_0_6_0 = channel_0_6.scalingKeys.elementAt(0);
      expect(scalingKey_0_6_0.time, moreOrLessEquals(0.0333329998));
      expect(scalingKey_0_6_0.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_6_1 = channel_0_6.scalingKeys.elementAt(1);
      expect(scalingKey_0_6_1.time, moreOrLessEquals(3.01666665));
      expect(scalingKey_0_6_1.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_6_2 = channel_0_6.scalingKeys.elementAt(2);
      expect(scalingKey_0_6_2.time, moreOrLessEquals(6));
      expect(scalingKey_0_6_2.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_6_3 = channel_0_6.scalingKeys.elementAt(3);
      expect(scalingKey_0_6_3.time, moreOrLessEquals(8.98333359));
      expect(scalingKey_0_6_3.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_6_4 = channel_0_6.scalingKeys.elementAt(4);
      expect(scalingKey_0_6_4.time, moreOrLessEquals(11.9666672));
      expect(scalingKey_0_6_4.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      expect(channel_0_6.preState, equals(AnimBehavior.defaults));
      expect(channel_0_6.postState, equals(AnimBehavior.defaults));
      final  channel_0_7 = animation_0.channels.elementAt(7);
      expect(channel_0_7.positionKeys.length, equals(5));
      final positionKey_0_7_0 = channel_0_7.positionKeys.elementAt(0);
      expect(positionKey_0_7_0.time, moreOrLessEquals(0.0333329998));
      expect(positionKey_0_7_0.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_7_1 = channel_0_7.positionKeys.elementAt(1);
      expect(positionKey_0_7_1.time, moreOrLessEquals(3.01666665));
      expect(positionKey_0_7_1.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_7_2 = channel_0_7.positionKeys.elementAt(2);
      expect(positionKey_0_7_2.time, moreOrLessEquals(6));
      expect(positionKey_0_7_2.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_7_3 = channel_0_7.positionKeys.elementAt(3);
      expect(positionKey_0_7_3.time, moreOrLessEquals(8.98333359));
      expect(positionKey_0_7_3.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_7_4 = channel_0_7.positionKeys.elementAt(4);
      expect(positionKey_0_7_4.time, moreOrLessEquals(11.9666672));
      expect(positionKey_0_7_4.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      expect(channel_0_7.rotationKeys.length, equals(5));
      final rotationKey_0_7_0 = channel_0_7.rotationKeys.elementAt(0);
      expect(rotationKey_0_7_0.time, moreOrLessEquals(0.0333329998));
      expect(rotationKey_0_7_0.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 2.38497613e-08, 2.38497613e-08)));
      final rotationKey_0_7_1 = channel_0_7.rotationKeys.elementAt(1);
      expect(rotationKey_0_7_1.time, moreOrLessEquals(3.01666665));
      expect(rotationKey_0_7_1.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0.707107008, 0.707107008)));
      final rotationKey_0_7_2 = channel_0_7.rotationKeys.elementAt(2);
      expect(rotationKey_0_7_2.time, moreOrLessEquals(6));
      expect(rotationKey_0_7_2.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 1, 1)));
      final rotationKey_0_7_3 = channel_0_7.rotationKeys.elementAt(3);
      expect(rotationKey_0_7_3.time, moreOrLessEquals(8.98333359));
      expect(rotationKey_0_7_3.value, quaternionMoreOrLessEquals(Quaternion(0, 0, -0.707106054, -0.707106054)));
      final rotationKey_0_7_4 = channel_0_7.rotationKeys.elementAt(4);
      expect(rotationKey_0_7_4.time, moreOrLessEquals(11.9666672));
      expect(rotationKey_0_7_4.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 3.49691106e-07, 3.49691106e-07)));
      expect(channel_0_7.scalingKeys.length, equals(5));
      final scalingKey_0_7_0 = channel_0_7.scalingKeys.elementAt(0);
      expect(scalingKey_0_7_0.time, moreOrLessEquals(0.0333329998));
      expect(scalingKey_0_7_0.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_7_1 = channel_0_7.scalingKeys.elementAt(1);
      expect(scalingKey_0_7_1.time, moreOrLessEquals(3.01666665));
      expect(scalingKey_0_7_1.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_7_2 = channel_0_7.scalingKeys.elementAt(2);
      expect(scalingKey_0_7_2.time, moreOrLessEquals(6));
      expect(scalingKey_0_7_2.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_7_3 = channel_0_7.scalingKeys.elementAt(3);
      expect(scalingKey_0_7_3.time, moreOrLessEquals(8.98333359));
      expect(scalingKey_0_7_3.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_7_4 = channel_0_7.scalingKeys.elementAt(4);
      expect(scalingKey_0_7_4.time, moreOrLessEquals(11.9666672));
      expect(scalingKey_0_7_4.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      expect(channel_0_7.preState, equals(AnimBehavior.defaults));
      expect(channel_0_7.postState, equals(AnimBehavior.defaults));
      final  channel_0_8 = animation_0.channels.elementAt(8);
      expect(channel_0_8.positionKeys.length, equals(5));
      final positionKey_0_8_0 = channel_0_8.positionKeys.elementAt(0);
      expect(positionKey_0_8_0.time, moreOrLessEquals(0.0333329998));
      expect(positionKey_0_8_0.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_8_1 = channel_0_8.positionKeys.elementAt(1);
      expect(positionKey_0_8_1.time, moreOrLessEquals(3.01666665));
      expect(positionKey_0_8_1.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_8_2 = channel_0_8.positionKeys.elementAt(2);
      expect(positionKey_0_8_2.time, moreOrLessEquals(6));
      expect(positionKey_0_8_2.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_8_3 = channel_0_8.positionKeys.elementAt(3);
      expect(positionKey_0_8_3.time, moreOrLessEquals(8.98333359));
      expect(positionKey_0_8_3.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_8_4 = channel_0_8.positionKeys.elementAt(4);
      expect(positionKey_0_8_4.time, moreOrLessEquals(11.9666672));
      expect(positionKey_0_8_4.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      expect(channel_0_8.rotationKeys.length, equals(5));
      final rotationKey_0_8_0 = channel_0_8.rotationKeys.elementAt(0);
      expect(rotationKey_0_8_0.time, moreOrLessEquals(0.0333329998));
      expect(rotationKey_0_8_0.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 2.38497613e-08, 2.38497613e-08)));
      final rotationKey_0_8_1 = channel_0_8.rotationKeys.elementAt(1);
      expect(rotationKey_0_8_1.time, moreOrLessEquals(3.01666665));
      expect(rotationKey_0_8_1.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0.707107008, 0.707107008)));
      final rotationKey_0_8_2 = channel_0_8.rotationKeys.elementAt(2);
      expect(rotationKey_0_8_2.time, moreOrLessEquals(6));
      expect(rotationKey_0_8_2.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 1, 1)));
      final rotationKey_0_8_3 = channel_0_8.rotationKeys.elementAt(3);
      expect(rotationKey_0_8_3.time, moreOrLessEquals(8.98333359));
      expect(rotationKey_0_8_3.value, quaternionMoreOrLessEquals(Quaternion(0, 0, -0.707106054, -0.707106054)));
      final rotationKey_0_8_4 = channel_0_8.rotationKeys.elementAt(4);
      expect(rotationKey_0_8_4.time, moreOrLessEquals(11.9666672));
      expect(rotationKey_0_8_4.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 3.49691106e-07, 3.49691106e-07)));
      expect(channel_0_8.scalingKeys.length, equals(5));
      final scalingKey_0_8_0 = channel_0_8.scalingKeys.elementAt(0);
      expect(scalingKey_0_8_0.time, moreOrLessEquals(0.0333329998));
      expect(scalingKey_0_8_0.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_8_1 = channel_0_8.scalingKeys.elementAt(1);
      expect(scalingKey_0_8_1.time, moreOrLessEquals(3.01666665));
      expect(scalingKey_0_8_1.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_8_2 = channel_0_8.scalingKeys.elementAt(2);
      expect(scalingKey_0_8_2.time, moreOrLessEquals(6));
      expect(scalingKey_0_8_2.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_8_3 = channel_0_8.scalingKeys.elementAt(3);
      expect(scalingKey_0_8_3.time, moreOrLessEquals(8.98333359));
      expect(scalingKey_0_8_3.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_8_4 = channel_0_8.scalingKeys.elementAt(4);
      expect(scalingKey_0_8_4.time, moreOrLessEquals(11.9666672));
      expect(scalingKey_0_8_4.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      expect(channel_0_8.preState, equals(AnimBehavior.defaults));
      expect(channel_0_8.postState, equals(AnimBehavior.defaults));
      final  channel_0_9 = animation_0.channels.elementAt(9);
      expect(channel_0_9.positionKeys.length, equals(5));
      final positionKey_0_9_0 = channel_0_9.positionKeys.elementAt(0);
      expect(positionKey_0_9_0.time, moreOrLessEquals(0.0333329998));
      expect(positionKey_0_9_0.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_9_1 = channel_0_9.positionKeys.elementAt(1);
      expect(positionKey_0_9_1.time, moreOrLessEquals(3.01666665));
      expect(positionKey_0_9_1.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_9_2 = channel_0_9.positionKeys.elementAt(2);
      expect(positionKey_0_9_2.time, moreOrLessEquals(6));
      expect(positionKey_0_9_2.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_9_3 = channel_0_9.positionKeys.elementAt(3);
      expect(positionKey_0_9_3.time, moreOrLessEquals(8.98333359));
      expect(positionKey_0_9_3.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_9_4 = channel_0_9.positionKeys.elementAt(4);
      expect(positionKey_0_9_4.time, moreOrLessEquals(11.9666672));
      expect(positionKey_0_9_4.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      expect(channel_0_9.rotationKeys.length, equals(5));
      final rotationKey_0_9_0 = channel_0_9.rotationKeys.elementAt(0);
      expect(rotationKey_0_9_0.time, moreOrLessEquals(0.0333329998));
      expect(rotationKey_0_9_0.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 2.38497613e-08, 2.38497613e-08)));
      final rotationKey_0_9_1 = channel_0_9.rotationKeys.elementAt(1);
      expect(rotationKey_0_9_1.time, moreOrLessEquals(3.01666665));
      expect(rotationKey_0_9_1.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0.707107008, 0.707107008)));
      final rotationKey_0_9_2 = channel_0_9.rotationKeys.elementAt(2);
      expect(rotationKey_0_9_2.time, moreOrLessEquals(6));
      expect(rotationKey_0_9_2.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 1, 1)));
      final rotationKey_0_9_3 = channel_0_9.rotationKeys.elementAt(3);
      expect(rotationKey_0_9_3.time, moreOrLessEquals(8.98333359));
      expect(rotationKey_0_9_3.value, quaternionMoreOrLessEquals(Quaternion(0, 0, -0.707106054, -0.707106054)));
      final rotationKey_0_9_4 = channel_0_9.rotationKeys.elementAt(4);
      expect(rotationKey_0_9_4.time, moreOrLessEquals(11.9666672));
      expect(rotationKey_0_9_4.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 3.49691106e-07, 3.49691106e-07)));
      expect(channel_0_9.scalingKeys.length, equals(5));
      final scalingKey_0_9_0 = channel_0_9.scalingKeys.elementAt(0);
      expect(scalingKey_0_9_0.time, moreOrLessEquals(0.0333329998));
      expect(scalingKey_0_9_0.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_9_1 = channel_0_9.scalingKeys.elementAt(1);
      expect(scalingKey_0_9_1.time, moreOrLessEquals(3.01666665));
      expect(scalingKey_0_9_1.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_9_2 = channel_0_9.scalingKeys.elementAt(2);
      expect(scalingKey_0_9_2.time, moreOrLessEquals(6));
      expect(scalingKey_0_9_2.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_9_3 = channel_0_9.scalingKeys.elementAt(3);
      expect(scalingKey_0_9_3.time, moreOrLessEquals(8.98333359));
      expect(scalingKey_0_9_3.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_9_4 = channel_0_9.scalingKeys.elementAt(4);
      expect(scalingKey_0_9_4.time, moreOrLessEquals(11.9666672));
      expect(scalingKey_0_9_4.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      expect(channel_0_9.preState, equals(AnimBehavior.defaults));
      expect(channel_0_9.postState, equals(AnimBehavior.defaults));
      final  channel_0_10 = animation_0.channels.elementAt(10);
      expect(channel_0_10.positionKeys.length, equals(5));
      final positionKey_0_10_0 = channel_0_10.positionKeys.elementAt(0);
      expect(positionKey_0_10_0.time, moreOrLessEquals(0.0333329998));
      expect(positionKey_0_10_0.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_10_1 = channel_0_10.positionKeys.elementAt(1);
      expect(positionKey_0_10_1.time, moreOrLessEquals(3.01666665));
      expect(positionKey_0_10_1.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_10_2 = channel_0_10.positionKeys.elementAt(2);
      expect(positionKey_0_10_2.time, moreOrLessEquals(6));
      expect(positionKey_0_10_2.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_10_3 = channel_0_10.positionKeys.elementAt(3);
      expect(positionKey_0_10_3.time, moreOrLessEquals(8.98333359));
      expect(positionKey_0_10_3.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_10_4 = channel_0_10.positionKeys.elementAt(4);
      expect(positionKey_0_10_4.time, moreOrLessEquals(11.9666672));
      expect(positionKey_0_10_4.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      expect(channel_0_10.rotationKeys.length, equals(5));
      final rotationKey_0_10_0 = channel_0_10.rotationKeys.elementAt(0);
      expect(rotationKey_0_10_0.time, moreOrLessEquals(0.0333329998));
      expect(rotationKey_0_10_0.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 2.38497613e-08, 2.38497613e-08)));
      final rotationKey_0_10_1 = channel_0_10.rotationKeys.elementAt(1);
      expect(rotationKey_0_10_1.time, moreOrLessEquals(3.01666665));
      expect(rotationKey_0_10_1.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0.707107008, 0.707107008)));
      final rotationKey_0_10_2 = channel_0_10.rotationKeys.elementAt(2);
      expect(rotationKey_0_10_2.time, moreOrLessEquals(6));
      expect(rotationKey_0_10_2.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 1, 1)));
      final rotationKey_0_10_3 = channel_0_10.rotationKeys.elementAt(3);
      expect(rotationKey_0_10_3.time, moreOrLessEquals(8.98333359));
      expect(rotationKey_0_10_3.value, quaternionMoreOrLessEquals(Quaternion(0, 0, -0.707106054, -0.707106054)));
      final rotationKey_0_10_4 = channel_0_10.rotationKeys.elementAt(4);
      expect(rotationKey_0_10_4.time, moreOrLessEquals(11.9666672));
      expect(rotationKey_0_10_4.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 3.49691106e-07, 3.49691106e-07)));
      expect(channel_0_10.scalingKeys.length, equals(5));
      final scalingKey_0_10_0 = channel_0_10.scalingKeys.elementAt(0);
      expect(scalingKey_0_10_0.time, moreOrLessEquals(0.0333329998));
      expect(scalingKey_0_10_0.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_10_1 = channel_0_10.scalingKeys.elementAt(1);
      expect(scalingKey_0_10_1.time, moreOrLessEquals(3.01666665));
      expect(scalingKey_0_10_1.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_10_2 = channel_0_10.scalingKeys.elementAt(2);
      expect(scalingKey_0_10_2.time, moreOrLessEquals(6));
      expect(scalingKey_0_10_2.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_10_3 = channel_0_10.scalingKeys.elementAt(3);
      expect(scalingKey_0_10_3.time, moreOrLessEquals(8.98333359));
      expect(scalingKey_0_10_3.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_10_4 = channel_0_10.scalingKeys.elementAt(4);
      expect(scalingKey_0_10_4.time, moreOrLessEquals(11.9666672));
      expect(scalingKey_0_10_4.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      expect(channel_0_10.preState, equals(AnimBehavior.defaults));
      expect(channel_0_10.postState, equals(AnimBehavior.defaults));
      final  channel_0_11 = animation_0.channels.elementAt(11);
      expect(channel_0_11.positionKeys.length, equals(5));
      final positionKey_0_11_0 = channel_0_11.positionKeys.elementAt(0);
      expect(positionKey_0_11_0.time, moreOrLessEquals(0.0333329998));
      expect(positionKey_0_11_0.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_11_1 = channel_0_11.positionKeys.elementAt(1);
      expect(positionKey_0_11_1.time, moreOrLessEquals(3.01666665));
      expect(positionKey_0_11_1.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_11_2 = channel_0_11.positionKeys.elementAt(2);
      expect(positionKey_0_11_2.time, moreOrLessEquals(6));
      expect(positionKey_0_11_2.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_11_3 = channel_0_11.positionKeys.elementAt(3);
      expect(positionKey_0_11_3.time, moreOrLessEquals(8.98333359));
      expect(positionKey_0_11_3.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_11_4 = channel_0_11.positionKeys.elementAt(4);
      expect(positionKey_0_11_4.time, moreOrLessEquals(11.9666672));
      expect(positionKey_0_11_4.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      expect(channel_0_11.rotationKeys.length, equals(5));
      final rotationKey_0_11_0 = channel_0_11.rotationKeys.elementAt(0);
      expect(rotationKey_0_11_0.time, moreOrLessEquals(0.0333329998));
      expect(rotationKey_0_11_0.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 2.38497613e-08, 2.38497613e-08)));
      final rotationKey_0_11_1 = channel_0_11.rotationKeys.elementAt(1);
      expect(rotationKey_0_11_1.time, moreOrLessEquals(3.01666665));
      expect(rotationKey_0_11_1.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0.707107008, 0.707107008)));
      final rotationKey_0_11_2 = channel_0_11.rotationKeys.elementAt(2);
      expect(rotationKey_0_11_2.time, moreOrLessEquals(6));
      expect(rotationKey_0_11_2.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 1, 1)));
      final rotationKey_0_11_3 = channel_0_11.rotationKeys.elementAt(3);
      expect(rotationKey_0_11_3.time, moreOrLessEquals(8.98333359));
      expect(rotationKey_0_11_3.value, quaternionMoreOrLessEquals(Quaternion(0, 0, -0.707106054, -0.707106054)));
      final rotationKey_0_11_4 = channel_0_11.rotationKeys.elementAt(4);
      expect(rotationKey_0_11_4.time, moreOrLessEquals(11.9666672));
      expect(rotationKey_0_11_4.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 3.49691106e-07, 3.49691106e-07)));
      expect(channel_0_11.scalingKeys.length, equals(5));
      final scalingKey_0_11_0 = channel_0_11.scalingKeys.elementAt(0);
      expect(scalingKey_0_11_0.time, moreOrLessEquals(0.0333329998));
      expect(scalingKey_0_11_0.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_11_1 = channel_0_11.scalingKeys.elementAt(1);
      expect(scalingKey_0_11_1.time, moreOrLessEquals(3.01666665));
      expect(scalingKey_0_11_1.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_11_2 = channel_0_11.scalingKeys.elementAt(2);
      expect(scalingKey_0_11_2.time, moreOrLessEquals(6));
      expect(scalingKey_0_11_2.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_11_3 = channel_0_11.scalingKeys.elementAt(3);
      expect(scalingKey_0_11_3.time, moreOrLessEquals(8.98333359));
      expect(scalingKey_0_11_3.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_11_4 = channel_0_11.scalingKeys.elementAt(4);
      expect(scalingKey_0_11_4.time, moreOrLessEquals(11.9666672));
      expect(scalingKey_0_11_4.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      expect(channel_0_11.preState, equals(AnimBehavior.defaults));
      expect(channel_0_11.postState, equals(AnimBehavior.defaults));
      final  channel_0_12 = animation_0.channels.elementAt(12);
      expect(channel_0_12.positionKeys.length, equals(5));
      final positionKey_0_12_0 = channel_0_12.positionKeys.elementAt(0);
      expect(positionKey_0_12_0.time, moreOrLessEquals(0.0333329998));
      expect(positionKey_0_12_0.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_12_1 = channel_0_12.positionKeys.elementAt(1);
      expect(positionKey_0_12_1.time, moreOrLessEquals(3.01666665));
      expect(positionKey_0_12_1.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_12_2 = channel_0_12.positionKeys.elementAt(2);
      expect(positionKey_0_12_2.time, moreOrLessEquals(6));
      expect(positionKey_0_12_2.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_12_3 = channel_0_12.positionKeys.elementAt(3);
      expect(positionKey_0_12_3.time, moreOrLessEquals(8.98333359));
      expect(positionKey_0_12_3.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_12_4 = channel_0_12.positionKeys.elementAt(4);
      expect(positionKey_0_12_4.time, moreOrLessEquals(11.9666672));
      expect(positionKey_0_12_4.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      expect(channel_0_12.rotationKeys.length, equals(5));
      final rotationKey_0_12_0 = channel_0_12.rotationKeys.elementAt(0);
      expect(rotationKey_0_12_0.time, moreOrLessEquals(0.0333329998));
      expect(rotationKey_0_12_0.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 2.38497613e-08, 2.38497613e-08)));
      final rotationKey_0_12_1 = channel_0_12.rotationKeys.elementAt(1);
      expect(rotationKey_0_12_1.time, moreOrLessEquals(3.01666665));
      expect(rotationKey_0_12_1.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0.707107008, 0.707107008)));
      final rotationKey_0_12_2 = channel_0_12.rotationKeys.elementAt(2);
      expect(rotationKey_0_12_2.time, moreOrLessEquals(6));
      expect(rotationKey_0_12_2.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 1, 1)));
      final rotationKey_0_12_3 = channel_0_12.rotationKeys.elementAt(3);
      expect(rotationKey_0_12_3.time, moreOrLessEquals(8.98333359));
      expect(rotationKey_0_12_3.value, quaternionMoreOrLessEquals(Quaternion(0, 0, -0.707106054, -0.707106054)));
      final rotationKey_0_12_4 = channel_0_12.rotationKeys.elementAt(4);
      expect(rotationKey_0_12_4.time, moreOrLessEquals(11.9666672));
      expect(rotationKey_0_12_4.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 3.49691106e-07, 3.49691106e-07)));
      expect(channel_0_12.scalingKeys.length, equals(5));
      final scalingKey_0_12_0 = channel_0_12.scalingKeys.elementAt(0);
      expect(scalingKey_0_12_0.time, moreOrLessEquals(0.0333329998));
      expect(scalingKey_0_12_0.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_12_1 = channel_0_12.scalingKeys.elementAt(1);
      expect(scalingKey_0_12_1.time, moreOrLessEquals(3.01666665));
      expect(scalingKey_0_12_1.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_12_2 = channel_0_12.scalingKeys.elementAt(2);
      expect(scalingKey_0_12_2.time, moreOrLessEquals(6));
      expect(scalingKey_0_12_2.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_12_3 = channel_0_12.scalingKeys.elementAt(3);
      expect(scalingKey_0_12_3.time, moreOrLessEquals(8.98333359));
      expect(scalingKey_0_12_3.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_12_4 = channel_0_12.scalingKeys.elementAt(4);
      expect(scalingKey_0_12_4.time, moreOrLessEquals(11.9666672));
      expect(scalingKey_0_12_4.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      expect(channel_0_12.preState, equals(AnimBehavior.defaults));
      expect(channel_0_12.postState, equals(AnimBehavior.defaults));
      final  channel_0_13 = animation_0.channels.elementAt(13);
      expect(channel_0_13.positionKeys.length, equals(5));
      final positionKey_0_13_0 = channel_0_13.positionKeys.elementAt(0);
      expect(positionKey_0_13_0.time, moreOrLessEquals(0.0333329998));
      expect(positionKey_0_13_0.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_13_1 = channel_0_13.positionKeys.elementAt(1);
      expect(positionKey_0_13_1.time, moreOrLessEquals(3.01666665));
      expect(positionKey_0_13_1.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_13_2 = channel_0_13.positionKeys.elementAt(2);
      expect(positionKey_0_13_2.time, moreOrLessEquals(6));
      expect(positionKey_0_13_2.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_13_3 = channel_0_13.positionKeys.elementAt(3);
      expect(positionKey_0_13_3.time, moreOrLessEquals(8.98333359));
      expect(positionKey_0_13_3.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_13_4 = channel_0_13.positionKeys.elementAt(4);
      expect(positionKey_0_13_4.time, moreOrLessEquals(11.9666672));
      expect(positionKey_0_13_4.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      expect(channel_0_13.rotationKeys.length, equals(5));
      final rotationKey_0_13_0 = channel_0_13.rotationKeys.elementAt(0);
      expect(rotationKey_0_13_0.time, moreOrLessEquals(0.0333329998));
      expect(rotationKey_0_13_0.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 2.38497613e-08, 2.38497613e-08)));
      final rotationKey_0_13_1 = channel_0_13.rotationKeys.elementAt(1);
      expect(rotationKey_0_13_1.time, moreOrLessEquals(3.01666665));
      expect(rotationKey_0_13_1.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0.707107008, 0.707107008)));
      final rotationKey_0_13_2 = channel_0_13.rotationKeys.elementAt(2);
      expect(rotationKey_0_13_2.time, moreOrLessEquals(6));
      expect(rotationKey_0_13_2.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 1, 1)));
      final rotationKey_0_13_3 = channel_0_13.rotationKeys.elementAt(3);
      expect(rotationKey_0_13_3.time, moreOrLessEquals(8.98333359));
      expect(rotationKey_0_13_3.value, quaternionMoreOrLessEquals(Quaternion(0, 0, -0.707106054, -0.707106054)));
      final rotationKey_0_13_4 = channel_0_13.rotationKeys.elementAt(4);
      expect(rotationKey_0_13_4.time, moreOrLessEquals(11.9666672));
      expect(rotationKey_0_13_4.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 3.49691106e-07, 3.49691106e-07)));
      expect(channel_0_13.scalingKeys.length, equals(5));
      final scalingKey_0_13_0 = channel_0_13.scalingKeys.elementAt(0);
      expect(scalingKey_0_13_0.time, moreOrLessEquals(0.0333329998));
      expect(scalingKey_0_13_0.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_13_1 = channel_0_13.scalingKeys.elementAt(1);
      expect(scalingKey_0_13_1.time, moreOrLessEquals(3.01666665));
      expect(scalingKey_0_13_1.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_13_2 = channel_0_13.scalingKeys.elementAt(2);
      expect(scalingKey_0_13_2.time, moreOrLessEquals(6));
      expect(scalingKey_0_13_2.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_13_3 = channel_0_13.scalingKeys.elementAt(3);
      expect(scalingKey_0_13_3.time, moreOrLessEquals(8.98333359));
      expect(scalingKey_0_13_3.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_13_4 = channel_0_13.scalingKeys.elementAt(4);
      expect(scalingKey_0_13_4.time, moreOrLessEquals(11.9666672));
      expect(scalingKey_0_13_4.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      expect(channel_0_13.preState, equals(AnimBehavior.defaults));
      expect(channel_0_13.postState, equals(AnimBehavior.defaults));
      final  channel_0_14 = animation_0.channels.elementAt(14);
      expect(channel_0_14.positionKeys.length, equals(5));
      final positionKey_0_14_0 = channel_0_14.positionKeys.elementAt(0);
      expect(positionKey_0_14_0.time, moreOrLessEquals(0.0333329998));
      expect(positionKey_0_14_0.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_14_1 = channel_0_14.positionKeys.elementAt(1);
      expect(positionKey_0_14_1.time, moreOrLessEquals(3.01666665));
      expect(positionKey_0_14_1.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_14_2 = channel_0_14.positionKeys.elementAt(2);
      expect(positionKey_0_14_2.time, moreOrLessEquals(6));
      expect(positionKey_0_14_2.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_14_3 = channel_0_14.positionKeys.elementAt(3);
      expect(positionKey_0_14_3.time, moreOrLessEquals(8.98333359));
      expect(positionKey_0_14_3.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_14_4 = channel_0_14.positionKeys.elementAt(4);
      expect(positionKey_0_14_4.time, moreOrLessEquals(11.9666672));
      expect(positionKey_0_14_4.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      expect(channel_0_14.rotationKeys.length, equals(5));
      final rotationKey_0_14_0 = channel_0_14.rotationKeys.elementAt(0);
      expect(rotationKey_0_14_0.time, moreOrLessEquals(0.0333329998));
      expect(rotationKey_0_14_0.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 2.38497613e-08, 2.38497613e-08)));
      final rotationKey_0_14_1 = channel_0_14.rotationKeys.elementAt(1);
      expect(rotationKey_0_14_1.time, moreOrLessEquals(3.01666665));
      expect(rotationKey_0_14_1.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0.707107008, 0.707107008)));
      final rotationKey_0_14_2 = channel_0_14.rotationKeys.elementAt(2);
      expect(rotationKey_0_14_2.time, moreOrLessEquals(6));
      expect(rotationKey_0_14_2.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 1, 1)));
      final rotationKey_0_14_3 = channel_0_14.rotationKeys.elementAt(3);
      expect(rotationKey_0_14_3.time, moreOrLessEquals(8.98333359));
      expect(rotationKey_0_14_3.value, quaternionMoreOrLessEquals(Quaternion(0, 0, -0.707106054, -0.707106054)));
      final rotationKey_0_14_4 = channel_0_14.rotationKeys.elementAt(4);
      expect(rotationKey_0_14_4.time, moreOrLessEquals(11.9666672));
      expect(rotationKey_0_14_4.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 3.49691106e-07, 3.49691106e-07)));
      expect(channel_0_14.scalingKeys.length, equals(5));
      final scalingKey_0_14_0 = channel_0_14.scalingKeys.elementAt(0);
      expect(scalingKey_0_14_0.time, moreOrLessEquals(0.0333329998));
      expect(scalingKey_0_14_0.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_14_1 = channel_0_14.scalingKeys.elementAt(1);
      expect(scalingKey_0_14_1.time, moreOrLessEquals(3.01666665));
      expect(scalingKey_0_14_1.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_14_2 = channel_0_14.scalingKeys.elementAt(2);
      expect(scalingKey_0_14_2.time, moreOrLessEquals(6));
      expect(scalingKey_0_14_2.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_14_3 = channel_0_14.scalingKeys.elementAt(3);
      expect(scalingKey_0_14_3.time, moreOrLessEquals(8.98333359));
      expect(scalingKey_0_14_3.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_14_4 = channel_0_14.scalingKeys.elementAt(4);
      expect(scalingKey_0_14_4.time, moreOrLessEquals(11.9666672));
      expect(scalingKey_0_14_4.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      expect(channel_0_14.preState, equals(AnimBehavior.defaults));
      expect(channel_0_14.postState, equals(AnimBehavior.defaults));
      final  channel_0_15 = animation_0.channels.elementAt(15);
      expect(channel_0_15.positionKeys.length, equals(5));
      final positionKey_0_15_0 = channel_0_15.positionKeys.elementAt(0);
      expect(positionKey_0_15_0.time, moreOrLessEquals(0.0333329998));
      expect(positionKey_0_15_0.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_15_1 = channel_0_15.positionKeys.elementAt(1);
      expect(positionKey_0_15_1.time, moreOrLessEquals(3.01666665));
      expect(positionKey_0_15_1.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_15_2 = channel_0_15.positionKeys.elementAt(2);
      expect(positionKey_0_15_2.time, moreOrLessEquals(6));
      expect(positionKey_0_15_2.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_15_3 = channel_0_15.positionKeys.elementAt(3);
      expect(positionKey_0_15_3.time, moreOrLessEquals(8.98333359));
      expect(positionKey_0_15_3.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_15_4 = channel_0_15.positionKeys.elementAt(4);
      expect(positionKey_0_15_4.time, moreOrLessEquals(11.9666672));
      expect(positionKey_0_15_4.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      expect(channel_0_15.rotationKeys.length, equals(5));
      final rotationKey_0_15_0 = channel_0_15.rotationKeys.elementAt(0);
      expect(rotationKey_0_15_0.time, moreOrLessEquals(0.0333329998));
      expect(rotationKey_0_15_0.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 2.38497613e-08, 2.38497613e-08)));
      final rotationKey_0_15_1 = channel_0_15.rotationKeys.elementAt(1);
      expect(rotationKey_0_15_1.time, moreOrLessEquals(3.01666665));
      expect(rotationKey_0_15_1.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0.707107008, 0.707107008)));
      final rotationKey_0_15_2 = channel_0_15.rotationKeys.elementAt(2);
      expect(rotationKey_0_15_2.time, moreOrLessEquals(6));
      expect(rotationKey_0_15_2.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 1, 1)));
      final rotationKey_0_15_3 = channel_0_15.rotationKeys.elementAt(3);
      expect(rotationKey_0_15_3.time, moreOrLessEquals(8.98333359));
      expect(rotationKey_0_15_3.value, quaternionMoreOrLessEquals(Quaternion(0, 0, -0.707106054, -0.707106054)));
      final rotationKey_0_15_4 = channel_0_15.rotationKeys.elementAt(4);
      expect(rotationKey_0_15_4.time, moreOrLessEquals(11.9666672));
      expect(rotationKey_0_15_4.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 3.49691106e-07, 3.49691106e-07)));
      expect(channel_0_15.scalingKeys.length, equals(5));
      final scalingKey_0_15_0 = channel_0_15.scalingKeys.elementAt(0);
      expect(scalingKey_0_15_0.time, moreOrLessEquals(0.0333329998));
      expect(scalingKey_0_15_0.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_15_1 = channel_0_15.scalingKeys.elementAt(1);
      expect(scalingKey_0_15_1.time, moreOrLessEquals(3.01666665));
      expect(scalingKey_0_15_1.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_15_2 = channel_0_15.scalingKeys.elementAt(2);
      expect(scalingKey_0_15_2.time, moreOrLessEquals(6));
      expect(scalingKey_0_15_2.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_15_3 = channel_0_15.scalingKeys.elementAt(3);
      expect(scalingKey_0_15_3.time, moreOrLessEquals(8.98333359));
      expect(scalingKey_0_15_3.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_15_4 = channel_0_15.scalingKeys.elementAt(4);
      expect(scalingKey_0_15_4.time, moreOrLessEquals(11.9666672));
      expect(scalingKey_0_15_4.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      expect(channel_0_15.preState, equals(AnimBehavior.defaults));
      expect(channel_0_15.postState, equals(AnimBehavior.defaults));
      final  channel_0_16 = animation_0.channels.elementAt(16);
      expect(channel_0_16.positionKeys.length, equals(5));
      final positionKey_0_16_0 = channel_0_16.positionKeys.elementAt(0);
      expect(positionKey_0_16_0.time, moreOrLessEquals(0.0333329998));
      expect(positionKey_0_16_0.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_16_1 = channel_0_16.positionKeys.elementAt(1);
      expect(positionKey_0_16_1.time, moreOrLessEquals(3.01666665));
      expect(positionKey_0_16_1.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_16_2 = channel_0_16.positionKeys.elementAt(2);
      expect(positionKey_0_16_2.time, moreOrLessEquals(6));
      expect(positionKey_0_16_2.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_16_3 = channel_0_16.positionKeys.elementAt(3);
      expect(positionKey_0_16_3.time, moreOrLessEquals(8.98333359));
      expect(positionKey_0_16_3.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_16_4 = channel_0_16.positionKeys.elementAt(4);
      expect(positionKey_0_16_4.time, moreOrLessEquals(11.9666672));
      expect(positionKey_0_16_4.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      expect(channel_0_16.rotationKeys.length, equals(5));
      final rotationKey_0_16_0 = channel_0_16.rotationKeys.elementAt(0);
      expect(rotationKey_0_16_0.time, moreOrLessEquals(0.0333329998));
      expect(rotationKey_0_16_0.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 2.38497613e-08, 2.38497613e-08)));
      final rotationKey_0_16_1 = channel_0_16.rotationKeys.elementAt(1);
      expect(rotationKey_0_16_1.time, moreOrLessEquals(3.01666665));
      expect(rotationKey_0_16_1.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0.707107008, 0.707107008)));
      final rotationKey_0_16_2 = channel_0_16.rotationKeys.elementAt(2);
      expect(rotationKey_0_16_2.time, moreOrLessEquals(6));
      expect(rotationKey_0_16_2.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 1, 1)));
      final rotationKey_0_16_3 = channel_0_16.rotationKeys.elementAt(3);
      expect(rotationKey_0_16_3.time, moreOrLessEquals(8.98333359));
      expect(rotationKey_0_16_3.value, quaternionMoreOrLessEquals(Quaternion(0, 0, -0.707106054, -0.707106054)));
      final rotationKey_0_16_4 = channel_0_16.rotationKeys.elementAt(4);
      expect(rotationKey_0_16_4.time, moreOrLessEquals(11.9666672));
      expect(rotationKey_0_16_4.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 3.49691106e-07, 3.49691106e-07)));
      expect(channel_0_16.scalingKeys.length, equals(5));
      final scalingKey_0_16_0 = channel_0_16.scalingKeys.elementAt(0);
      expect(scalingKey_0_16_0.time, moreOrLessEquals(0.0333329998));
      expect(scalingKey_0_16_0.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_16_1 = channel_0_16.scalingKeys.elementAt(1);
      expect(scalingKey_0_16_1.time, moreOrLessEquals(3.01666665));
      expect(scalingKey_0_16_1.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_16_2 = channel_0_16.scalingKeys.elementAt(2);
      expect(scalingKey_0_16_2.time, moreOrLessEquals(6));
      expect(scalingKey_0_16_2.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_16_3 = channel_0_16.scalingKeys.elementAt(3);
      expect(scalingKey_0_16_3.time, moreOrLessEquals(8.98333359));
      expect(scalingKey_0_16_3.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_16_4 = channel_0_16.scalingKeys.elementAt(4);
      expect(scalingKey_0_16_4.time, moreOrLessEquals(11.9666672));
      expect(scalingKey_0_16_4.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      expect(channel_0_16.preState, equals(AnimBehavior.defaults));
      expect(channel_0_16.postState, equals(AnimBehavior.defaults));
      final  channel_0_17 = animation_0.channels.elementAt(17);
      expect(channel_0_17.positionKeys.length, equals(5));
      final positionKey_0_17_0 = channel_0_17.positionKeys.elementAt(0);
      expect(positionKey_0_17_0.time, moreOrLessEquals(0.0333329998));
      expect(positionKey_0_17_0.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_17_1 = channel_0_17.positionKeys.elementAt(1);
      expect(positionKey_0_17_1.time, moreOrLessEquals(3.01666665));
      expect(positionKey_0_17_1.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_17_2 = channel_0_17.positionKeys.elementAt(2);
      expect(positionKey_0_17_2.time, moreOrLessEquals(6));
      expect(positionKey_0_17_2.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_17_3 = channel_0_17.positionKeys.elementAt(3);
      expect(positionKey_0_17_3.time, moreOrLessEquals(8.98333359));
      expect(positionKey_0_17_3.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_17_4 = channel_0_17.positionKeys.elementAt(4);
      expect(positionKey_0_17_4.time, moreOrLessEquals(11.9666672));
      expect(positionKey_0_17_4.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      expect(channel_0_17.rotationKeys.length, equals(5));
      final rotationKey_0_17_0 = channel_0_17.rotationKeys.elementAt(0);
      expect(rotationKey_0_17_0.time, moreOrLessEquals(0.0333329998));
      expect(rotationKey_0_17_0.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 2.38497613e-08, 2.38497613e-08)));
      final rotationKey_0_17_1 = channel_0_17.rotationKeys.elementAt(1);
      expect(rotationKey_0_17_1.time, moreOrLessEquals(3.01666665));
      expect(rotationKey_0_17_1.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0.707107008, 0.707107008)));
      final rotationKey_0_17_2 = channel_0_17.rotationKeys.elementAt(2);
      expect(rotationKey_0_17_2.time, moreOrLessEquals(6));
      expect(rotationKey_0_17_2.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 1, 1)));
      final rotationKey_0_17_3 = channel_0_17.rotationKeys.elementAt(3);
      expect(rotationKey_0_17_3.time, moreOrLessEquals(8.98333359));
      expect(rotationKey_0_17_3.value, quaternionMoreOrLessEquals(Quaternion(0, 0, -0.707106054, -0.707106054)));
      final rotationKey_0_17_4 = channel_0_17.rotationKeys.elementAt(4);
      expect(rotationKey_0_17_4.time, moreOrLessEquals(11.9666672));
      expect(rotationKey_0_17_4.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 3.49691106e-07, 3.49691106e-07)));
      expect(channel_0_17.scalingKeys.length, equals(5));
      final scalingKey_0_17_0 = channel_0_17.scalingKeys.elementAt(0);
      expect(scalingKey_0_17_0.time, moreOrLessEquals(0.0333329998));
      expect(scalingKey_0_17_0.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_17_1 = channel_0_17.scalingKeys.elementAt(1);
      expect(scalingKey_0_17_1.time, moreOrLessEquals(3.01666665));
      expect(scalingKey_0_17_1.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_17_2 = channel_0_17.scalingKeys.elementAt(2);
      expect(scalingKey_0_17_2.time, moreOrLessEquals(6));
      expect(scalingKey_0_17_2.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_17_3 = channel_0_17.scalingKeys.elementAt(3);
      expect(scalingKey_0_17_3.time, moreOrLessEquals(8.98333359));
      expect(scalingKey_0_17_3.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_17_4 = channel_0_17.scalingKeys.elementAt(4);
      expect(scalingKey_0_17_4.time, moreOrLessEquals(11.9666672));
      expect(scalingKey_0_17_4.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      expect(channel_0_17.preState, equals(AnimBehavior.defaults));
      expect(channel_0_17.postState, equals(AnimBehavior.defaults));
      final  channel_0_18 = animation_0.channels.elementAt(18);
      expect(channel_0_18.positionKeys.length, equals(5));
      final positionKey_0_18_0 = channel_0_18.positionKeys.elementAt(0);
      expect(positionKey_0_18_0.time, moreOrLessEquals(0.0333329998));
      expect(positionKey_0_18_0.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_18_1 = channel_0_18.positionKeys.elementAt(1);
      expect(positionKey_0_18_1.time, moreOrLessEquals(3.01666665));
      expect(positionKey_0_18_1.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_18_2 = channel_0_18.positionKeys.elementAt(2);
      expect(positionKey_0_18_2.time, moreOrLessEquals(6));
      expect(positionKey_0_18_2.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_18_3 = channel_0_18.positionKeys.elementAt(3);
      expect(positionKey_0_18_3.time, moreOrLessEquals(8.98333359));
      expect(positionKey_0_18_3.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_18_4 = channel_0_18.positionKeys.elementAt(4);
      expect(positionKey_0_18_4.time, moreOrLessEquals(11.9666672));
      expect(positionKey_0_18_4.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      expect(channel_0_18.rotationKeys.length, equals(5));
      final rotationKey_0_18_0 = channel_0_18.rotationKeys.elementAt(0);
      expect(rotationKey_0_18_0.time, moreOrLessEquals(0.0333329998));
      expect(rotationKey_0_18_0.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 2.38497613e-08, 2.38497613e-08)));
      final rotationKey_0_18_1 = channel_0_18.rotationKeys.elementAt(1);
      expect(rotationKey_0_18_1.time, moreOrLessEquals(3.01666665));
      expect(rotationKey_0_18_1.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0.707107008, 0.707107008)));
      final rotationKey_0_18_2 = channel_0_18.rotationKeys.elementAt(2);
      expect(rotationKey_0_18_2.time, moreOrLessEquals(6));
      expect(rotationKey_0_18_2.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 1, 1)));
      final rotationKey_0_18_3 = channel_0_18.rotationKeys.elementAt(3);
      expect(rotationKey_0_18_3.time, moreOrLessEquals(8.98333359));
      expect(rotationKey_0_18_3.value, quaternionMoreOrLessEquals(Quaternion(0, 0, -0.707106054, -0.707106054)));
      final rotationKey_0_18_4 = channel_0_18.rotationKeys.elementAt(4);
      expect(rotationKey_0_18_4.time, moreOrLessEquals(11.9666672));
      expect(rotationKey_0_18_4.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 3.49691106e-07, 3.49691106e-07)));
      expect(channel_0_18.scalingKeys.length, equals(5));
      final scalingKey_0_18_0 = channel_0_18.scalingKeys.elementAt(0);
      expect(scalingKey_0_18_0.time, moreOrLessEquals(0.0333329998));
      expect(scalingKey_0_18_0.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_18_1 = channel_0_18.scalingKeys.elementAt(1);
      expect(scalingKey_0_18_1.time, moreOrLessEquals(3.01666665));
      expect(scalingKey_0_18_1.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_18_2 = channel_0_18.scalingKeys.elementAt(2);
      expect(scalingKey_0_18_2.time, moreOrLessEquals(6));
      expect(scalingKey_0_18_2.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_18_3 = channel_0_18.scalingKeys.elementAt(3);
      expect(scalingKey_0_18_3.time, moreOrLessEquals(8.98333359));
      expect(scalingKey_0_18_3.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_18_4 = channel_0_18.scalingKeys.elementAt(4);
      expect(scalingKey_0_18_4.time, moreOrLessEquals(11.9666672));
      expect(scalingKey_0_18_4.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      expect(channel_0_18.preState, equals(AnimBehavior.defaults));
      expect(channel_0_18.postState, equals(AnimBehavior.defaults));
      final  channel_0_19 = animation_0.channels.elementAt(19);
      expect(channel_0_19.positionKeys.length, equals(5));
      final positionKey_0_19_0 = channel_0_19.positionKeys.elementAt(0);
      expect(positionKey_0_19_0.time, moreOrLessEquals(0.0333329998));
      expect(positionKey_0_19_0.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_19_1 = channel_0_19.positionKeys.elementAt(1);
      expect(positionKey_0_19_1.time, moreOrLessEquals(3.01666665));
      expect(positionKey_0_19_1.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_19_2 = channel_0_19.positionKeys.elementAt(2);
      expect(positionKey_0_19_2.time, moreOrLessEquals(6));
      expect(positionKey_0_19_2.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_19_3 = channel_0_19.positionKeys.elementAt(3);
      expect(positionKey_0_19_3.time, moreOrLessEquals(8.98333359));
      expect(positionKey_0_19_3.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_19_4 = channel_0_19.positionKeys.elementAt(4);
      expect(positionKey_0_19_4.time, moreOrLessEquals(11.9666672));
      expect(positionKey_0_19_4.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      expect(channel_0_19.rotationKeys.length, equals(5));
      final rotationKey_0_19_0 = channel_0_19.rotationKeys.elementAt(0);
      expect(rotationKey_0_19_0.time, moreOrLessEquals(0.0333329998));
      expect(rotationKey_0_19_0.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 2.38497613e-08, 2.38497613e-08)));
      final rotationKey_0_19_1 = channel_0_19.rotationKeys.elementAt(1);
      expect(rotationKey_0_19_1.time, moreOrLessEquals(3.01666665));
      expect(rotationKey_0_19_1.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0.707107008, 0.707107008)));
      final rotationKey_0_19_2 = channel_0_19.rotationKeys.elementAt(2);
      expect(rotationKey_0_19_2.time, moreOrLessEquals(6));
      expect(rotationKey_0_19_2.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 1, 1)));
      final rotationKey_0_19_3 = channel_0_19.rotationKeys.elementAt(3);
      expect(rotationKey_0_19_3.time, moreOrLessEquals(8.98333359));
      expect(rotationKey_0_19_3.value, quaternionMoreOrLessEquals(Quaternion(0, 0, -0.707106054, -0.707106054)));
      final rotationKey_0_19_4 = channel_0_19.rotationKeys.elementAt(4);
      expect(rotationKey_0_19_4.time, moreOrLessEquals(11.9666672));
      expect(rotationKey_0_19_4.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 3.49691106e-07, 3.49691106e-07)));
      expect(channel_0_19.scalingKeys.length, equals(5));
      final scalingKey_0_19_0 = channel_0_19.scalingKeys.elementAt(0);
      expect(scalingKey_0_19_0.time, moreOrLessEquals(0.0333329998));
      expect(scalingKey_0_19_0.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_19_1 = channel_0_19.scalingKeys.elementAt(1);
      expect(scalingKey_0_19_1.time, moreOrLessEquals(3.01666665));
      expect(scalingKey_0_19_1.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_19_2 = channel_0_19.scalingKeys.elementAt(2);
      expect(scalingKey_0_19_2.time, moreOrLessEquals(6));
      expect(scalingKey_0_19_2.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_19_3 = channel_0_19.scalingKeys.elementAt(3);
      expect(scalingKey_0_19_3.time, moreOrLessEquals(8.98333359));
      expect(scalingKey_0_19_3.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_19_4 = channel_0_19.scalingKeys.elementAt(4);
      expect(scalingKey_0_19_4.time, moreOrLessEquals(11.9666672));
      expect(scalingKey_0_19_4.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      expect(channel_0_19.preState, equals(AnimBehavior.defaults));
      expect(channel_0_19.postState, equals(AnimBehavior.defaults));
      final  channel_0_20 = animation_0.channels.elementAt(20);
      expect(channel_0_20.positionKeys.length, equals(5));
      final positionKey_0_20_0 = channel_0_20.positionKeys.elementAt(0);
      expect(positionKey_0_20_0.time, moreOrLessEquals(0.0333329998));
      expect(positionKey_0_20_0.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_20_1 = channel_0_20.positionKeys.elementAt(1);
      expect(positionKey_0_20_1.time, moreOrLessEquals(3.01666665));
      expect(positionKey_0_20_1.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_20_2 = channel_0_20.positionKeys.elementAt(2);
      expect(positionKey_0_20_2.time, moreOrLessEquals(6));
      expect(positionKey_0_20_2.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_20_3 = channel_0_20.positionKeys.elementAt(3);
      expect(positionKey_0_20_3.time, moreOrLessEquals(8.98333359));
      expect(positionKey_0_20_3.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_20_4 = channel_0_20.positionKeys.elementAt(4);
      expect(positionKey_0_20_4.time, moreOrLessEquals(11.9666672));
      expect(positionKey_0_20_4.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      expect(channel_0_20.rotationKeys.length, equals(5));
      final rotationKey_0_20_0 = channel_0_20.rotationKeys.elementAt(0);
      expect(rotationKey_0_20_0.time, moreOrLessEquals(0.0333329998));
      expect(rotationKey_0_20_0.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 2.38497613e-08, 2.38497613e-08)));
      final rotationKey_0_20_1 = channel_0_20.rotationKeys.elementAt(1);
      expect(rotationKey_0_20_1.time, moreOrLessEquals(3.01666665));
      expect(rotationKey_0_20_1.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0.707107008, 0.707107008)));
      final rotationKey_0_20_2 = channel_0_20.rotationKeys.elementAt(2);
      expect(rotationKey_0_20_2.time, moreOrLessEquals(6));
      expect(rotationKey_0_20_2.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 1, 1)));
      final rotationKey_0_20_3 = channel_0_20.rotationKeys.elementAt(3);
      expect(rotationKey_0_20_3.time, moreOrLessEquals(8.98333359));
      expect(rotationKey_0_20_3.value, quaternionMoreOrLessEquals(Quaternion(0, 0, -0.707106054, -0.707106054)));
      final rotationKey_0_20_4 = channel_0_20.rotationKeys.elementAt(4);
      expect(rotationKey_0_20_4.time, moreOrLessEquals(11.9666672));
      expect(rotationKey_0_20_4.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 3.49691106e-07, 3.49691106e-07)));
      expect(channel_0_20.scalingKeys.length, equals(5));
      final scalingKey_0_20_0 = channel_0_20.scalingKeys.elementAt(0);
      expect(scalingKey_0_20_0.time, moreOrLessEquals(0.0333329998));
      expect(scalingKey_0_20_0.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_20_1 = channel_0_20.scalingKeys.elementAt(1);
      expect(scalingKey_0_20_1.time, moreOrLessEquals(3.01666665));
      expect(scalingKey_0_20_1.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_20_2 = channel_0_20.scalingKeys.elementAt(2);
      expect(scalingKey_0_20_2.time, moreOrLessEquals(6));
      expect(scalingKey_0_20_2.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_20_3 = channel_0_20.scalingKeys.elementAt(3);
      expect(scalingKey_0_20_3.time, moreOrLessEquals(8.98333359));
      expect(scalingKey_0_20_3.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_20_4 = channel_0_20.scalingKeys.elementAt(4);
      expect(scalingKey_0_20_4.time, moreOrLessEquals(11.9666672));
      expect(scalingKey_0_20_4.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      expect(channel_0_20.preState, equals(AnimBehavior.defaults));
      expect(channel_0_20.postState, equals(AnimBehavior.defaults));
      final  channel_0_21 = animation_0.channels.elementAt(21);
      expect(channel_0_21.positionKeys.length, equals(5));
      final positionKey_0_21_0 = channel_0_21.positionKeys.elementAt(0);
      expect(positionKey_0_21_0.time, moreOrLessEquals(0.0333329998));
      expect(positionKey_0_21_0.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_21_1 = channel_0_21.positionKeys.elementAt(1);
      expect(positionKey_0_21_1.time, moreOrLessEquals(3.01666665));
      expect(positionKey_0_21_1.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_21_2 = channel_0_21.positionKeys.elementAt(2);
      expect(positionKey_0_21_2.time, moreOrLessEquals(6));
      expect(positionKey_0_21_2.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_21_3 = channel_0_21.positionKeys.elementAt(3);
      expect(positionKey_0_21_3.time, moreOrLessEquals(8.98333359));
      expect(positionKey_0_21_3.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_21_4 = channel_0_21.positionKeys.elementAt(4);
      expect(positionKey_0_21_4.time, moreOrLessEquals(11.9666672));
      expect(positionKey_0_21_4.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      expect(channel_0_21.rotationKeys.length, equals(5));
      final rotationKey_0_21_0 = channel_0_21.rotationKeys.elementAt(0);
      expect(rotationKey_0_21_0.time, moreOrLessEquals(0.0333329998));
      expect(rotationKey_0_21_0.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 2.38497613e-08, 2.38497613e-08)));
      final rotationKey_0_21_1 = channel_0_21.rotationKeys.elementAt(1);
      expect(rotationKey_0_21_1.time, moreOrLessEquals(3.01666665));
      expect(rotationKey_0_21_1.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0.707107008, 0.707107008)));
      final rotationKey_0_21_2 = channel_0_21.rotationKeys.elementAt(2);
      expect(rotationKey_0_21_2.time, moreOrLessEquals(6));
      expect(rotationKey_0_21_2.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 1, 1)));
      final rotationKey_0_21_3 = channel_0_21.rotationKeys.elementAt(3);
      expect(rotationKey_0_21_3.time, moreOrLessEquals(8.98333359));
      expect(rotationKey_0_21_3.value, quaternionMoreOrLessEquals(Quaternion(0, 0, -0.707106054, -0.707106054)));
      final rotationKey_0_21_4 = channel_0_21.rotationKeys.elementAt(4);
      expect(rotationKey_0_21_4.time, moreOrLessEquals(11.9666672));
      expect(rotationKey_0_21_4.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 3.49691106e-07, 3.49691106e-07)));
      expect(channel_0_21.scalingKeys.length, equals(5));
      final scalingKey_0_21_0 = channel_0_21.scalingKeys.elementAt(0);
      expect(scalingKey_0_21_0.time, moreOrLessEquals(0.0333329998));
      expect(scalingKey_0_21_0.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_21_1 = channel_0_21.scalingKeys.elementAt(1);
      expect(scalingKey_0_21_1.time, moreOrLessEquals(3.01666665));
      expect(scalingKey_0_21_1.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_21_2 = channel_0_21.scalingKeys.elementAt(2);
      expect(scalingKey_0_21_2.time, moreOrLessEquals(6));
      expect(scalingKey_0_21_2.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_21_3 = channel_0_21.scalingKeys.elementAt(3);
      expect(scalingKey_0_21_3.time, moreOrLessEquals(8.98333359));
      expect(scalingKey_0_21_3.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_21_4 = channel_0_21.scalingKeys.elementAt(4);
      expect(scalingKey_0_21_4.time, moreOrLessEquals(11.9666672));
      expect(scalingKey_0_21_4.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      expect(channel_0_21.preState, equals(AnimBehavior.defaults));
      expect(channel_0_21.postState, equals(AnimBehavior.defaults));
      final  channel_0_22 = animation_0.channels.elementAt(22);
      expect(channel_0_22.positionKeys.length, equals(5));
      final positionKey_0_22_0 = channel_0_22.positionKeys.elementAt(0);
      expect(positionKey_0_22_0.time, moreOrLessEquals(0.0333329998));
      expect(positionKey_0_22_0.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_22_1 = channel_0_22.positionKeys.elementAt(1);
      expect(positionKey_0_22_1.time, moreOrLessEquals(3.01666665));
      expect(positionKey_0_22_1.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_22_2 = channel_0_22.positionKeys.elementAt(2);
      expect(positionKey_0_22_2.time, moreOrLessEquals(6));
      expect(positionKey_0_22_2.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_22_3 = channel_0_22.positionKeys.elementAt(3);
      expect(positionKey_0_22_3.time, moreOrLessEquals(8.98333359));
      expect(positionKey_0_22_3.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_22_4 = channel_0_22.positionKeys.elementAt(4);
      expect(positionKey_0_22_4.time, moreOrLessEquals(11.9666672));
      expect(positionKey_0_22_4.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      expect(channel_0_22.rotationKeys.length, equals(5));
      final rotationKey_0_22_0 = channel_0_22.rotationKeys.elementAt(0);
      expect(rotationKey_0_22_0.time, moreOrLessEquals(0.0333329998));
      expect(rotationKey_0_22_0.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 2.38497613e-08, 2.38497613e-08)));
      final rotationKey_0_22_1 = channel_0_22.rotationKeys.elementAt(1);
      expect(rotationKey_0_22_1.time, moreOrLessEquals(3.01666665));
      expect(rotationKey_0_22_1.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0.707107008, 0.707107008)));
      final rotationKey_0_22_2 = channel_0_22.rotationKeys.elementAt(2);
      expect(rotationKey_0_22_2.time, moreOrLessEquals(6));
      expect(rotationKey_0_22_2.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 1, 1)));
      final rotationKey_0_22_3 = channel_0_22.rotationKeys.elementAt(3);
      expect(rotationKey_0_22_3.time, moreOrLessEquals(8.98333359));
      expect(rotationKey_0_22_3.value, quaternionMoreOrLessEquals(Quaternion(0, 0, -0.707106054, -0.707106054)));
      final rotationKey_0_22_4 = channel_0_22.rotationKeys.elementAt(4);
      expect(rotationKey_0_22_4.time, moreOrLessEquals(11.9666672));
      expect(rotationKey_0_22_4.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 3.49691106e-07, 3.49691106e-07)));
      expect(channel_0_22.scalingKeys.length, equals(5));
      final scalingKey_0_22_0 = channel_0_22.scalingKeys.elementAt(0);
      expect(scalingKey_0_22_0.time, moreOrLessEquals(0.0333329998));
      expect(scalingKey_0_22_0.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_22_1 = channel_0_22.scalingKeys.elementAt(1);
      expect(scalingKey_0_22_1.time, moreOrLessEquals(3.01666665));
      expect(scalingKey_0_22_1.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_22_2 = channel_0_22.scalingKeys.elementAt(2);
      expect(scalingKey_0_22_2.time, moreOrLessEquals(6));
      expect(scalingKey_0_22_2.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_22_3 = channel_0_22.scalingKeys.elementAt(3);
      expect(scalingKey_0_22_3.time, moreOrLessEquals(8.98333359));
      expect(scalingKey_0_22_3.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_22_4 = channel_0_22.scalingKeys.elementAt(4);
      expect(scalingKey_0_22_4.time, moreOrLessEquals(11.9666672));
      expect(scalingKey_0_22_4.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      expect(channel_0_22.preState, equals(AnimBehavior.defaults));
      expect(channel_0_22.postState, equals(AnimBehavior.defaults));
      final  channel_0_23 = animation_0.channels.elementAt(23);
      expect(channel_0_23.positionKeys.length, equals(5));
      final positionKey_0_23_0 = channel_0_23.positionKeys.elementAt(0);
      expect(positionKey_0_23_0.time, moreOrLessEquals(0.0333329998));
      expect(positionKey_0_23_0.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_23_1 = channel_0_23.positionKeys.elementAt(1);
      expect(positionKey_0_23_1.time, moreOrLessEquals(3.01666665));
      expect(positionKey_0_23_1.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_23_2 = channel_0_23.positionKeys.elementAt(2);
      expect(positionKey_0_23_2.time, moreOrLessEquals(6));
      expect(positionKey_0_23_2.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_23_3 = channel_0_23.positionKeys.elementAt(3);
      expect(positionKey_0_23_3.time, moreOrLessEquals(8.98333359));
      expect(positionKey_0_23_3.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_23_4 = channel_0_23.positionKeys.elementAt(4);
      expect(positionKey_0_23_4.time, moreOrLessEquals(11.9666672));
      expect(positionKey_0_23_4.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      expect(channel_0_23.rotationKeys.length, equals(5));
      final rotationKey_0_23_0 = channel_0_23.rotationKeys.elementAt(0);
      expect(rotationKey_0_23_0.time, moreOrLessEquals(0.0333329998));
      expect(rotationKey_0_23_0.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 2.38497613e-08, 2.38497613e-08)));
      final rotationKey_0_23_1 = channel_0_23.rotationKeys.elementAt(1);
      expect(rotationKey_0_23_1.time, moreOrLessEquals(3.01666665));
      expect(rotationKey_0_23_1.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0.707107008, 0.707107008)));
      final rotationKey_0_23_2 = channel_0_23.rotationKeys.elementAt(2);
      expect(rotationKey_0_23_2.time, moreOrLessEquals(6));
      expect(rotationKey_0_23_2.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 1, 1)));
      final rotationKey_0_23_3 = channel_0_23.rotationKeys.elementAt(3);
      expect(rotationKey_0_23_3.time, moreOrLessEquals(8.98333359));
      expect(rotationKey_0_23_3.value, quaternionMoreOrLessEquals(Quaternion(0, 0, -0.707106054, -0.707106054)));
      final rotationKey_0_23_4 = channel_0_23.rotationKeys.elementAt(4);
      expect(rotationKey_0_23_4.time, moreOrLessEquals(11.9666672));
      expect(rotationKey_0_23_4.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 3.49691106e-07, 3.49691106e-07)));
      expect(channel_0_23.scalingKeys.length, equals(5));
      final scalingKey_0_23_0 = channel_0_23.scalingKeys.elementAt(0);
      expect(scalingKey_0_23_0.time, moreOrLessEquals(0.0333329998));
      expect(scalingKey_0_23_0.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_23_1 = channel_0_23.scalingKeys.elementAt(1);
      expect(scalingKey_0_23_1.time, moreOrLessEquals(3.01666665));
      expect(scalingKey_0_23_1.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_23_2 = channel_0_23.scalingKeys.elementAt(2);
      expect(scalingKey_0_23_2.time, moreOrLessEquals(6));
      expect(scalingKey_0_23_2.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_23_3 = channel_0_23.scalingKeys.elementAt(3);
      expect(scalingKey_0_23_3.time, moreOrLessEquals(8.98333359));
      expect(scalingKey_0_23_3.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_23_4 = channel_0_23.scalingKeys.elementAt(4);
      expect(scalingKey_0_23_4.time, moreOrLessEquals(11.9666672));
      expect(scalingKey_0_23_4.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      expect(channel_0_23.preState, equals(AnimBehavior.defaults));
      expect(channel_0_23.postState, equals(AnimBehavior.defaults));
      final  channel_0_24 = animation_0.channels.elementAt(24);
      expect(channel_0_24.positionKeys.length, equals(5));
      final positionKey_0_24_0 = channel_0_24.positionKeys.elementAt(0);
      expect(positionKey_0_24_0.time, moreOrLessEquals(0.0333329998));
      expect(positionKey_0_24_0.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_24_1 = channel_0_24.positionKeys.elementAt(1);
      expect(positionKey_0_24_1.time, moreOrLessEquals(3.01666665));
      expect(positionKey_0_24_1.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_24_2 = channel_0_24.positionKeys.elementAt(2);
      expect(positionKey_0_24_2.time, moreOrLessEquals(6));
      expect(positionKey_0_24_2.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_24_3 = channel_0_24.positionKeys.elementAt(3);
      expect(positionKey_0_24_3.time, moreOrLessEquals(8.98333359));
      expect(positionKey_0_24_3.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_24_4 = channel_0_24.positionKeys.elementAt(4);
      expect(positionKey_0_24_4.time, moreOrLessEquals(11.9666672));
      expect(positionKey_0_24_4.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      expect(channel_0_24.rotationKeys.length, equals(5));
      final rotationKey_0_24_0 = channel_0_24.rotationKeys.elementAt(0);
      expect(rotationKey_0_24_0.time, moreOrLessEquals(0.0333329998));
      expect(rotationKey_0_24_0.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 2.38497613e-08, 2.38497613e-08)));
      final rotationKey_0_24_1 = channel_0_24.rotationKeys.elementAt(1);
      expect(rotationKey_0_24_1.time, moreOrLessEquals(3.01666665));
      expect(rotationKey_0_24_1.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0.707107008, 0.707107008)));
      final rotationKey_0_24_2 = channel_0_24.rotationKeys.elementAt(2);
      expect(rotationKey_0_24_2.time, moreOrLessEquals(6));
      expect(rotationKey_0_24_2.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 1, 1)));
      final rotationKey_0_24_3 = channel_0_24.rotationKeys.elementAt(3);
      expect(rotationKey_0_24_3.time, moreOrLessEquals(8.98333359));
      expect(rotationKey_0_24_3.value, quaternionMoreOrLessEquals(Quaternion(0, 0, -0.707106054, -0.707106054)));
      final rotationKey_0_24_4 = channel_0_24.rotationKeys.elementAt(4);
      expect(rotationKey_0_24_4.time, moreOrLessEquals(11.9666672));
      expect(rotationKey_0_24_4.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 3.49691106e-07, 3.49691106e-07)));
      expect(channel_0_24.scalingKeys.length, equals(5));
      final scalingKey_0_24_0 = channel_0_24.scalingKeys.elementAt(0);
      expect(scalingKey_0_24_0.time, moreOrLessEquals(0.0333329998));
      expect(scalingKey_0_24_0.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_24_1 = channel_0_24.scalingKeys.elementAt(1);
      expect(scalingKey_0_24_1.time, moreOrLessEquals(3.01666665));
      expect(scalingKey_0_24_1.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_24_2 = channel_0_24.scalingKeys.elementAt(2);
      expect(scalingKey_0_24_2.time, moreOrLessEquals(6));
      expect(scalingKey_0_24_2.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_24_3 = channel_0_24.scalingKeys.elementAt(3);
      expect(scalingKey_0_24_3.time, moreOrLessEquals(8.98333359));
      expect(scalingKey_0_24_3.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_24_4 = channel_0_24.scalingKeys.elementAt(4);
      expect(scalingKey_0_24_4.time, moreOrLessEquals(11.9666672));
      expect(scalingKey_0_24_4.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      expect(channel_0_24.preState, equals(AnimBehavior.defaults));
      expect(channel_0_24.postState, equals(AnimBehavior.defaults));
      final  channel_0_25 = animation_0.channels.elementAt(25);
      expect(channel_0_25.positionKeys.length, equals(5));
      final positionKey_0_25_0 = channel_0_25.positionKeys.elementAt(0);
      expect(positionKey_0_25_0.time, moreOrLessEquals(0.0333329998));
      expect(positionKey_0_25_0.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_25_1 = channel_0_25.positionKeys.elementAt(1);
      expect(positionKey_0_25_1.time, moreOrLessEquals(3.01666665));
      expect(positionKey_0_25_1.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_25_2 = channel_0_25.positionKeys.elementAt(2);
      expect(positionKey_0_25_2.time, moreOrLessEquals(6));
      expect(positionKey_0_25_2.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_25_3 = channel_0_25.positionKeys.elementAt(3);
      expect(positionKey_0_25_3.time, moreOrLessEquals(8.98333359));
      expect(positionKey_0_25_3.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_25_4 = channel_0_25.positionKeys.elementAt(4);
      expect(positionKey_0_25_4.time, moreOrLessEquals(11.9666672));
      expect(positionKey_0_25_4.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      expect(channel_0_25.rotationKeys.length, equals(5));
      final rotationKey_0_25_0 = channel_0_25.rotationKeys.elementAt(0);
      expect(rotationKey_0_25_0.time, moreOrLessEquals(0.0333329998));
      expect(rotationKey_0_25_0.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 2.38497613e-08, 2.38497613e-08)));
      final rotationKey_0_25_1 = channel_0_25.rotationKeys.elementAt(1);
      expect(rotationKey_0_25_1.time, moreOrLessEquals(3.01666665));
      expect(rotationKey_0_25_1.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0.707107008, 0.707107008)));
      final rotationKey_0_25_2 = channel_0_25.rotationKeys.elementAt(2);
      expect(rotationKey_0_25_2.time, moreOrLessEquals(6));
      expect(rotationKey_0_25_2.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 1, 1)));
      final rotationKey_0_25_3 = channel_0_25.rotationKeys.elementAt(3);
      expect(rotationKey_0_25_3.time, moreOrLessEquals(8.98333359));
      expect(rotationKey_0_25_3.value, quaternionMoreOrLessEquals(Quaternion(0, 0, -0.707106054, -0.707106054)));
      final rotationKey_0_25_4 = channel_0_25.rotationKeys.elementAt(4);
      expect(rotationKey_0_25_4.time, moreOrLessEquals(11.9666672));
      expect(rotationKey_0_25_4.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 3.49691106e-07, 3.49691106e-07)));
      expect(channel_0_25.scalingKeys.length, equals(5));
      final scalingKey_0_25_0 = channel_0_25.scalingKeys.elementAt(0);
      expect(scalingKey_0_25_0.time, moreOrLessEquals(0.0333329998));
      expect(scalingKey_0_25_0.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_25_1 = channel_0_25.scalingKeys.elementAt(1);
      expect(scalingKey_0_25_1.time, moreOrLessEquals(3.01666665));
      expect(scalingKey_0_25_1.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_25_2 = channel_0_25.scalingKeys.elementAt(2);
      expect(scalingKey_0_25_2.time, moreOrLessEquals(6));
      expect(scalingKey_0_25_2.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_25_3 = channel_0_25.scalingKeys.elementAt(3);
      expect(scalingKey_0_25_3.time, moreOrLessEquals(8.98333359));
      expect(scalingKey_0_25_3.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_25_4 = channel_0_25.scalingKeys.elementAt(4);
      expect(scalingKey_0_25_4.time, moreOrLessEquals(11.9666672));
      expect(scalingKey_0_25_4.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      expect(channel_0_25.preState, equals(AnimBehavior.defaults));
      expect(channel_0_25.postState, equals(AnimBehavior.defaults));
      final  channel_0_26 = animation_0.channels.elementAt(26);
      expect(channel_0_26.positionKeys.length, equals(5));
      final positionKey_0_26_0 = channel_0_26.positionKeys.elementAt(0);
      expect(positionKey_0_26_0.time, moreOrLessEquals(0.0333329998));
      expect(positionKey_0_26_0.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_26_1 = channel_0_26.positionKeys.elementAt(1);
      expect(positionKey_0_26_1.time, moreOrLessEquals(3.01666665));
      expect(positionKey_0_26_1.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_26_2 = channel_0_26.positionKeys.elementAt(2);
      expect(positionKey_0_26_2.time, moreOrLessEquals(6));
      expect(positionKey_0_26_2.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_26_3 = channel_0_26.positionKeys.elementAt(3);
      expect(positionKey_0_26_3.time, moreOrLessEquals(8.98333359));
      expect(positionKey_0_26_3.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_26_4 = channel_0_26.positionKeys.elementAt(4);
      expect(positionKey_0_26_4.time, moreOrLessEquals(11.9666672));
      expect(positionKey_0_26_4.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      expect(channel_0_26.rotationKeys.length, equals(5));
      final rotationKey_0_26_0 = channel_0_26.rotationKeys.elementAt(0);
      expect(rotationKey_0_26_0.time, moreOrLessEquals(0.0333329998));
      expect(rotationKey_0_26_0.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 2.38497613e-08, 2.38497613e-08)));
      final rotationKey_0_26_1 = channel_0_26.rotationKeys.elementAt(1);
      expect(rotationKey_0_26_1.time, moreOrLessEquals(3.01666665));
      expect(rotationKey_0_26_1.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0.707107008, 0.707107008)));
      final rotationKey_0_26_2 = channel_0_26.rotationKeys.elementAt(2);
      expect(rotationKey_0_26_2.time, moreOrLessEquals(6));
      expect(rotationKey_0_26_2.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 1, 1)));
      final rotationKey_0_26_3 = channel_0_26.rotationKeys.elementAt(3);
      expect(rotationKey_0_26_3.time, moreOrLessEquals(8.98333359));
      expect(rotationKey_0_26_3.value, quaternionMoreOrLessEquals(Quaternion(0, 0, -0.707106054, -0.707106054)));
      final rotationKey_0_26_4 = channel_0_26.rotationKeys.elementAt(4);
      expect(rotationKey_0_26_4.time, moreOrLessEquals(11.9666672));
      expect(rotationKey_0_26_4.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 3.49691106e-07, 3.49691106e-07)));
      expect(channel_0_26.scalingKeys.length, equals(5));
      final scalingKey_0_26_0 = channel_0_26.scalingKeys.elementAt(0);
      expect(scalingKey_0_26_0.time, moreOrLessEquals(0.0333329998));
      expect(scalingKey_0_26_0.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_26_1 = channel_0_26.scalingKeys.elementAt(1);
      expect(scalingKey_0_26_1.time, moreOrLessEquals(3.01666665));
      expect(scalingKey_0_26_1.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_26_2 = channel_0_26.scalingKeys.elementAt(2);
      expect(scalingKey_0_26_2.time, moreOrLessEquals(6));
      expect(scalingKey_0_26_2.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_26_3 = channel_0_26.scalingKeys.elementAt(3);
      expect(scalingKey_0_26_3.time, moreOrLessEquals(8.98333359));
      expect(scalingKey_0_26_3.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_26_4 = channel_0_26.scalingKeys.elementAt(4);
      expect(scalingKey_0_26_4.time, moreOrLessEquals(11.9666672));
      expect(scalingKey_0_26_4.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      expect(channel_0_26.preState, equals(AnimBehavior.defaults));
      expect(channel_0_26.postState, equals(AnimBehavior.defaults));
      final  channel_0_27 = animation_0.channels.elementAt(27);
      expect(channel_0_27.positionKeys.length, equals(5));
      final positionKey_0_27_0 = channel_0_27.positionKeys.elementAt(0);
      expect(positionKey_0_27_0.time, moreOrLessEquals(0.0333329998));
      expect(positionKey_0_27_0.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_27_1 = channel_0_27.positionKeys.elementAt(1);
      expect(positionKey_0_27_1.time, moreOrLessEquals(3.01666665));
      expect(positionKey_0_27_1.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_27_2 = channel_0_27.positionKeys.elementAt(2);
      expect(positionKey_0_27_2.time, moreOrLessEquals(6));
      expect(positionKey_0_27_2.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_27_3 = channel_0_27.positionKeys.elementAt(3);
      expect(positionKey_0_27_3.time, moreOrLessEquals(8.98333359));
      expect(positionKey_0_27_3.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_27_4 = channel_0_27.positionKeys.elementAt(4);
      expect(positionKey_0_27_4.time, moreOrLessEquals(11.9666672));
      expect(positionKey_0_27_4.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      expect(channel_0_27.rotationKeys.length, equals(5));
      final rotationKey_0_27_0 = channel_0_27.rotationKeys.elementAt(0);
      expect(rotationKey_0_27_0.time, moreOrLessEquals(0.0333329998));
      expect(rotationKey_0_27_0.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 2.38497613e-08, 2.38497613e-08)));
      final rotationKey_0_27_1 = channel_0_27.rotationKeys.elementAt(1);
      expect(rotationKey_0_27_1.time, moreOrLessEquals(3.01666665));
      expect(rotationKey_0_27_1.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0.707107008, 0.707107008)));
      final rotationKey_0_27_2 = channel_0_27.rotationKeys.elementAt(2);
      expect(rotationKey_0_27_2.time, moreOrLessEquals(6));
      expect(rotationKey_0_27_2.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 1, 1)));
      final rotationKey_0_27_3 = channel_0_27.rotationKeys.elementAt(3);
      expect(rotationKey_0_27_3.time, moreOrLessEquals(8.98333359));
      expect(rotationKey_0_27_3.value, quaternionMoreOrLessEquals(Quaternion(0, 0, -0.707106054, -0.707106054)));
      final rotationKey_0_27_4 = channel_0_27.rotationKeys.elementAt(4);
      expect(rotationKey_0_27_4.time, moreOrLessEquals(11.9666672));
      expect(rotationKey_0_27_4.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 3.49691106e-07, 3.49691106e-07)));
      expect(channel_0_27.scalingKeys.length, equals(5));
      final scalingKey_0_27_0 = channel_0_27.scalingKeys.elementAt(0);
      expect(scalingKey_0_27_0.time, moreOrLessEquals(0.0333329998));
      expect(scalingKey_0_27_0.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_27_1 = channel_0_27.scalingKeys.elementAt(1);
      expect(scalingKey_0_27_1.time, moreOrLessEquals(3.01666665));
      expect(scalingKey_0_27_1.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_27_2 = channel_0_27.scalingKeys.elementAt(2);
      expect(scalingKey_0_27_2.time, moreOrLessEquals(6));
      expect(scalingKey_0_27_2.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_27_3 = channel_0_27.scalingKeys.elementAt(3);
      expect(scalingKey_0_27_3.time, moreOrLessEquals(8.98333359));
      expect(scalingKey_0_27_3.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_27_4 = channel_0_27.scalingKeys.elementAt(4);
      expect(scalingKey_0_27_4.time, moreOrLessEquals(11.9666672));
      expect(scalingKey_0_27_4.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      expect(channel_0_27.preState, equals(AnimBehavior.defaults));
      expect(channel_0_27.postState, equals(AnimBehavior.defaults));
      final  channel_0_28 = animation_0.channels.elementAt(28);
      expect(channel_0_28.positionKeys.length, equals(5));
      final positionKey_0_28_0 = channel_0_28.positionKeys.elementAt(0);
      expect(positionKey_0_28_0.time, moreOrLessEquals(0.0333329998));
      expect(positionKey_0_28_0.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_28_1 = channel_0_28.positionKeys.elementAt(1);
      expect(positionKey_0_28_1.time, moreOrLessEquals(3.01666665));
      expect(positionKey_0_28_1.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_28_2 = channel_0_28.positionKeys.elementAt(2);
      expect(positionKey_0_28_2.time, moreOrLessEquals(6));
      expect(positionKey_0_28_2.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_28_3 = channel_0_28.positionKeys.elementAt(3);
      expect(positionKey_0_28_3.time, moreOrLessEquals(8.98333359));
      expect(positionKey_0_28_3.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_28_4 = channel_0_28.positionKeys.elementAt(4);
      expect(positionKey_0_28_4.time, moreOrLessEquals(11.9666672));
      expect(positionKey_0_28_4.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      expect(channel_0_28.rotationKeys.length, equals(5));
      final rotationKey_0_28_0 = channel_0_28.rotationKeys.elementAt(0);
      expect(rotationKey_0_28_0.time, moreOrLessEquals(0.0333329998));
      expect(rotationKey_0_28_0.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 2.38497613e-08, 2.38497613e-08)));
      final rotationKey_0_28_1 = channel_0_28.rotationKeys.elementAt(1);
      expect(rotationKey_0_28_1.time, moreOrLessEquals(3.01666665));
      expect(rotationKey_0_28_1.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0.707107008, 0.707107008)));
      final rotationKey_0_28_2 = channel_0_28.rotationKeys.elementAt(2);
      expect(rotationKey_0_28_2.time, moreOrLessEquals(6));
      expect(rotationKey_0_28_2.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 1, 1)));
      final rotationKey_0_28_3 = channel_0_28.rotationKeys.elementAt(3);
      expect(rotationKey_0_28_3.time, moreOrLessEquals(8.98333359));
      expect(rotationKey_0_28_3.value, quaternionMoreOrLessEquals(Quaternion(0, 0, -0.707106054, -0.707106054)));
      final rotationKey_0_28_4 = channel_0_28.rotationKeys.elementAt(4);
      expect(rotationKey_0_28_4.time, moreOrLessEquals(11.9666672));
      expect(rotationKey_0_28_4.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 3.49691106e-07, 3.49691106e-07)));
      expect(channel_0_28.scalingKeys.length, equals(5));
      final scalingKey_0_28_0 = channel_0_28.scalingKeys.elementAt(0);
      expect(scalingKey_0_28_0.time, moreOrLessEquals(0.0333329998));
      expect(scalingKey_0_28_0.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_28_1 = channel_0_28.scalingKeys.elementAt(1);
      expect(scalingKey_0_28_1.time, moreOrLessEquals(3.01666665));
      expect(scalingKey_0_28_1.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_28_2 = channel_0_28.scalingKeys.elementAt(2);
      expect(scalingKey_0_28_2.time, moreOrLessEquals(6));
      expect(scalingKey_0_28_2.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_28_3 = channel_0_28.scalingKeys.elementAt(3);
      expect(scalingKey_0_28_3.time, moreOrLessEquals(8.98333359));
      expect(scalingKey_0_28_3.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_28_4 = channel_0_28.scalingKeys.elementAt(4);
      expect(scalingKey_0_28_4.time, moreOrLessEquals(11.9666672));
      expect(scalingKey_0_28_4.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      expect(channel_0_28.preState, equals(AnimBehavior.defaults));
      expect(channel_0_28.postState, equals(AnimBehavior.defaults));
      final  channel_0_29 = animation_0.channels.elementAt(29);
      expect(channel_0_29.positionKeys.length, equals(5));
      final positionKey_0_29_0 = channel_0_29.positionKeys.elementAt(0);
      expect(positionKey_0_29_0.time, moreOrLessEquals(0.0333329998));
      expect(positionKey_0_29_0.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_29_1 = channel_0_29.positionKeys.elementAt(1);
      expect(positionKey_0_29_1.time, moreOrLessEquals(3.01666665));
      expect(positionKey_0_29_1.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_29_2 = channel_0_29.positionKeys.elementAt(2);
      expect(positionKey_0_29_2.time, moreOrLessEquals(6));
      expect(positionKey_0_29_2.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_29_3 = channel_0_29.positionKeys.elementAt(3);
      expect(positionKey_0_29_3.time, moreOrLessEquals(8.98333359));
      expect(positionKey_0_29_3.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_29_4 = channel_0_29.positionKeys.elementAt(4);
      expect(positionKey_0_29_4.time, moreOrLessEquals(11.9666672));
      expect(positionKey_0_29_4.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      expect(channel_0_29.rotationKeys.length, equals(5));
      final rotationKey_0_29_0 = channel_0_29.rotationKeys.elementAt(0);
      expect(rotationKey_0_29_0.time, moreOrLessEquals(0.0333329998));
      expect(rotationKey_0_29_0.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 2.38497613e-08, 2.38497613e-08)));
      final rotationKey_0_29_1 = channel_0_29.rotationKeys.elementAt(1);
      expect(rotationKey_0_29_1.time, moreOrLessEquals(3.01666665));
      expect(rotationKey_0_29_1.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0.707107008, 0.707107008)));
      final rotationKey_0_29_2 = channel_0_29.rotationKeys.elementAt(2);
      expect(rotationKey_0_29_2.time, moreOrLessEquals(6));
      expect(rotationKey_0_29_2.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 1, 1)));
      final rotationKey_0_29_3 = channel_0_29.rotationKeys.elementAt(3);
      expect(rotationKey_0_29_3.time, moreOrLessEquals(8.98333359));
      expect(rotationKey_0_29_3.value, quaternionMoreOrLessEquals(Quaternion(0, 0, -0.707106054, -0.707106054)));
      final rotationKey_0_29_4 = channel_0_29.rotationKeys.elementAt(4);
      expect(rotationKey_0_29_4.time, moreOrLessEquals(11.9666672));
      expect(rotationKey_0_29_4.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 3.49691106e-07, 3.49691106e-07)));
      expect(channel_0_29.scalingKeys.length, equals(5));
      final scalingKey_0_29_0 = channel_0_29.scalingKeys.elementAt(0);
      expect(scalingKey_0_29_0.time, moreOrLessEquals(0.0333329998));
      expect(scalingKey_0_29_0.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_29_1 = channel_0_29.scalingKeys.elementAt(1);
      expect(scalingKey_0_29_1.time, moreOrLessEquals(3.01666665));
      expect(scalingKey_0_29_1.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_29_2 = channel_0_29.scalingKeys.elementAt(2);
      expect(scalingKey_0_29_2.time, moreOrLessEquals(6));
      expect(scalingKey_0_29_2.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_29_3 = channel_0_29.scalingKeys.elementAt(3);
      expect(scalingKey_0_29_3.time, moreOrLessEquals(8.98333359));
      expect(scalingKey_0_29_3.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_29_4 = channel_0_29.scalingKeys.elementAt(4);
      expect(scalingKey_0_29_4.time, moreOrLessEquals(11.9666672));
      expect(scalingKey_0_29_4.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      expect(channel_0_29.preState, equals(AnimBehavior.defaults));
      expect(channel_0_29.postState, equals(AnimBehavior.defaults));
      final  channel_0_30 = animation_0.channels.elementAt(30);
      expect(channel_0_30.positionKeys.length, equals(5));
      final positionKey_0_30_0 = channel_0_30.positionKeys.elementAt(0);
      expect(positionKey_0_30_0.time, moreOrLessEquals(0.0333329998));
      expect(positionKey_0_30_0.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_30_1 = channel_0_30.positionKeys.elementAt(1);
      expect(positionKey_0_30_1.time, moreOrLessEquals(3.01666665));
      expect(positionKey_0_30_1.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_30_2 = channel_0_30.positionKeys.elementAt(2);
      expect(positionKey_0_30_2.time, moreOrLessEquals(6));
      expect(positionKey_0_30_2.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_30_3 = channel_0_30.positionKeys.elementAt(3);
      expect(positionKey_0_30_3.time, moreOrLessEquals(8.98333359));
      expect(positionKey_0_30_3.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_30_4 = channel_0_30.positionKeys.elementAt(4);
      expect(positionKey_0_30_4.time, moreOrLessEquals(11.9666672));
      expect(positionKey_0_30_4.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      expect(channel_0_30.rotationKeys.length, equals(5));
      final rotationKey_0_30_0 = channel_0_30.rotationKeys.elementAt(0);
      expect(rotationKey_0_30_0.time, moreOrLessEquals(0.0333329998));
      expect(rotationKey_0_30_0.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 2.38497613e-08, 2.38497613e-08)));
      final rotationKey_0_30_1 = channel_0_30.rotationKeys.elementAt(1);
      expect(rotationKey_0_30_1.time, moreOrLessEquals(3.01666665));
      expect(rotationKey_0_30_1.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0.707107008, 0.707107008)));
      final rotationKey_0_30_2 = channel_0_30.rotationKeys.elementAt(2);
      expect(rotationKey_0_30_2.time, moreOrLessEquals(6));
      expect(rotationKey_0_30_2.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 1, 1)));
      final rotationKey_0_30_3 = channel_0_30.rotationKeys.elementAt(3);
      expect(rotationKey_0_30_3.time, moreOrLessEquals(8.98333359));
      expect(rotationKey_0_30_3.value, quaternionMoreOrLessEquals(Quaternion(0, 0, -0.707106054, -0.707106054)));
      final rotationKey_0_30_4 = channel_0_30.rotationKeys.elementAt(4);
      expect(rotationKey_0_30_4.time, moreOrLessEquals(11.9666672));
      expect(rotationKey_0_30_4.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 3.49691106e-07, 3.49691106e-07)));
      expect(channel_0_30.scalingKeys.length, equals(5));
      final scalingKey_0_30_0 = channel_0_30.scalingKeys.elementAt(0);
      expect(scalingKey_0_30_0.time, moreOrLessEquals(0.0333329998));
      expect(scalingKey_0_30_0.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_30_1 = channel_0_30.scalingKeys.elementAt(1);
      expect(scalingKey_0_30_1.time, moreOrLessEquals(3.01666665));
      expect(scalingKey_0_30_1.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_30_2 = channel_0_30.scalingKeys.elementAt(2);
      expect(scalingKey_0_30_2.time, moreOrLessEquals(6));
      expect(scalingKey_0_30_2.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_30_3 = channel_0_30.scalingKeys.elementAt(3);
      expect(scalingKey_0_30_3.time, moreOrLessEquals(8.98333359));
      expect(scalingKey_0_30_3.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_30_4 = channel_0_30.scalingKeys.elementAt(4);
      expect(scalingKey_0_30_4.time, moreOrLessEquals(11.9666672));
      expect(scalingKey_0_30_4.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      expect(channel_0_30.preState, equals(AnimBehavior.defaults));
      expect(channel_0_30.postState, equals(AnimBehavior.defaults));
      final  channel_0_31 = animation_0.channels.elementAt(31);
      expect(channel_0_31.positionKeys.length, equals(5));
      final positionKey_0_31_0 = channel_0_31.positionKeys.elementAt(0);
      expect(positionKey_0_31_0.time, moreOrLessEquals(0.0333329998));
      expect(positionKey_0_31_0.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_31_1 = channel_0_31.positionKeys.elementAt(1);
      expect(positionKey_0_31_1.time, moreOrLessEquals(3.01666665));
      expect(positionKey_0_31_1.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_31_2 = channel_0_31.positionKeys.elementAt(2);
      expect(positionKey_0_31_2.time, moreOrLessEquals(6));
      expect(positionKey_0_31_2.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_31_3 = channel_0_31.positionKeys.elementAt(3);
      expect(positionKey_0_31_3.time, moreOrLessEquals(8.98333359));
      expect(positionKey_0_31_3.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_31_4 = channel_0_31.positionKeys.elementAt(4);
      expect(positionKey_0_31_4.time, moreOrLessEquals(11.9666672));
      expect(positionKey_0_31_4.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      expect(channel_0_31.rotationKeys.length, equals(5));
      final rotationKey_0_31_0 = channel_0_31.rotationKeys.elementAt(0);
      expect(rotationKey_0_31_0.time, moreOrLessEquals(0.0333329998));
      expect(rotationKey_0_31_0.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 2.38497613e-08, 2.38497613e-08)));
      final rotationKey_0_31_1 = channel_0_31.rotationKeys.elementAt(1);
      expect(rotationKey_0_31_1.time, moreOrLessEquals(3.01666665));
      expect(rotationKey_0_31_1.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0.707107008, 0.707107008)));
      final rotationKey_0_31_2 = channel_0_31.rotationKeys.elementAt(2);
      expect(rotationKey_0_31_2.time, moreOrLessEquals(6));
      expect(rotationKey_0_31_2.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 1, 1)));
      final rotationKey_0_31_3 = channel_0_31.rotationKeys.elementAt(3);
      expect(rotationKey_0_31_3.time, moreOrLessEquals(8.98333359));
      expect(rotationKey_0_31_3.value, quaternionMoreOrLessEquals(Quaternion(0, 0, -0.707106054, -0.707106054)));
      final rotationKey_0_31_4 = channel_0_31.rotationKeys.elementAt(4);
      expect(rotationKey_0_31_4.time, moreOrLessEquals(11.9666672));
      expect(rotationKey_0_31_4.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 3.49691106e-07, 3.49691106e-07)));
      expect(channel_0_31.scalingKeys.length, equals(5));
      final scalingKey_0_31_0 = channel_0_31.scalingKeys.elementAt(0);
      expect(scalingKey_0_31_0.time, moreOrLessEquals(0.0333329998));
      expect(scalingKey_0_31_0.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_31_1 = channel_0_31.scalingKeys.elementAt(1);
      expect(scalingKey_0_31_1.time, moreOrLessEquals(3.01666665));
      expect(scalingKey_0_31_1.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_31_2 = channel_0_31.scalingKeys.elementAt(2);
      expect(scalingKey_0_31_2.time, moreOrLessEquals(6));
      expect(scalingKey_0_31_2.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_31_3 = channel_0_31.scalingKeys.elementAt(3);
      expect(scalingKey_0_31_3.time, moreOrLessEquals(8.98333359));
      expect(scalingKey_0_31_3.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_31_4 = channel_0_31.scalingKeys.elementAt(4);
      expect(scalingKey_0_31_4.time, moreOrLessEquals(11.9666672));
      expect(scalingKey_0_31_4.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      expect(channel_0_31.preState, equals(AnimBehavior.defaults));
      expect(channel_0_31.postState, equals(AnimBehavior.defaults));
      final  channel_0_32 = animation_0.channels.elementAt(32);
      expect(channel_0_32.positionKeys.length, equals(5));
      final positionKey_0_32_0 = channel_0_32.positionKeys.elementAt(0);
      expect(positionKey_0_32_0.time, moreOrLessEquals(0.0333329998));
      expect(positionKey_0_32_0.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_32_1 = channel_0_32.positionKeys.elementAt(1);
      expect(positionKey_0_32_1.time, moreOrLessEquals(3.01666665));
      expect(positionKey_0_32_1.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_32_2 = channel_0_32.positionKeys.elementAt(2);
      expect(positionKey_0_32_2.time, moreOrLessEquals(6));
      expect(positionKey_0_32_2.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_32_3 = channel_0_32.positionKeys.elementAt(3);
      expect(positionKey_0_32_3.time, moreOrLessEquals(8.98333359));
      expect(positionKey_0_32_3.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_32_4 = channel_0_32.positionKeys.elementAt(4);
      expect(positionKey_0_32_4.time, moreOrLessEquals(11.9666672));
      expect(positionKey_0_32_4.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      expect(channel_0_32.rotationKeys.length, equals(5));
      final rotationKey_0_32_0 = channel_0_32.rotationKeys.elementAt(0);
      expect(rotationKey_0_32_0.time, moreOrLessEquals(0.0333329998));
      expect(rotationKey_0_32_0.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 2.38497613e-08, 2.38497613e-08)));
      final rotationKey_0_32_1 = channel_0_32.rotationKeys.elementAt(1);
      expect(rotationKey_0_32_1.time, moreOrLessEquals(3.01666665));
      expect(rotationKey_0_32_1.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0.707107008, 0.707107008)));
      final rotationKey_0_32_2 = channel_0_32.rotationKeys.elementAt(2);
      expect(rotationKey_0_32_2.time, moreOrLessEquals(6));
      expect(rotationKey_0_32_2.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 1, 1)));
      final rotationKey_0_32_3 = channel_0_32.rotationKeys.elementAt(3);
      expect(rotationKey_0_32_3.time, moreOrLessEquals(8.98333359));
      expect(rotationKey_0_32_3.value, quaternionMoreOrLessEquals(Quaternion(0, 0, -0.707106054, -0.707106054)));
      final rotationKey_0_32_4 = channel_0_32.rotationKeys.elementAt(4);
      expect(rotationKey_0_32_4.time, moreOrLessEquals(11.9666672));
      expect(rotationKey_0_32_4.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 3.49691106e-07, 3.49691106e-07)));
      expect(channel_0_32.scalingKeys.length, equals(5));
      final scalingKey_0_32_0 = channel_0_32.scalingKeys.elementAt(0);
      expect(scalingKey_0_32_0.time, moreOrLessEquals(0.0333329998));
      expect(scalingKey_0_32_0.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_32_1 = channel_0_32.scalingKeys.elementAt(1);
      expect(scalingKey_0_32_1.time, moreOrLessEquals(3.01666665));
      expect(scalingKey_0_32_1.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_32_2 = channel_0_32.scalingKeys.elementAt(2);
      expect(scalingKey_0_32_2.time, moreOrLessEquals(6));
      expect(scalingKey_0_32_2.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_32_3 = channel_0_32.scalingKeys.elementAt(3);
      expect(scalingKey_0_32_3.time, moreOrLessEquals(8.98333359));
      expect(scalingKey_0_32_3.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_32_4 = channel_0_32.scalingKeys.elementAt(4);
      expect(scalingKey_0_32_4.time, moreOrLessEquals(11.9666672));
      expect(scalingKey_0_32_4.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      expect(channel_0_32.preState, equals(AnimBehavior.defaults));
      expect(channel_0_32.postState, equals(AnimBehavior.defaults));
      final  channel_0_33 = animation_0.channels.elementAt(33);
      expect(channel_0_33.positionKeys.length, equals(5));
      final positionKey_0_33_0 = channel_0_33.positionKeys.elementAt(0);
      expect(positionKey_0_33_0.time, moreOrLessEquals(0.0333329998));
      expect(positionKey_0_33_0.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_33_1 = channel_0_33.positionKeys.elementAt(1);
      expect(positionKey_0_33_1.time, moreOrLessEquals(3.01666665));
      expect(positionKey_0_33_1.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_33_2 = channel_0_33.positionKeys.elementAt(2);
      expect(positionKey_0_33_2.time, moreOrLessEquals(6));
      expect(positionKey_0_33_2.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_33_3 = channel_0_33.positionKeys.elementAt(3);
      expect(positionKey_0_33_3.time, moreOrLessEquals(8.98333359));
      expect(positionKey_0_33_3.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_33_4 = channel_0_33.positionKeys.elementAt(4);
      expect(positionKey_0_33_4.time, moreOrLessEquals(11.9666672));
      expect(positionKey_0_33_4.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      expect(channel_0_33.rotationKeys.length, equals(5));
      final rotationKey_0_33_0 = channel_0_33.rotationKeys.elementAt(0);
      expect(rotationKey_0_33_0.time, moreOrLessEquals(0.0333329998));
      expect(rotationKey_0_33_0.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 2.38497613e-08, 2.38497613e-08)));
      final rotationKey_0_33_1 = channel_0_33.rotationKeys.elementAt(1);
      expect(rotationKey_0_33_1.time, moreOrLessEquals(3.01666665));
      expect(rotationKey_0_33_1.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0.707107008, 0.707107008)));
      final rotationKey_0_33_2 = channel_0_33.rotationKeys.elementAt(2);
      expect(rotationKey_0_33_2.time, moreOrLessEquals(6));
      expect(rotationKey_0_33_2.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 1, 1)));
      final rotationKey_0_33_3 = channel_0_33.rotationKeys.elementAt(3);
      expect(rotationKey_0_33_3.time, moreOrLessEquals(8.98333359));
      expect(rotationKey_0_33_3.value, quaternionMoreOrLessEquals(Quaternion(0, 0, -0.707106054, -0.707106054)));
      final rotationKey_0_33_4 = channel_0_33.rotationKeys.elementAt(4);
      expect(rotationKey_0_33_4.time, moreOrLessEquals(11.9666672));
      expect(rotationKey_0_33_4.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 3.49691106e-07, 3.49691106e-07)));
      expect(channel_0_33.scalingKeys.length, equals(5));
      final scalingKey_0_33_0 = channel_0_33.scalingKeys.elementAt(0);
      expect(scalingKey_0_33_0.time, moreOrLessEquals(0.0333329998));
      expect(scalingKey_0_33_0.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_33_1 = channel_0_33.scalingKeys.elementAt(1);
      expect(scalingKey_0_33_1.time, moreOrLessEquals(3.01666665));
      expect(scalingKey_0_33_1.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_33_2 = channel_0_33.scalingKeys.elementAt(2);
      expect(scalingKey_0_33_2.time, moreOrLessEquals(6));
      expect(scalingKey_0_33_2.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_33_3 = channel_0_33.scalingKeys.elementAt(3);
      expect(scalingKey_0_33_3.time, moreOrLessEquals(8.98333359));
      expect(scalingKey_0_33_3.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_33_4 = channel_0_33.scalingKeys.elementAt(4);
      expect(scalingKey_0_33_4.time, moreOrLessEquals(11.9666672));
      expect(scalingKey_0_33_4.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      expect(channel_0_33.preState, equals(AnimBehavior.defaults));
      expect(channel_0_33.postState, equals(AnimBehavior.defaults));
      final  channel_0_34 = animation_0.channels.elementAt(34);
      expect(channel_0_34.positionKeys.length, equals(5));
      final positionKey_0_34_0 = channel_0_34.positionKeys.elementAt(0);
      expect(positionKey_0_34_0.time, moreOrLessEquals(0.0333329998));
      expect(positionKey_0_34_0.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_34_1 = channel_0_34.positionKeys.elementAt(1);
      expect(positionKey_0_34_1.time, moreOrLessEquals(3.01666665));
      expect(positionKey_0_34_1.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_34_2 = channel_0_34.positionKeys.elementAt(2);
      expect(positionKey_0_34_2.time, moreOrLessEquals(6));
      expect(positionKey_0_34_2.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_34_3 = channel_0_34.positionKeys.elementAt(3);
      expect(positionKey_0_34_3.time, moreOrLessEquals(8.98333359));
      expect(positionKey_0_34_3.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_34_4 = channel_0_34.positionKeys.elementAt(4);
      expect(positionKey_0_34_4.time, moreOrLessEquals(11.9666672));
      expect(positionKey_0_34_4.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      expect(channel_0_34.rotationKeys.length, equals(5));
      final rotationKey_0_34_0 = channel_0_34.rotationKeys.elementAt(0);
      expect(rotationKey_0_34_0.time, moreOrLessEquals(0.0333329998));
      expect(rotationKey_0_34_0.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 2.38497613e-08, 2.38497613e-08)));
      final rotationKey_0_34_1 = channel_0_34.rotationKeys.elementAt(1);
      expect(rotationKey_0_34_1.time, moreOrLessEquals(3.01666665));
      expect(rotationKey_0_34_1.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0.707107008, 0.707107008)));
      final rotationKey_0_34_2 = channel_0_34.rotationKeys.elementAt(2);
      expect(rotationKey_0_34_2.time, moreOrLessEquals(6));
      expect(rotationKey_0_34_2.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 1, 1)));
      final rotationKey_0_34_3 = channel_0_34.rotationKeys.elementAt(3);
      expect(rotationKey_0_34_3.time, moreOrLessEquals(8.98333359));
      expect(rotationKey_0_34_3.value, quaternionMoreOrLessEquals(Quaternion(0, 0, -0.707106054, -0.707106054)));
      final rotationKey_0_34_4 = channel_0_34.rotationKeys.elementAt(4);
      expect(rotationKey_0_34_4.time, moreOrLessEquals(11.9666672));
      expect(rotationKey_0_34_4.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 3.49691106e-07, 3.49691106e-07)));
      expect(channel_0_34.scalingKeys.length, equals(5));
      final scalingKey_0_34_0 = channel_0_34.scalingKeys.elementAt(0);
      expect(scalingKey_0_34_0.time, moreOrLessEquals(0.0333329998));
      expect(scalingKey_0_34_0.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_34_1 = channel_0_34.scalingKeys.elementAt(1);
      expect(scalingKey_0_34_1.time, moreOrLessEquals(3.01666665));
      expect(scalingKey_0_34_1.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_34_2 = channel_0_34.scalingKeys.elementAt(2);
      expect(scalingKey_0_34_2.time, moreOrLessEquals(6));
      expect(scalingKey_0_34_2.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_34_3 = channel_0_34.scalingKeys.elementAt(3);
      expect(scalingKey_0_34_3.time, moreOrLessEquals(8.98333359));
      expect(scalingKey_0_34_3.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_34_4 = channel_0_34.scalingKeys.elementAt(4);
      expect(scalingKey_0_34_4.time, moreOrLessEquals(11.9666672));
      expect(scalingKey_0_34_4.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      expect(channel_0_34.preState, equals(AnimBehavior.defaults));
      expect(channel_0_34.postState, equals(AnimBehavior.defaults));
      final  channel_0_35 = animation_0.channels.elementAt(35);
      expect(channel_0_35.positionKeys.length, equals(5));
      final positionKey_0_35_0 = channel_0_35.positionKeys.elementAt(0);
      expect(positionKey_0_35_0.time, moreOrLessEquals(0.0333329998));
      expect(positionKey_0_35_0.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_35_1 = channel_0_35.positionKeys.elementAt(1);
      expect(positionKey_0_35_1.time, moreOrLessEquals(3.01666665));
      expect(positionKey_0_35_1.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_35_2 = channel_0_35.positionKeys.elementAt(2);
      expect(positionKey_0_35_2.time, moreOrLessEquals(6));
      expect(positionKey_0_35_2.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_35_3 = channel_0_35.positionKeys.elementAt(3);
      expect(positionKey_0_35_3.time, moreOrLessEquals(8.98333359));
      expect(positionKey_0_35_3.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_35_4 = channel_0_35.positionKeys.elementAt(4);
      expect(positionKey_0_35_4.time, moreOrLessEquals(11.9666672));
      expect(positionKey_0_35_4.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      expect(channel_0_35.rotationKeys.length, equals(5));
      final rotationKey_0_35_0 = channel_0_35.rotationKeys.elementAt(0);
      expect(rotationKey_0_35_0.time, moreOrLessEquals(0.0333329998));
      expect(rotationKey_0_35_0.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 2.38497613e-08, 2.38497613e-08)));
      final rotationKey_0_35_1 = channel_0_35.rotationKeys.elementAt(1);
      expect(rotationKey_0_35_1.time, moreOrLessEquals(3.01666665));
      expect(rotationKey_0_35_1.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0.707107008, 0.707107008)));
      final rotationKey_0_35_2 = channel_0_35.rotationKeys.elementAt(2);
      expect(rotationKey_0_35_2.time, moreOrLessEquals(6));
      expect(rotationKey_0_35_2.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 1, 1)));
      final rotationKey_0_35_3 = channel_0_35.rotationKeys.elementAt(3);
      expect(rotationKey_0_35_3.time, moreOrLessEquals(8.98333359));
      expect(rotationKey_0_35_3.value, quaternionMoreOrLessEquals(Quaternion(0, 0, -0.707106054, -0.707106054)));
      final rotationKey_0_35_4 = channel_0_35.rotationKeys.elementAt(4);
      expect(rotationKey_0_35_4.time, moreOrLessEquals(11.9666672));
      expect(rotationKey_0_35_4.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 3.49691106e-07, 3.49691106e-07)));
      expect(channel_0_35.scalingKeys.length, equals(5));
      final scalingKey_0_35_0 = channel_0_35.scalingKeys.elementAt(0);
      expect(scalingKey_0_35_0.time, moreOrLessEquals(0.0333329998));
      expect(scalingKey_0_35_0.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_35_1 = channel_0_35.scalingKeys.elementAt(1);
      expect(scalingKey_0_35_1.time, moreOrLessEquals(3.01666665));
      expect(scalingKey_0_35_1.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_35_2 = channel_0_35.scalingKeys.elementAt(2);
      expect(scalingKey_0_35_2.time, moreOrLessEquals(6));
      expect(scalingKey_0_35_2.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_35_3 = channel_0_35.scalingKeys.elementAt(3);
      expect(scalingKey_0_35_3.time, moreOrLessEquals(8.98333359));
      expect(scalingKey_0_35_3.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_35_4 = channel_0_35.scalingKeys.elementAt(4);
      expect(scalingKey_0_35_4.time, moreOrLessEquals(11.9666672));
      expect(scalingKey_0_35_4.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      expect(channel_0_35.preState, equals(AnimBehavior.defaults));
      expect(channel_0_35.postState, equals(AnimBehavior.defaults));
      final  channel_0_36 = animation_0.channels.elementAt(36);
      expect(channel_0_36.positionKeys.length, equals(5));
      final positionKey_0_36_0 = channel_0_36.positionKeys.elementAt(0);
      expect(positionKey_0_36_0.time, moreOrLessEquals(0.0333329998));
      expect(positionKey_0_36_0.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_36_1 = channel_0_36.positionKeys.elementAt(1);
      expect(positionKey_0_36_1.time, moreOrLessEquals(3.01666665));
      expect(positionKey_0_36_1.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_36_2 = channel_0_36.positionKeys.elementAt(2);
      expect(positionKey_0_36_2.time, moreOrLessEquals(6));
      expect(positionKey_0_36_2.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_36_3 = channel_0_36.positionKeys.elementAt(3);
      expect(positionKey_0_36_3.time, moreOrLessEquals(8.98333359));
      expect(positionKey_0_36_3.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_36_4 = channel_0_36.positionKeys.elementAt(4);
      expect(positionKey_0_36_4.time, moreOrLessEquals(11.9666672));
      expect(positionKey_0_36_4.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      expect(channel_0_36.rotationKeys.length, equals(5));
      final rotationKey_0_36_0 = channel_0_36.rotationKeys.elementAt(0);
      expect(rotationKey_0_36_0.time, moreOrLessEquals(0.0333329998));
      expect(rotationKey_0_36_0.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 2.38497613e-08, 2.38497613e-08)));
      final rotationKey_0_36_1 = channel_0_36.rotationKeys.elementAt(1);
      expect(rotationKey_0_36_1.time, moreOrLessEquals(3.01666665));
      expect(rotationKey_0_36_1.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0.707107008, 0.707107008)));
      final rotationKey_0_36_2 = channel_0_36.rotationKeys.elementAt(2);
      expect(rotationKey_0_36_2.time, moreOrLessEquals(6));
      expect(rotationKey_0_36_2.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 1, 1)));
      final rotationKey_0_36_3 = channel_0_36.rotationKeys.elementAt(3);
      expect(rotationKey_0_36_3.time, moreOrLessEquals(8.98333359));
      expect(rotationKey_0_36_3.value, quaternionMoreOrLessEquals(Quaternion(0, 0, -0.707106054, -0.707106054)));
      final rotationKey_0_36_4 = channel_0_36.rotationKeys.elementAt(4);
      expect(rotationKey_0_36_4.time, moreOrLessEquals(11.9666672));
      expect(rotationKey_0_36_4.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 3.49691106e-07, 3.49691106e-07)));
      expect(channel_0_36.scalingKeys.length, equals(5));
      final scalingKey_0_36_0 = channel_0_36.scalingKeys.elementAt(0);
      expect(scalingKey_0_36_0.time, moreOrLessEquals(0.0333329998));
      expect(scalingKey_0_36_0.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_36_1 = channel_0_36.scalingKeys.elementAt(1);
      expect(scalingKey_0_36_1.time, moreOrLessEquals(3.01666665));
      expect(scalingKey_0_36_1.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_36_2 = channel_0_36.scalingKeys.elementAt(2);
      expect(scalingKey_0_36_2.time, moreOrLessEquals(6));
      expect(scalingKey_0_36_2.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_36_3 = channel_0_36.scalingKeys.elementAt(3);
      expect(scalingKey_0_36_3.time, moreOrLessEquals(8.98333359));
      expect(scalingKey_0_36_3.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_36_4 = channel_0_36.scalingKeys.elementAt(4);
      expect(scalingKey_0_36_4.time, moreOrLessEquals(11.9666672));
      expect(scalingKey_0_36_4.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      expect(channel_0_36.preState, equals(AnimBehavior.defaults));
      expect(channel_0_36.postState, equals(AnimBehavior.defaults));
      final  channel_0_37 = animation_0.channels.elementAt(37);
      expect(channel_0_37.positionKeys.length, equals(5));
      final positionKey_0_37_0 = channel_0_37.positionKeys.elementAt(0);
      expect(positionKey_0_37_0.time, moreOrLessEquals(0.0333329998));
      expect(positionKey_0_37_0.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_37_1 = channel_0_37.positionKeys.elementAt(1);
      expect(positionKey_0_37_1.time, moreOrLessEquals(3.01666665));
      expect(positionKey_0_37_1.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_37_2 = channel_0_37.positionKeys.elementAt(2);
      expect(positionKey_0_37_2.time, moreOrLessEquals(6));
      expect(positionKey_0_37_2.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_37_3 = channel_0_37.positionKeys.elementAt(3);
      expect(positionKey_0_37_3.time, moreOrLessEquals(8.98333359));
      expect(positionKey_0_37_3.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_37_4 = channel_0_37.positionKeys.elementAt(4);
      expect(positionKey_0_37_4.time, moreOrLessEquals(11.9666672));
      expect(positionKey_0_37_4.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      expect(channel_0_37.rotationKeys.length, equals(5));
      final rotationKey_0_37_0 = channel_0_37.rotationKeys.elementAt(0);
      expect(rotationKey_0_37_0.time, moreOrLessEquals(0.0333329998));
      expect(rotationKey_0_37_0.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 2.38497613e-08, 2.38497613e-08)));
      final rotationKey_0_37_1 = channel_0_37.rotationKeys.elementAt(1);
      expect(rotationKey_0_37_1.time, moreOrLessEquals(3.01666665));
      expect(rotationKey_0_37_1.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0.707107008, 0.707107008)));
      final rotationKey_0_37_2 = channel_0_37.rotationKeys.elementAt(2);
      expect(rotationKey_0_37_2.time, moreOrLessEquals(6));
      expect(rotationKey_0_37_2.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 1, 1)));
      final rotationKey_0_37_3 = channel_0_37.rotationKeys.elementAt(3);
      expect(rotationKey_0_37_3.time, moreOrLessEquals(8.98333359));
      expect(rotationKey_0_37_3.value, quaternionMoreOrLessEquals(Quaternion(0, 0, -0.707106054, -0.707106054)));
      final rotationKey_0_37_4 = channel_0_37.rotationKeys.elementAt(4);
      expect(rotationKey_0_37_4.time, moreOrLessEquals(11.9666672));
      expect(rotationKey_0_37_4.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 3.49691106e-07, 3.49691106e-07)));
      expect(channel_0_37.scalingKeys.length, equals(5));
      final scalingKey_0_37_0 = channel_0_37.scalingKeys.elementAt(0);
      expect(scalingKey_0_37_0.time, moreOrLessEquals(0.0333329998));
      expect(scalingKey_0_37_0.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_37_1 = channel_0_37.scalingKeys.elementAt(1);
      expect(scalingKey_0_37_1.time, moreOrLessEquals(3.01666665));
      expect(scalingKey_0_37_1.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_37_2 = channel_0_37.scalingKeys.elementAt(2);
      expect(scalingKey_0_37_2.time, moreOrLessEquals(6));
      expect(scalingKey_0_37_2.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_37_3 = channel_0_37.scalingKeys.elementAt(3);
      expect(scalingKey_0_37_3.time, moreOrLessEquals(8.98333359));
      expect(scalingKey_0_37_3.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_37_4 = channel_0_37.scalingKeys.elementAt(4);
      expect(scalingKey_0_37_4.time, moreOrLessEquals(11.9666672));
      expect(scalingKey_0_37_4.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      expect(channel_0_37.preState, equals(AnimBehavior.defaults));
      expect(channel_0_37.postState, equals(AnimBehavior.defaults));
      final  channel_0_38 = animation_0.channels.elementAt(38);
      expect(channel_0_38.positionKeys.length, equals(5));
      final positionKey_0_38_0 = channel_0_38.positionKeys.elementAt(0);
      expect(positionKey_0_38_0.time, moreOrLessEquals(0.0333329998));
      expect(positionKey_0_38_0.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_38_1 = channel_0_38.positionKeys.elementAt(1);
      expect(positionKey_0_38_1.time, moreOrLessEquals(3.01666665));
      expect(positionKey_0_38_1.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_38_2 = channel_0_38.positionKeys.elementAt(2);
      expect(positionKey_0_38_2.time, moreOrLessEquals(6));
      expect(positionKey_0_38_2.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_38_3 = channel_0_38.positionKeys.elementAt(3);
      expect(positionKey_0_38_3.time, moreOrLessEquals(8.98333359));
      expect(positionKey_0_38_3.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_38_4 = channel_0_38.positionKeys.elementAt(4);
      expect(positionKey_0_38_4.time, moreOrLessEquals(11.9666672));
      expect(positionKey_0_38_4.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      expect(channel_0_38.rotationKeys.length, equals(5));
      final rotationKey_0_38_0 = channel_0_38.rotationKeys.elementAt(0);
      expect(rotationKey_0_38_0.time, moreOrLessEquals(0.0333329998));
      expect(rotationKey_0_38_0.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 2.38497613e-08, 2.38497613e-08)));
      final rotationKey_0_38_1 = channel_0_38.rotationKeys.elementAt(1);
      expect(rotationKey_0_38_1.time, moreOrLessEquals(3.01666665));
      expect(rotationKey_0_38_1.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0.707107008, 0.707107008)));
      final rotationKey_0_38_2 = channel_0_38.rotationKeys.elementAt(2);
      expect(rotationKey_0_38_2.time, moreOrLessEquals(6));
      expect(rotationKey_0_38_2.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 1, 1)));
      final rotationKey_0_38_3 = channel_0_38.rotationKeys.elementAt(3);
      expect(rotationKey_0_38_3.time, moreOrLessEquals(8.98333359));
      expect(rotationKey_0_38_3.value, quaternionMoreOrLessEquals(Quaternion(0, 0, -0.707106054, -0.707106054)));
      final rotationKey_0_38_4 = channel_0_38.rotationKeys.elementAt(4);
      expect(rotationKey_0_38_4.time, moreOrLessEquals(11.9666672));
      expect(rotationKey_0_38_4.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 3.49691106e-07, 3.49691106e-07)));
      expect(channel_0_38.scalingKeys.length, equals(5));
      final scalingKey_0_38_0 = channel_0_38.scalingKeys.elementAt(0);
      expect(scalingKey_0_38_0.time, moreOrLessEquals(0.0333329998));
      expect(scalingKey_0_38_0.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_38_1 = channel_0_38.scalingKeys.elementAt(1);
      expect(scalingKey_0_38_1.time, moreOrLessEquals(3.01666665));
      expect(scalingKey_0_38_1.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_38_2 = channel_0_38.scalingKeys.elementAt(2);
      expect(scalingKey_0_38_2.time, moreOrLessEquals(6));
      expect(scalingKey_0_38_2.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_38_3 = channel_0_38.scalingKeys.elementAt(3);
      expect(scalingKey_0_38_3.time, moreOrLessEquals(8.98333359));
      expect(scalingKey_0_38_3.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_38_4 = channel_0_38.scalingKeys.elementAt(4);
      expect(scalingKey_0_38_4.time, moreOrLessEquals(11.9666672));
      expect(scalingKey_0_38_4.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      expect(channel_0_38.preState, equals(AnimBehavior.defaults));
      expect(channel_0_38.postState, equals(AnimBehavior.defaults));
      final  channel_0_39 = animation_0.channels.elementAt(39);
      expect(channel_0_39.positionKeys.length, equals(5));
      final positionKey_0_39_0 = channel_0_39.positionKeys.elementAt(0);
      expect(positionKey_0_39_0.time, moreOrLessEquals(0.0333329998));
      expect(positionKey_0_39_0.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_39_1 = channel_0_39.positionKeys.elementAt(1);
      expect(positionKey_0_39_1.time, moreOrLessEquals(3.01666665));
      expect(positionKey_0_39_1.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_39_2 = channel_0_39.positionKeys.elementAt(2);
      expect(positionKey_0_39_2.time, moreOrLessEquals(6));
      expect(positionKey_0_39_2.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_39_3 = channel_0_39.positionKeys.elementAt(3);
      expect(positionKey_0_39_3.time, moreOrLessEquals(8.98333359));
      expect(positionKey_0_39_3.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_39_4 = channel_0_39.positionKeys.elementAt(4);
      expect(positionKey_0_39_4.time, moreOrLessEquals(11.9666672));
      expect(positionKey_0_39_4.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      expect(channel_0_39.rotationKeys.length, equals(5));
      final rotationKey_0_39_0 = channel_0_39.rotationKeys.elementAt(0);
      expect(rotationKey_0_39_0.time, moreOrLessEquals(0.0333329998));
      expect(rotationKey_0_39_0.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 2.38497613e-08, 2.38497613e-08)));
      final rotationKey_0_39_1 = channel_0_39.rotationKeys.elementAt(1);
      expect(rotationKey_0_39_1.time, moreOrLessEquals(3.01666665));
      expect(rotationKey_0_39_1.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0.707107008, 0.707107008)));
      final rotationKey_0_39_2 = channel_0_39.rotationKeys.elementAt(2);
      expect(rotationKey_0_39_2.time, moreOrLessEquals(6));
      expect(rotationKey_0_39_2.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 1, 1)));
      final rotationKey_0_39_3 = channel_0_39.rotationKeys.elementAt(3);
      expect(rotationKey_0_39_3.time, moreOrLessEquals(8.98333359));
      expect(rotationKey_0_39_3.value, quaternionMoreOrLessEquals(Quaternion(0, 0, -0.707106054, -0.707106054)));
      final rotationKey_0_39_4 = channel_0_39.rotationKeys.elementAt(4);
      expect(rotationKey_0_39_4.time, moreOrLessEquals(11.9666672));
      expect(rotationKey_0_39_4.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 3.49691106e-07, 3.49691106e-07)));
      expect(channel_0_39.scalingKeys.length, equals(5));
      final scalingKey_0_39_0 = channel_0_39.scalingKeys.elementAt(0);
      expect(scalingKey_0_39_0.time, moreOrLessEquals(0.0333329998));
      expect(scalingKey_0_39_0.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_39_1 = channel_0_39.scalingKeys.elementAt(1);
      expect(scalingKey_0_39_1.time, moreOrLessEquals(3.01666665));
      expect(scalingKey_0_39_1.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_39_2 = channel_0_39.scalingKeys.elementAt(2);
      expect(scalingKey_0_39_2.time, moreOrLessEquals(6));
      expect(scalingKey_0_39_2.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_39_3 = channel_0_39.scalingKeys.elementAt(3);
      expect(scalingKey_0_39_3.time, moreOrLessEquals(8.98333359));
      expect(scalingKey_0_39_3.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_39_4 = channel_0_39.scalingKeys.elementAt(4);
      expect(scalingKey_0_39_4.time, moreOrLessEquals(11.9666672));
      expect(scalingKey_0_39_4.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      expect(channel_0_39.preState, equals(AnimBehavior.defaults));
      expect(channel_0_39.postState, equals(AnimBehavior.defaults));
      final  channel_0_40 = animation_0.channels.elementAt(40);
      expect(channel_0_40.positionKeys.length, equals(5));
      final positionKey_0_40_0 = channel_0_40.positionKeys.elementAt(0);
      expect(positionKey_0_40_0.time, moreOrLessEquals(0.0333329998));
      expect(positionKey_0_40_0.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_40_1 = channel_0_40.positionKeys.elementAt(1);
      expect(positionKey_0_40_1.time, moreOrLessEquals(3.01666665));
      expect(positionKey_0_40_1.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_40_2 = channel_0_40.positionKeys.elementAt(2);
      expect(positionKey_0_40_2.time, moreOrLessEquals(6));
      expect(positionKey_0_40_2.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_40_3 = channel_0_40.positionKeys.elementAt(3);
      expect(positionKey_0_40_3.time, moreOrLessEquals(8.98333359));
      expect(positionKey_0_40_3.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_40_4 = channel_0_40.positionKeys.elementAt(4);
      expect(positionKey_0_40_4.time, moreOrLessEquals(11.9666672));
      expect(positionKey_0_40_4.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      expect(channel_0_40.rotationKeys.length, equals(5));
      final rotationKey_0_40_0 = channel_0_40.rotationKeys.elementAt(0);
      expect(rotationKey_0_40_0.time, moreOrLessEquals(0.0333329998));
      expect(rotationKey_0_40_0.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 2.38497613e-08, 2.38497613e-08)));
      final rotationKey_0_40_1 = channel_0_40.rotationKeys.elementAt(1);
      expect(rotationKey_0_40_1.time, moreOrLessEquals(3.01666665));
      expect(rotationKey_0_40_1.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0.707107008, 0.707107008)));
      final rotationKey_0_40_2 = channel_0_40.rotationKeys.elementAt(2);
      expect(rotationKey_0_40_2.time, moreOrLessEquals(6));
      expect(rotationKey_0_40_2.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 1, 1)));
      final rotationKey_0_40_3 = channel_0_40.rotationKeys.elementAt(3);
      expect(rotationKey_0_40_3.time, moreOrLessEquals(8.98333359));
      expect(rotationKey_0_40_3.value, quaternionMoreOrLessEquals(Quaternion(0, 0, -0.707106054, -0.707106054)));
      final rotationKey_0_40_4 = channel_0_40.rotationKeys.elementAt(4);
      expect(rotationKey_0_40_4.time, moreOrLessEquals(11.9666672));
      expect(rotationKey_0_40_4.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 3.49691106e-07, 3.49691106e-07)));
      expect(channel_0_40.scalingKeys.length, equals(5));
      final scalingKey_0_40_0 = channel_0_40.scalingKeys.elementAt(0);
      expect(scalingKey_0_40_0.time, moreOrLessEquals(0.0333329998));
      expect(scalingKey_0_40_0.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_40_1 = channel_0_40.scalingKeys.elementAt(1);
      expect(scalingKey_0_40_1.time, moreOrLessEquals(3.01666665));
      expect(scalingKey_0_40_1.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_40_2 = channel_0_40.scalingKeys.elementAt(2);
      expect(scalingKey_0_40_2.time, moreOrLessEquals(6));
      expect(scalingKey_0_40_2.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_40_3 = channel_0_40.scalingKeys.elementAt(3);
      expect(scalingKey_0_40_3.time, moreOrLessEquals(8.98333359));
      expect(scalingKey_0_40_3.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_40_4 = channel_0_40.scalingKeys.elementAt(4);
      expect(scalingKey_0_40_4.time, moreOrLessEquals(11.9666672));
      expect(scalingKey_0_40_4.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      expect(channel_0_40.preState, equals(AnimBehavior.defaults));
      expect(channel_0_40.postState, equals(AnimBehavior.defaults));
      final  channel_0_41 = animation_0.channels.elementAt(41);
      expect(channel_0_41.positionKeys.length, equals(5));
      final positionKey_0_41_0 = channel_0_41.positionKeys.elementAt(0);
      expect(positionKey_0_41_0.time, moreOrLessEquals(0.0333329998));
      expect(positionKey_0_41_0.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_41_1 = channel_0_41.positionKeys.elementAt(1);
      expect(positionKey_0_41_1.time, moreOrLessEquals(3.01666665));
      expect(positionKey_0_41_1.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_41_2 = channel_0_41.positionKeys.elementAt(2);
      expect(positionKey_0_41_2.time, moreOrLessEquals(6));
      expect(positionKey_0_41_2.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_41_3 = channel_0_41.positionKeys.elementAt(3);
      expect(positionKey_0_41_3.time, moreOrLessEquals(8.98333359));
      expect(positionKey_0_41_3.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_41_4 = channel_0_41.positionKeys.elementAt(4);
      expect(positionKey_0_41_4.time, moreOrLessEquals(11.9666672));
      expect(positionKey_0_41_4.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      expect(channel_0_41.rotationKeys.length, equals(5));
      final rotationKey_0_41_0 = channel_0_41.rotationKeys.elementAt(0);
      expect(rotationKey_0_41_0.time, moreOrLessEquals(0.0333329998));
      expect(rotationKey_0_41_0.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 2.38497613e-08, 2.38497613e-08)));
      final rotationKey_0_41_1 = channel_0_41.rotationKeys.elementAt(1);
      expect(rotationKey_0_41_1.time, moreOrLessEquals(3.01666665));
      expect(rotationKey_0_41_1.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0.707107008, 0.707107008)));
      final rotationKey_0_41_2 = channel_0_41.rotationKeys.elementAt(2);
      expect(rotationKey_0_41_2.time, moreOrLessEquals(6));
      expect(rotationKey_0_41_2.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 1, 1)));
      final rotationKey_0_41_3 = channel_0_41.rotationKeys.elementAt(3);
      expect(rotationKey_0_41_3.time, moreOrLessEquals(8.98333359));
      expect(rotationKey_0_41_3.value, quaternionMoreOrLessEquals(Quaternion(0, 0, -0.707106054, -0.707106054)));
      final rotationKey_0_41_4 = channel_0_41.rotationKeys.elementAt(4);
      expect(rotationKey_0_41_4.time, moreOrLessEquals(11.9666672));
      expect(rotationKey_0_41_4.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 3.49691106e-07, 3.49691106e-07)));
      expect(channel_0_41.scalingKeys.length, equals(5));
      final scalingKey_0_41_0 = channel_0_41.scalingKeys.elementAt(0);
      expect(scalingKey_0_41_0.time, moreOrLessEquals(0.0333329998));
      expect(scalingKey_0_41_0.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_41_1 = channel_0_41.scalingKeys.elementAt(1);
      expect(scalingKey_0_41_1.time, moreOrLessEquals(3.01666665));
      expect(scalingKey_0_41_1.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_41_2 = channel_0_41.scalingKeys.elementAt(2);
      expect(scalingKey_0_41_2.time, moreOrLessEquals(6));
      expect(scalingKey_0_41_2.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_41_3 = channel_0_41.scalingKeys.elementAt(3);
      expect(scalingKey_0_41_3.time, moreOrLessEquals(8.98333359));
      expect(scalingKey_0_41_3.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_41_4 = channel_0_41.scalingKeys.elementAt(4);
      expect(scalingKey_0_41_4.time, moreOrLessEquals(11.9666672));
      expect(scalingKey_0_41_4.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      expect(channel_0_41.preState, equals(AnimBehavior.defaults));
      expect(channel_0_41.postState, equals(AnimBehavior.defaults));
      final  channel_0_42 = animation_0.channels.elementAt(42);
      expect(channel_0_42.positionKeys.length, equals(5));
      final positionKey_0_42_0 = channel_0_42.positionKeys.elementAt(0);
      expect(positionKey_0_42_0.time, moreOrLessEquals(0.0333329998));
      expect(positionKey_0_42_0.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_42_1 = channel_0_42.positionKeys.elementAt(1);
      expect(positionKey_0_42_1.time, moreOrLessEquals(3.01666665));
      expect(positionKey_0_42_1.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_42_2 = channel_0_42.positionKeys.elementAt(2);
      expect(positionKey_0_42_2.time, moreOrLessEquals(6));
      expect(positionKey_0_42_2.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_42_3 = channel_0_42.positionKeys.elementAt(3);
      expect(positionKey_0_42_3.time, moreOrLessEquals(8.98333359));
      expect(positionKey_0_42_3.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_42_4 = channel_0_42.positionKeys.elementAt(4);
      expect(positionKey_0_42_4.time, moreOrLessEquals(11.9666672));
      expect(positionKey_0_42_4.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      expect(channel_0_42.rotationKeys.length, equals(5));
      final rotationKey_0_42_0 = channel_0_42.rotationKeys.elementAt(0);
      expect(rotationKey_0_42_0.time, moreOrLessEquals(0.0333329998));
      expect(rotationKey_0_42_0.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 2.38497613e-08, 2.38497613e-08)));
      final rotationKey_0_42_1 = channel_0_42.rotationKeys.elementAt(1);
      expect(rotationKey_0_42_1.time, moreOrLessEquals(3.01666665));
      expect(rotationKey_0_42_1.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0.707107008, 0.707107008)));
      final rotationKey_0_42_2 = channel_0_42.rotationKeys.elementAt(2);
      expect(rotationKey_0_42_2.time, moreOrLessEquals(6));
      expect(rotationKey_0_42_2.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 1, 1)));
      final rotationKey_0_42_3 = channel_0_42.rotationKeys.elementAt(3);
      expect(rotationKey_0_42_3.time, moreOrLessEquals(8.98333359));
      expect(rotationKey_0_42_3.value, quaternionMoreOrLessEquals(Quaternion(0, 0, -0.707106054, -0.707106054)));
      final rotationKey_0_42_4 = channel_0_42.rotationKeys.elementAt(4);
      expect(rotationKey_0_42_4.time, moreOrLessEquals(11.9666672));
      expect(rotationKey_0_42_4.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 3.49691106e-07, 3.49691106e-07)));
      expect(channel_0_42.scalingKeys.length, equals(5));
      final scalingKey_0_42_0 = channel_0_42.scalingKeys.elementAt(0);
      expect(scalingKey_0_42_0.time, moreOrLessEquals(0.0333329998));
      expect(scalingKey_0_42_0.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_42_1 = channel_0_42.scalingKeys.elementAt(1);
      expect(scalingKey_0_42_1.time, moreOrLessEquals(3.01666665));
      expect(scalingKey_0_42_1.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_42_2 = channel_0_42.scalingKeys.elementAt(2);
      expect(scalingKey_0_42_2.time, moreOrLessEquals(6));
      expect(scalingKey_0_42_2.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_42_3 = channel_0_42.scalingKeys.elementAt(3);
      expect(scalingKey_0_42_3.time, moreOrLessEquals(8.98333359));
      expect(scalingKey_0_42_3.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_42_4 = channel_0_42.scalingKeys.elementAt(4);
      expect(scalingKey_0_42_4.time, moreOrLessEquals(11.9666672));
      expect(scalingKey_0_42_4.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      expect(channel_0_42.preState, equals(AnimBehavior.defaults));
      expect(channel_0_42.postState, equals(AnimBehavior.defaults));
      final  channel_0_43 = animation_0.channels.elementAt(43);
      expect(channel_0_43.positionKeys.length, equals(5));
      final positionKey_0_43_0 = channel_0_43.positionKeys.elementAt(0);
      expect(positionKey_0_43_0.time, moreOrLessEquals(0.0333329998));
      expect(positionKey_0_43_0.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_43_1 = channel_0_43.positionKeys.elementAt(1);
      expect(positionKey_0_43_1.time, moreOrLessEquals(3.01666665));
      expect(positionKey_0_43_1.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_43_2 = channel_0_43.positionKeys.elementAt(2);
      expect(positionKey_0_43_2.time, moreOrLessEquals(6));
      expect(positionKey_0_43_2.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_43_3 = channel_0_43.positionKeys.elementAt(3);
      expect(positionKey_0_43_3.time, moreOrLessEquals(8.98333359));
      expect(positionKey_0_43_3.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_43_4 = channel_0_43.positionKeys.elementAt(4);
      expect(positionKey_0_43_4.time, moreOrLessEquals(11.9666672));
      expect(positionKey_0_43_4.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      expect(channel_0_43.rotationKeys.length, equals(5));
      final rotationKey_0_43_0 = channel_0_43.rotationKeys.elementAt(0);
      expect(rotationKey_0_43_0.time, moreOrLessEquals(0.0333329998));
      expect(rotationKey_0_43_0.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 2.38497613e-08, 2.38497613e-08)));
      final rotationKey_0_43_1 = channel_0_43.rotationKeys.elementAt(1);
      expect(rotationKey_0_43_1.time, moreOrLessEquals(3.01666665));
      expect(rotationKey_0_43_1.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0.707107008, 0.707107008)));
      final rotationKey_0_43_2 = channel_0_43.rotationKeys.elementAt(2);
      expect(rotationKey_0_43_2.time, moreOrLessEquals(6));
      expect(rotationKey_0_43_2.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 1, 1)));
      final rotationKey_0_43_3 = channel_0_43.rotationKeys.elementAt(3);
      expect(rotationKey_0_43_3.time, moreOrLessEquals(8.98333359));
      expect(rotationKey_0_43_3.value, quaternionMoreOrLessEquals(Quaternion(0, 0, -0.707106054, -0.707106054)));
      final rotationKey_0_43_4 = channel_0_43.rotationKeys.elementAt(4);
      expect(rotationKey_0_43_4.time, moreOrLessEquals(11.9666672));
      expect(rotationKey_0_43_4.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 3.49691106e-07, 3.49691106e-07)));
      expect(channel_0_43.scalingKeys.length, equals(5));
      final scalingKey_0_43_0 = channel_0_43.scalingKeys.elementAt(0);
      expect(scalingKey_0_43_0.time, moreOrLessEquals(0.0333329998));
      expect(scalingKey_0_43_0.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_43_1 = channel_0_43.scalingKeys.elementAt(1);
      expect(scalingKey_0_43_1.time, moreOrLessEquals(3.01666665));
      expect(scalingKey_0_43_1.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_43_2 = channel_0_43.scalingKeys.elementAt(2);
      expect(scalingKey_0_43_2.time, moreOrLessEquals(6));
      expect(scalingKey_0_43_2.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_43_3 = channel_0_43.scalingKeys.elementAt(3);
      expect(scalingKey_0_43_3.time, moreOrLessEquals(8.98333359));
      expect(scalingKey_0_43_3.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_43_4 = channel_0_43.scalingKeys.elementAt(4);
      expect(scalingKey_0_43_4.time, moreOrLessEquals(11.9666672));
      expect(scalingKey_0_43_4.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      expect(channel_0_43.preState, equals(AnimBehavior.defaults));
      expect(channel_0_43.postState, equals(AnimBehavior.defaults));
      final  channel_0_44 = animation_0.channels.elementAt(44);
      expect(channel_0_44.positionKeys.length, equals(5));
      final positionKey_0_44_0 = channel_0_44.positionKeys.elementAt(0);
      expect(positionKey_0_44_0.time, moreOrLessEquals(0.0333329998));
      expect(positionKey_0_44_0.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_44_1 = channel_0_44.positionKeys.elementAt(1);
      expect(positionKey_0_44_1.time, moreOrLessEquals(3.01666665));
      expect(positionKey_0_44_1.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_44_2 = channel_0_44.positionKeys.elementAt(2);
      expect(positionKey_0_44_2.time, moreOrLessEquals(6));
      expect(positionKey_0_44_2.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_44_3 = channel_0_44.positionKeys.elementAt(3);
      expect(positionKey_0_44_3.time, moreOrLessEquals(8.98333359));
      expect(positionKey_0_44_3.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_44_4 = channel_0_44.positionKeys.elementAt(4);
      expect(positionKey_0_44_4.time, moreOrLessEquals(11.9666672));
      expect(positionKey_0_44_4.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      expect(channel_0_44.rotationKeys.length, equals(5));
      final rotationKey_0_44_0 = channel_0_44.rotationKeys.elementAt(0);
      expect(rotationKey_0_44_0.time, moreOrLessEquals(0.0333329998));
      expect(rotationKey_0_44_0.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 2.38497613e-08, 2.38497613e-08)));
      final rotationKey_0_44_1 = channel_0_44.rotationKeys.elementAt(1);
      expect(rotationKey_0_44_1.time, moreOrLessEquals(3.01666665));
      expect(rotationKey_0_44_1.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0.707107008, 0.707107008)));
      final rotationKey_0_44_2 = channel_0_44.rotationKeys.elementAt(2);
      expect(rotationKey_0_44_2.time, moreOrLessEquals(6));
      expect(rotationKey_0_44_2.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 1, 1)));
      final rotationKey_0_44_3 = channel_0_44.rotationKeys.elementAt(3);
      expect(rotationKey_0_44_3.time, moreOrLessEquals(8.98333359));
      expect(rotationKey_0_44_3.value, quaternionMoreOrLessEquals(Quaternion(0, 0, -0.707106054, -0.707106054)));
      final rotationKey_0_44_4 = channel_0_44.rotationKeys.elementAt(4);
      expect(rotationKey_0_44_4.time, moreOrLessEquals(11.9666672));
      expect(rotationKey_0_44_4.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 3.49691106e-07, 3.49691106e-07)));
      expect(channel_0_44.scalingKeys.length, equals(5));
      final scalingKey_0_44_0 = channel_0_44.scalingKeys.elementAt(0);
      expect(scalingKey_0_44_0.time, moreOrLessEquals(0.0333329998));
      expect(scalingKey_0_44_0.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_44_1 = channel_0_44.scalingKeys.elementAt(1);
      expect(scalingKey_0_44_1.time, moreOrLessEquals(3.01666665));
      expect(scalingKey_0_44_1.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_44_2 = channel_0_44.scalingKeys.elementAt(2);
      expect(scalingKey_0_44_2.time, moreOrLessEquals(6));
      expect(scalingKey_0_44_2.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_44_3 = channel_0_44.scalingKeys.elementAt(3);
      expect(scalingKey_0_44_3.time, moreOrLessEquals(8.98333359));
      expect(scalingKey_0_44_3.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_44_4 = channel_0_44.scalingKeys.elementAt(4);
      expect(scalingKey_0_44_4.time, moreOrLessEquals(11.9666672));
      expect(scalingKey_0_44_4.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      expect(channel_0_44.preState, equals(AnimBehavior.defaults));
      expect(channel_0_44.postState, equals(AnimBehavior.defaults));
      final  channel_0_45 = animation_0.channels.elementAt(45);
      expect(channel_0_45.positionKeys.length, equals(5));
      final positionKey_0_45_0 = channel_0_45.positionKeys.elementAt(0);
      expect(positionKey_0_45_0.time, moreOrLessEquals(0.0333329998));
      expect(positionKey_0_45_0.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_45_1 = channel_0_45.positionKeys.elementAt(1);
      expect(positionKey_0_45_1.time, moreOrLessEquals(3.01666665));
      expect(positionKey_0_45_1.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_45_2 = channel_0_45.positionKeys.elementAt(2);
      expect(positionKey_0_45_2.time, moreOrLessEquals(6));
      expect(positionKey_0_45_2.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_45_3 = channel_0_45.positionKeys.elementAt(3);
      expect(positionKey_0_45_3.time, moreOrLessEquals(8.98333359));
      expect(positionKey_0_45_3.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_45_4 = channel_0_45.positionKeys.elementAt(4);
      expect(positionKey_0_45_4.time, moreOrLessEquals(11.9666672));
      expect(positionKey_0_45_4.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      expect(channel_0_45.rotationKeys.length, equals(5));
      final rotationKey_0_45_0 = channel_0_45.rotationKeys.elementAt(0);
      expect(rotationKey_0_45_0.time, moreOrLessEquals(0.0333329998));
      expect(rotationKey_0_45_0.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 2.38497613e-08, 2.38497613e-08)));
      final rotationKey_0_45_1 = channel_0_45.rotationKeys.elementAt(1);
      expect(rotationKey_0_45_1.time, moreOrLessEquals(3.01666665));
      expect(rotationKey_0_45_1.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0.707107008, 0.707107008)));
      final rotationKey_0_45_2 = channel_0_45.rotationKeys.elementAt(2);
      expect(rotationKey_0_45_2.time, moreOrLessEquals(6));
      expect(rotationKey_0_45_2.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 1, 1)));
      final rotationKey_0_45_3 = channel_0_45.rotationKeys.elementAt(3);
      expect(rotationKey_0_45_3.time, moreOrLessEquals(8.98333359));
      expect(rotationKey_0_45_3.value, quaternionMoreOrLessEquals(Quaternion(0, 0, -0.707106054, -0.707106054)));
      final rotationKey_0_45_4 = channel_0_45.rotationKeys.elementAt(4);
      expect(rotationKey_0_45_4.time, moreOrLessEquals(11.9666672));
      expect(rotationKey_0_45_4.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 3.49691106e-07, 3.49691106e-07)));
      expect(channel_0_45.scalingKeys.length, equals(5));
      final scalingKey_0_45_0 = channel_0_45.scalingKeys.elementAt(0);
      expect(scalingKey_0_45_0.time, moreOrLessEquals(0.0333329998));
      expect(scalingKey_0_45_0.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_45_1 = channel_0_45.scalingKeys.elementAt(1);
      expect(scalingKey_0_45_1.time, moreOrLessEquals(3.01666665));
      expect(scalingKey_0_45_1.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_45_2 = channel_0_45.scalingKeys.elementAt(2);
      expect(scalingKey_0_45_2.time, moreOrLessEquals(6));
      expect(scalingKey_0_45_2.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_45_3 = channel_0_45.scalingKeys.elementAt(3);
      expect(scalingKey_0_45_3.time, moreOrLessEquals(8.98333359));
      expect(scalingKey_0_45_3.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_45_4 = channel_0_45.scalingKeys.elementAt(4);
      expect(scalingKey_0_45_4.time, moreOrLessEquals(11.9666672));
      expect(scalingKey_0_45_4.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      expect(channel_0_45.preState, equals(AnimBehavior.defaults));
      expect(channel_0_45.postState, equals(AnimBehavior.defaults));
      final  channel_0_46 = animation_0.channels.elementAt(46);
      expect(channel_0_46.positionKeys.length, equals(5));
      final positionKey_0_46_0 = channel_0_46.positionKeys.elementAt(0);
      expect(positionKey_0_46_0.time, moreOrLessEquals(0.0333329998));
      expect(positionKey_0_46_0.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_46_1 = channel_0_46.positionKeys.elementAt(1);
      expect(positionKey_0_46_1.time, moreOrLessEquals(3.01666665));
      expect(positionKey_0_46_1.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_46_2 = channel_0_46.positionKeys.elementAt(2);
      expect(positionKey_0_46_2.time, moreOrLessEquals(6));
      expect(positionKey_0_46_2.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_46_3 = channel_0_46.positionKeys.elementAt(3);
      expect(positionKey_0_46_3.time, moreOrLessEquals(8.98333359));
      expect(positionKey_0_46_3.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_46_4 = channel_0_46.positionKeys.elementAt(4);
      expect(positionKey_0_46_4.time, moreOrLessEquals(11.9666672));
      expect(positionKey_0_46_4.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      expect(channel_0_46.rotationKeys.length, equals(5));
      final rotationKey_0_46_0 = channel_0_46.rotationKeys.elementAt(0);
      expect(rotationKey_0_46_0.time, moreOrLessEquals(0.0333329998));
      expect(rotationKey_0_46_0.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 2.38497613e-08, 2.38497613e-08)));
      final rotationKey_0_46_1 = channel_0_46.rotationKeys.elementAt(1);
      expect(rotationKey_0_46_1.time, moreOrLessEquals(3.01666665));
      expect(rotationKey_0_46_1.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0.707107008, 0.707107008)));
      final rotationKey_0_46_2 = channel_0_46.rotationKeys.elementAt(2);
      expect(rotationKey_0_46_2.time, moreOrLessEquals(6));
      expect(rotationKey_0_46_2.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 1, 1)));
      final rotationKey_0_46_3 = channel_0_46.rotationKeys.elementAt(3);
      expect(rotationKey_0_46_3.time, moreOrLessEquals(8.98333359));
      expect(rotationKey_0_46_3.value, quaternionMoreOrLessEquals(Quaternion(0, 0, -0.707106054, -0.707106054)));
      final rotationKey_0_46_4 = channel_0_46.rotationKeys.elementAt(4);
      expect(rotationKey_0_46_4.time, moreOrLessEquals(11.9666672));
      expect(rotationKey_0_46_4.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 3.49691106e-07, 3.49691106e-07)));
      expect(channel_0_46.scalingKeys.length, equals(5));
      final scalingKey_0_46_0 = channel_0_46.scalingKeys.elementAt(0);
      expect(scalingKey_0_46_0.time, moreOrLessEquals(0.0333329998));
      expect(scalingKey_0_46_0.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_46_1 = channel_0_46.scalingKeys.elementAt(1);
      expect(scalingKey_0_46_1.time, moreOrLessEquals(3.01666665));
      expect(scalingKey_0_46_1.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_46_2 = channel_0_46.scalingKeys.elementAt(2);
      expect(scalingKey_0_46_2.time, moreOrLessEquals(6));
      expect(scalingKey_0_46_2.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_46_3 = channel_0_46.scalingKeys.elementAt(3);
      expect(scalingKey_0_46_3.time, moreOrLessEquals(8.98333359));
      expect(scalingKey_0_46_3.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_46_4 = channel_0_46.scalingKeys.elementAt(4);
      expect(scalingKey_0_46_4.time, moreOrLessEquals(11.9666672));
      expect(scalingKey_0_46_4.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      expect(channel_0_46.preState, equals(AnimBehavior.defaults));
      expect(channel_0_46.postState, equals(AnimBehavior.defaults));
      final  channel_0_47 = animation_0.channels.elementAt(47);
      expect(channel_0_47.positionKeys.length, equals(5));
      final positionKey_0_47_0 = channel_0_47.positionKeys.elementAt(0);
      expect(positionKey_0_47_0.time, moreOrLessEquals(0.0333329998));
      expect(positionKey_0_47_0.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_47_1 = channel_0_47.positionKeys.elementAt(1);
      expect(positionKey_0_47_1.time, moreOrLessEquals(3.01666665));
      expect(positionKey_0_47_1.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_47_2 = channel_0_47.positionKeys.elementAt(2);
      expect(positionKey_0_47_2.time, moreOrLessEquals(6));
      expect(positionKey_0_47_2.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_47_3 = channel_0_47.positionKeys.elementAt(3);
      expect(positionKey_0_47_3.time, moreOrLessEquals(8.98333359));
      expect(positionKey_0_47_3.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_47_4 = channel_0_47.positionKeys.elementAt(4);
      expect(positionKey_0_47_4.time, moreOrLessEquals(11.9666672));
      expect(positionKey_0_47_4.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      expect(channel_0_47.rotationKeys.length, equals(5));
      final rotationKey_0_47_0 = channel_0_47.rotationKeys.elementAt(0);
      expect(rotationKey_0_47_0.time, moreOrLessEquals(0.0333329998));
      expect(rotationKey_0_47_0.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 2.38497613e-08, 2.38497613e-08)));
      final rotationKey_0_47_1 = channel_0_47.rotationKeys.elementAt(1);
      expect(rotationKey_0_47_1.time, moreOrLessEquals(3.01666665));
      expect(rotationKey_0_47_1.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0.707107008, 0.707107008)));
      final rotationKey_0_47_2 = channel_0_47.rotationKeys.elementAt(2);
      expect(rotationKey_0_47_2.time, moreOrLessEquals(6));
      expect(rotationKey_0_47_2.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 1, 1)));
      final rotationKey_0_47_3 = channel_0_47.rotationKeys.elementAt(3);
      expect(rotationKey_0_47_3.time, moreOrLessEquals(8.98333359));
      expect(rotationKey_0_47_3.value, quaternionMoreOrLessEquals(Quaternion(0, 0, -0.707106054, -0.707106054)));
      final rotationKey_0_47_4 = channel_0_47.rotationKeys.elementAt(4);
      expect(rotationKey_0_47_4.time, moreOrLessEquals(11.9666672));
      expect(rotationKey_0_47_4.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 3.49691106e-07, 3.49691106e-07)));
      expect(channel_0_47.scalingKeys.length, equals(5));
      final scalingKey_0_47_0 = channel_0_47.scalingKeys.elementAt(0);
      expect(scalingKey_0_47_0.time, moreOrLessEquals(0.0333329998));
      expect(scalingKey_0_47_0.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_47_1 = channel_0_47.scalingKeys.elementAt(1);
      expect(scalingKey_0_47_1.time, moreOrLessEquals(3.01666665));
      expect(scalingKey_0_47_1.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_47_2 = channel_0_47.scalingKeys.elementAt(2);
      expect(scalingKey_0_47_2.time, moreOrLessEquals(6));
      expect(scalingKey_0_47_2.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_47_3 = channel_0_47.scalingKeys.elementAt(3);
      expect(scalingKey_0_47_3.time, moreOrLessEquals(8.98333359));
      expect(scalingKey_0_47_3.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_47_4 = channel_0_47.scalingKeys.elementAt(4);
      expect(scalingKey_0_47_4.time, moreOrLessEquals(11.9666672));
      expect(scalingKey_0_47_4.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      expect(channel_0_47.preState, equals(AnimBehavior.defaults));
      expect(channel_0_47.postState, equals(AnimBehavior.defaults));
      final  channel_0_48 = animation_0.channels.elementAt(48);
      expect(channel_0_48.positionKeys.length, equals(5));
      final positionKey_0_48_0 = channel_0_48.positionKeys.elementAt(0);
      expect(positionKey_0_48_0.time, moreOrLessEquals(0.0333329998));
      expect(positionKey_0_48_0.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_48_1 = channel_0_48.positionKeys.elementAt(1);
      expect(positionKey_0_48_1.time, moreOrLessEquals(3.01666665));
      expect(positionKey_0_48_1.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_48_2 = channel_0_48.positionKeys.elementAt(2);
      expect(positionKey_0_48_2.time, moreOrLessEquals(6));
      expect(positionKey_0_48_2.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_48_3 = channel_0_48.positionKeys.elementAt(3);
      expect(positionKey_0_48_3.time, moreOrLessEquals(8.98333359));
      expect(positionKey_0_48_3.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_48_4 = channel_0_48.positionKeys.elementAt(4);
      expect(positionKey_0_48_4.time, moreOrLessEquals(11.9666672));
      expect(positionKey_0_48_4.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      expect(channel_0_48.rotationKeys.length, equals(5));
      final rotationKey_0_48_0 = channel_0_48.rotationKeys.elementAt(0);
      expect(rotationKey_0_48_0.time, moreOrLessEquals(0.0333329998));
      expect(rotationKey_0_48_0.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 2.38497613e-08, 2.38497613e-08)));
      final rotationKey_0_48_1 = channel_0_48.rotationKeys.elementAt(1);
      expect(rotationKey_0_48_1.time, moreOrLessEquals(3.01666665));
      expect(rotationKey_0_48_1.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0.707107008, 0.707107008)));
      final rotationKey_0_48_2 = channel_0_48.rotationKeys.elementAt(2);
      expect(rotationKey_0_48_2.time, moreOrLessEquals(6));
      expect(rotationKey_0_48_2.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 1, 1)));
      final rotationKey_0_48_3 = channel_0_48.rotationKeys.elementAt(3);
      expect(rotationKey_0_48_3.time, moreOrLessEquals(8.98333359));
      expect(rotationKey_0_48_3.value, quaternionMoreOrLessEquals(Quaternion(0, 0, -0.707106054, -0.707106054)));
      final rotationKey_0_48_4 = channel_0_48.rotationKeys.elementAt(4);
      expect(rotationKey_0_48_4.time, moreOrLessEquals(11.9666672));
      expect(rotationKey_0_48_4.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 3.49691106e-07, 3.49691106e-07)));
      expect(channel_0_48.scalingKeys.length, equals(5));
      final scalingKey_0_48_0 = channel_0_48.scalingKeys.elementAt(0);
      expect(scalingKey_0_48_0.time, moreOrLessEquals(0.0333329998));
      expect(scalingKey_0_48_0.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_48_1 = channel_0_48.scalingKeys.elementAt(1);
      expect(scalingKey_0_48_1.time, moreOrLessEquals(3.01666665));
      expect(scalingKey_0_48_1.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_48_2 = channel_0_48.scalingKeys.elementAt(2);
      expect(scalingKey_0_48_2.time, moreOrLessEquals(6));
      expect(scalingKey_0_48_2.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_48_3 = channel_0_48.scalingKeys.elementAt(3);
      expect(scalingKey_0_48_3.time, moreOrLessEquals(8.98333359));
      expect(scalingKey_0_48_3.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_48_4 = channel_0_48.scalingKeys.elementAt(4);
      expect(scalingKey_0_48_4.time, moreOrLessEquals(11.9666672));
      expect(scalingKey_0_48_4.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      expect(channel_0_48.preState, equals(AnimBehavior.defaults));
      expect(channel_0_48.postState, equals(AnimBehavior.defaults));
      final  channel_0_49 = animation_0.channels.elementAt(49);
      expect(channel_0_49.positionKeys.length, equals(5));
      final positionKey_0_49_0 = channel_0_49.positionKeys.elementAt(0);
      expect(positionKey_0_49_0.time, moreOrLessEquals(0.0333329998));
      expect(positionKey_0_49_0.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_49_1 = channel_0_49.positionKeys.elementAt(1);
      expect(positionKey_0_49_1.time, moreOrLessEquals(3.01666665));
      expect(positionKey_0_49_1.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_49_2 = channel_0_49.positionKeys.elementAt(2);
      expect(positionKey_0_49_2.time, moreOrLessEquals(6));
      expect(positionKey_0_49_2.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_49_3 = channel_0_49.positionKeys.elementAt(3);
      expect(positionKey_0_49_3.time, moreOrLessEquals(8.98333359));
      expect(positionKey_0_49_3.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_49_4 = channel_0_49.positionKeys.elementAt(4);
      expect(positionKey_0_49_4.time, moreOrLessEquals(11.9666672));
      expect(positionKey_0_49_4.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      expect(channel_0_49.rotationKeys.length, equals(5));
      final rotationKey_0_49_0 = channel_0_49.rotationKeys.elementAt(0);
      expect(rotationKey_0_49_0.time, moreOrLessEquals(0.0333329998));
      expect(rotationKey_0_49_0.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 2.38497613e-08, 2.38497613e-08)));
      final rotationKey_0_49_1 = channel_0_49.rotationKeys.elementAt(1);
      expect(rotationKey_0_49_1.time, moreOrLessEquals(3.01666665));
      expect(rotationKey_0_49_1.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0.707107008, 0.707107008)));
      final rotationKey_0_49_2 = channel_0_49.rotationKeys.elementAt(2);
      expect(rotationKey_0_49_2.time, moreOrLessEquals(6));
      expect(rotationKey_0_49_2.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 1, 1)));
      final rotationKey_0_49_3 = channel_0_49.rotationKeys.elementAt(3);
      expect(rotationKey_0_49_3.time, moreOrLessEquals(8.98333359));
      expect(rotationKey_0_49_3.value, quaternionMoreOrLessEquals(Quaternion(0, 0, -0.707106054, -0.707106054)));
      final rotationKey_0_49_4 = channel_0_49.rotationKeys.elementAt(4);
      expect(rotationKey_0_49_4.time, moreOrLessEquals(11.9666672));
      expect(rotationKey_0_49_4.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 3.49691106e-07, 3.49691106e-07)));
      expect(channel_0_49.scalingKeys.length, equals(5));
      final scalingKey_0_49_0 = channel_0_49.scalingKeys.elementAt(0);
      expect(scalingKey_0_49_0.time, moreOrLessEquals(0.0333329998));
      expect(scalingKey_0_49_0.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_49_1 = channel_0_49.scalingKeys.elementAt(1);
      expect(scalingKey_0_49_1.time, moreOrLessEquals(3.01666665));
      expect(scalingKey_0_49_1.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_49_2 = channel_0_49.scalingKeys.elementAt(2);
      expect(scalingKey_0_49_2.time, moreOrLessEquals(6));
      expect(scalingKey_0_49_2.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_49_3 = channel_0_49.scalingKeys.elementAt(3);
      expect(scalingKey_0_49_3.time, moreOrLessEquals(8.98333359));
      expect(scalingKey_0_49_3.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_49_4 = channel_0_49.scalingKeys.elementAt(4);
      expect(scalingKey_0_49_4.time, moreOrLessEquals(11.9666672));
      expect(scalingKey_0_49_4.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      expect(channel_0_49.preState, equals(AnimBehavior.defaults));
      expect(channel_0_49.postState, equals(AnimBehavior.defaults));
      final  channel_0_50 = animation_0.channels.elementAt(50);
      expect(channel_0_50.positionKeys.length, equals(5));
      final positionKey_0_50_0 = channel_0_50.positionKeys.elementAt(0);
      expect(positionKey_0_50_0.time, moreOrLessEquals(0.0333329998));
      expect(positionKey_0_50_0.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_50_1 = channel_0_50.positionKeys.elementAt(1);
      expect(positionKey_0_50_1.time, moreOrLessEquals(3.01666665));
      expect(positionKey_0_50_1.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_50_2 = channel_0_50.positionKeys.elementAt(2);
      expect(positionKey_0_50_2.time, moreOrLessEquals(6));
      expect(positionKey_0_50_2.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_50_3 = channel_0_50.positionKeys.elementAt(3);
      expect(positionKey_0_50_3.time, moreOrLessEquals(8.98333359));
      expect(positionKey_0_50_3.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_50_4 = channel_0_50.positionKeys.elementAt(4);
      expect(positionKey_0_50_4.time, moreOrLessEquals(11.9666672));
      expect(positionKey_0_50_4.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      expect(channel_0_50.rotationKeys.length, equals(5));
      final rotationKey_0_50_0 = channel_0_50.rotationKeys.elementAt(0);
      expect(rotationKey_0_50_0.time, moreOrLessEquals(0.0333329998));
      expect(rotationKey_0_50_0.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 2.38497613e-08, 2.38497613e-08)));
      final rotationKey_0_50_1 = channel_0_50.rotationKeys.elementAt(1);
      expect(rotationKey_0_50_1.time, moreOrLessEquals(3.01666665));
      expect(rotationKey_0_50_1.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0.707107008, 0.707107008)));
      final rotationKey_0_50_2 = channel_0_50.rotationKeys.elementAt(2);
      expect(rotationKey_0_50_2.time, moreOrLessEquals(6));
      expect(rotationKey_0_50_2.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 1, 1)));
      final rotationKey_0_50_3 = channel_0_50.rotationKeys.elementAt(3);
      expect(rotationKey_0_50_3.time, moreOrLessEquals(8.98333359));
      expect(rotationKey_0_50_3.value, quaternionMoreOrLessEquals(Quaternion(0, 0, -0.707106054, -0.707106054)));
      final rotationKey_0_50_4 = channel_0_50.rotationKeys.elementAt(4);
      expect(rotationKey_0_50_4.time, moreOrLessEquals(11.9666672));
      expect(rotationKey_0_50_4.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 3.49691106e-07, 3.49691106e-07)));
      expect(channel_0_50.scalingKeys.length, equals(5));
      final scalingKey_0_50_0 = channel_0_50.scalingKeys.elementAt(0);
      expect(scalingKey_0_50_0.time, moreOrLessEquals(0.0333329998));
      expect(scalingKey_0_50_0.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_50_1 = channel_0_50.scalingKeys.elementAt(1);
      expect(scalingKey_0_50_1.time, moreOrLessEquals(3.01666665));
      expect(scalingKey_0_50_1.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_50_2 = channel_0_50.scalingKeys.elementAt(2);
      expect(scalingKey_0_50_2.time, moreOrLessEquals(6));
      expect(scalingKey_0_50_2.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_50_3 = channel_0_50.scalingKeys.elementAt(3);
      expect(scalingKey_0_50_3.time, moreOrLessEquals(8.98333359));
      expect(scalingKey_0_50_3.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_50_4 = channel_0_50.scalingKeys.elementAt(4);
      expect(scalingKey_0_50_4.time, moreOrLessEquals(11.9666672));
      expect(scalingKey_0_50_4.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      expect(channel_0_50.preState, equals(AnimBehavior.defaults));
      expect(channel_0_50.postState, equals(AnimBehavior.defaults));
      final  channel_0_51 = animation_0.channels.elementAt(51);
      expect(channel_0_51.positionKeys.length, equals(5));
      final positionKey_0_51_0 = channel_0_51.positionKeys.elementAt(0);
      expect(positionKey_0_51_0.time, moreOrLessEquals(0.0333329998));
      expect(positionKey_0_51_0.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_51_1 = channel_0_51.positionKeys.elementAt(1);
      expect(positionKey_0_51_1.time, moreOrLessEquals(3.01666665));
      expect(positionKey_0_51_1.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_51_2 = channel_0_51.positionKeys.elementAt(2);
      expect(positionKey_0_51_2.time, moreOrLessEquals(6));
      expect(positionKey_0_51_2.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_51_3 = channel_0_51.positionKeys.elementAt(3);
      expect(positionKey_0_51_3.time, moreOrLessEquals(8.98333359));
      expect(positionKey_0_51_3.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_51_4 = channel_0_51.positionKeys.elementAt(4);
      expect(positionKey_0_51_4.time, moreOrLessEquals(11.9666672));
      expect(positionKey_0_51_4.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      expect(channel_0_51.rotationKeys.length, equals(5));
      final rotationKey_0_51_0 = channel_0_51.rotationKeys.elementAt(0);
      expect(rotationKey_0_51_0.time, moreOrLessEquals(0.0333329998));
      expect(rotationKey_0_51_0.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 2.38497613e-08, 2.38497613e-08)));
      final rotationKey_0_51_1 = channel_0_51.rotationKeys.elementAt(1);
      expect(rotationKey_0_51_1.time, moreOrLessEquals(3.01666665));
      expect(rotationKey_0_51_1.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0.707107008, 0.707107008)));
      final rotationKey_0_51_2 = channel_0_51.rotationKeys.elementAt(2);
      expect(rotationKey_0_51_2.time, moreOrLessEquals(6));
      expect(rotationKey_0_51_2.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 1, 1)));
      final rotationKey_0_51_3 = channel_0_51.rotationKeys.elementAt(3);
      expect(rotationKey_0_51_3.time, moreOrLessEquals(8.98333359));
      expect(rotationKey_0_51_3.value, quaternionMoreOrLessEquals(Quaternion(0, 0, -0.707106054, -0.707106054)));
      final rotationKey_0_51_4 = channel_0_51.rotationKeys.elementAt(4);
      expect(rotationKey_0_51_4.time, moreOrLessEquals(11.9666672));
      expect(rotationKey_0_51_4.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 3.49691106e-07, 3.49691106e-07)));
      expect(channel_0_51.scalingKeys.length, equals(5));
      final scalingKey_0_51_0 = channel_0_51.scalingKeys.elementAt(0);
      expect(scalingKey_0_51_0.time, moreOrLessEquals(0.0333329998));
      expect(scalingKey_0_51_0.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_51_1 = channel_0_51.scalingKeys.elementAt(1);
      expect(scalingKey_0_51_1.time, moreOrLessEquals(3.01666665));
      expect(scalingKey_0_51_1.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_51_2 = channel_0_51.scalingKeys.elementAt(2);
      expect(scalingKey_0_51_2.time, moreOrLessEquals(6));
      expect(scalingKey_0_51_2.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_51_3 = channel_0_51.scalingKeys.elementAt(3);
      expect(scalingKey_0_51_3.time, moreOrLessEquals(8.98333359));
      expect(scalingKey_0_51_3.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_51_4 = channel_0_51.scalingKeys.elementAt(4);
      expect(scalingKey_0_51_4.time, moreOrLessEquals(11.9666672));
      expect(scalingKey_0_51_4.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      expect(channel_0_51.preState, equals(AnimBehavior.defaults));
      expect(channel_0_51.postState, equals(AnimBehavior.defaults));
      final  channel_0_52 = animation_0.channels.elementAt(52);
      expect(channel_0_52.positionKeys.length, equals(5));
      final positionKey_0_52_0 = channel_0_52.positionKeys.elementAt(0);
      expect(positionKey_0_52_0.time, moreOrLessEquals(0.0333329998));
      expect(positionKey_0_52_0.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_52_1 = channel_0_52.positionKeys.elementAt(1);
      expect(positionKey_0_52_1.time, moreOrLessEquals(3.01666665));
      expect(positionKey_0_52_1.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_52_2 = channel_0_52.positionKeys.elementAt(2);
      expect(positionKey_0_52_2.time, moreOrLessEquals(6));
      expect(positionKey_0_52_2.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_52_3 = channel_0_52.positionKeys.elementAt(3);
      expect(positionKey_0_52_3.time, moreOrLessEquals(8.98333359));
      expect(positionKey_0_52_3.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_52_4 = channel_0_52.positionKeys.elementAt(4);
      expect(positionKey_0_52_4.time, moreOrLessEquals(11.9666672));
      expect(positionKey_0_52_4.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      expect(channel_0_52.rotationKeys.length, equals(5));
      final rotationKey_0_52_0 = channel_0_52.rotationKeys.elementAt(0);
      expect(rotationKey_0_52_0.time, moreOrLessEquals(0.0333329998));
      expect(rotationKey_0_52_0.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 2.38497613e-08, 2.38497613e-08)));
      final rotationKey_0_52_1 = channel_0_52.rotationKeys.elementAt(1);
      expect(rotationKey_0_52_1.time, moreOrLessEquals(3.01666665));
      expect(rotationKey_0_52_1.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0.707107008, 0.707107008)));
      final rotationKey_0_52_2 = channel_0_52.rotationKeys.elementAt(2);
      expect(rotationKey_0_52_2.time, moreOrLessEquals(6));
      expect(rotationKey_0_52_2.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 1, 1)));
      final rotationKey_0_52_3 = channel_0_52.rotationKeys.elementAt(3);
      expect(rotationKey_0_52_3.time, moreOrLessEquals(8.98333359));
      expect(rotationKey_0_52_3.value, quaternionMoreOrLessEquals(Quaternion(0, 0, -0.707106054, -0.707106054)));
      final rotationKey_0_52_4 = channel_0_52.rotationKeys.elementAt(4);
      expect(rotationKey_0_52_4.time, moreOrLessEquals(11.9666672));
      expect(rotationKey_0_52_4.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 3.49691106e-07, 3.49691106e-07)));
      expect(channel_0_52.scalingKeys.length, equals(5));
      final scalingKey_0_52_0 = channel_0_52.scalingKeys.elementAt(0);
      expect(scalingKey_0_52_0.time, moreOrLessEquals(0.0333329998));
      expect(scalingKey_0_52_0.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_52_1 = channel_0_52.scalingKeys.elementAt(1);
      expect(scalingKey_0_52_1.time, moreOrLessEquals(3.01666665));
      expect(scalingKey_0_52_1.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_52_2 = channel_0_52.scalingKeys.elementAt(2);
      expect(scalingKey_0_52_2.time, moreOrLessEquals(6));
      expect(scalingKey_0_52_2.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_52_3 = channel_0_52.scalingKeys.elementAt(3);
      expect(scalingKey_0_52_3.time, moreOrLessEquals(8.98333359));
      expect(scalingKey_0_52_3.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_52_4 = channel_0_52.scalingKeys.elementAt(4);
      expect(scalingKey_0_52_4.time, moreOrLessEquals(11.9666672));
      expect(scalingKey_0_52_4.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      expect(channel_0_52.preState, equals(AnimBehavior.defaults));
      expect(channel_0_52.postState, equals(AnimBehavior.defaults));
      final  channel_0_53 = animation_0.channels.elementAt(53);
      expect(channel_0_53.positionKeys.length, equals(5));
      final positionKey_0_53_0 = channel_0_53.positionKeys.elementAt(0);
      expect(positionKey_0_53_0.time, moreOrLessEquals(0.0333329998));
      expect(positionKey_0_53_0.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_53_1 = channel_0_53.positionKeys.elementAt(1);
      expect(positionKey_0_53_1.time, moreOrLessEquals(3.01666665));
      expect(positionKey_0_53_1.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_53_2 = channel_0_53.positionKeys.elementAt(2);
      expect(positionKey_0_53_2.time, moreOrLessEquals(6));
      expect(positionKey_0_53_2.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_53_3 = channel_0_53.positionKeys.elementAt(3);
      expect(positionKey_0_53_3.time, moreOrLessEquals(8.98333359));
      expect(positionKey_0_53_3.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_53_4 = channel_0_53.positionKeys.elementAt(4);
      expect(positionKey_0_53_4.time, moreOrLessEquals(11.9666672));
      expect(positionKey_0_53_4.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      expect(channel_0_53.rotationKeys.length, equals(5));
      final rotationKey_0_53_0 = channel_0_53.rotationKeys.elementAt(0);
      expect(rotationKey_0_53_0.time, moreOrLessEquals(0.0333329998));
      expect(rotationKey_0_53_0.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 2.38497613e-08, 2.38497613e-08)));
      final rotationKey_0_53_1 = channel_0_53.rotationKeys.elementAt(1);
      expect(rotationKey_0_53_1.time, moreOrLessEquals(3.01666665));
      expect(rotationKey_0_53_1.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0.707107008, 0.707107008)));
      final rotationKey_0_53_2 = channel_0_53.rotationKeys.elementAt(2);
      expect(rotationKey_0_53_2.time, moreOrLessEquals(6));
      expect(rotationKey_0_53_2.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 1, 1)));
      final rotationKey_0_53_3 = channel_0_53.rotationKeys.elementAt(3);
      expect(rotationKey_0_53_3.time, moreOrLessEquals(8.98333359));
      expect(rotationKey_0_53_3.value, quaternionMoreOrLessEquals(Quaternion(0, 0, -0.707106054, -0.707106054)));
      final rotationKey_0_53_4 = channel_0_53.rotationKeys.elementAt(4);
      expect(rotationKey_0_53_4.time, moreOrLessEquals(11.9666672));
      expect(rotationKey_0_53_4.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 3.49691106e-07, 3.49691106e-07)));
      expect(channel_0_53.scalingKeys.length, equals(5));
      final scalingKey_0_53_0 = channel_0_53.scalingKeys.elementAt(0);
      expect(scalingKey_0_53_0.time, moreOrLessEquals(0.0333329998));
      expect(scalingKey_0_53_0.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_53_1 = channel_0_53.scalingKeys.elementAt(1);
      expect(scalingKey_0_53_1.time, moreOrLessEquals(3.01666665));
      expect(scalingKey_0_53_1.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_53_2 = channel_0_53.scalingKeys.elementAt(2);
      expect(scalingKey_0_53_2.time, moreOrLessEquals(6));
      expect(scalingKey_0_53_2.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_53_3 = channel_0_53.scalingKeys.elementAt(3);
      expect(scalingKey_0_53_3.time, moreOrLessEquals(8.98333359));
      expect(scalingKey_0_53_3.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_53_4 = channel_0_53.scalingKeys.elementAt(4);
      expect(scalingKey_0_53_4.time, moreOrLessEquals(11.9666672));
      expect(scalingKey_0_53_4.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      expect(channel_0_53.preState, equals(AnimBehavior.defaults));
      expect(channel_0_53.postState, equals(AnimBehavior.defaults));
      final  channel_0_54 = animation_0.channels.elementAt(54);
      expect(channel_0_54.positionKeys.length, equals(5));
      final positionKey_0_54_0 = channel_0_54.positionKeys.elementAt(0);
      expect(positionKey_0_54_0.time, moreOrLessEquals(0.0333329998));
      expect(positionKey_0_54_0.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_54_1 = channel_0_54.positionKeys.elementAt(1);
      expect(positionKey_0_54_1.time, moreOrLessEquals(3.01666665));
      expect(positionKey_0_54_1.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_54_2 = channel_0_54.positionKeys.elementAt(2);
      expect(positionKey_0_54_2.time, moreOrLessEquals(6));
      expect(positionKey_0_54_2.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_54_3 = channel_0_54.positionKeys.elementAt(3);
      expect(positionKey_0_54_3.time, moreOrLessEquals(8.98333359));
      expect(positionKey_0_54_3.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_54_4 = channel_0_54.positionKeys.elementAt(4);
      expect(positionKey_0_54_4.time, moreOrLessEquals(11.9666672));
      expect(positionKey_0_54_4.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      expect(channel_0_54.rotationKeys.length, equals(5));
      final rotationKey_0_54_0 = channel_0_54.rotationKeys.elementAt(0);
      expect(rotationKey_0_54_0.time, moreOrLessEquals(0.0333329998));
      expect(rotationKey_0_54_0.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 2.38497613e-08, 2.38497613e-08)));
      final rotationKey_0_54_1 = channel_0_54.rotationKeys.elementAt(1);
      expect(rotationKey_0_54_1.time, moreOrLessEquals(3.01666665));
      expect(rotationKey_0_54_1.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0.707107008, 0.707107008)));
      final rotationKey_0_54_2 = channel_0_54.rotationKeys.elementAt(2);
      expect(rotationKey_0_54_2.time, moreOrLessEquals(6));
      expect(rotationKey_0_54_2.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 1, 1)));
      final rotationKey_0_54_3 = channel_0_54.rotationKeys.elementAt(3);
      expect(rotationKey_0_54_3.time, moreOrLessEquals(8.98333359));
      expect(rotationKey_0_54_3.value, quaternionMoreOrLessEquals(Quaternion(0, 0, -0.707106054, -0.707106054)));
      final rotationKey_0_54_4 = channel_0_54.rotationKeys.elementAt(4);
      expect(rotationKey_0_54_4.time, moreOrLessEquals(11.9666672));
      expect(rotationKey_0_54_4.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 3.49691106e-07, 3.49691106e-07)));
      expect(channel_0_54.scalingKeys.length, equals(5));
      final scalingKey_0_54_0 = channel_0_54.scalingKeys.elementAt(0);
      expect(scalingKey_0_54_0.time, moreOrLessEquals(0.0333329998));
      expect(scalingKey_0_54_0.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_54_1 = channel_0_54.scalingKeys.elementAt(1);
      expect(scalingKey_0_54_1.time, moreOrLessEquals(3.01666665));
      expect(scalingKey_0_54_1.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_54_2 = channel_0_54.scalingKeys.elementAt(2);
      expect(scalingKey_0_54_2.time, moreOrLessEquals(6));
      expect(scalingKey_0_54_2.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_54_3 = channel_0_54.scalingKeys.elementAt(3);
      expect(scalingKey_0_54_3.time, moreOrLessEquals(8.98333359));
      expect(scalingKey_0_54_3.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_54_4 = channel_0_54.scalingKeys.elementAt(4);
      expect(scalingKey_0_54_4.time, moreOrLessEquals(11.9666672));
      expect(scalingKey_0_54_4.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      expect(channel_0_54.preState, equals(AnimBehavior.defaults));
      expect(channel_0_54.postState, equals(AnimBehavior.defaults));
      final  channel_0_55 = animation_0.channels.elementAt(55);
      expect(channel_0_55.positionKeys.length, equals(5));
      final positionKey_0_55_0 = channel_0_55.positionKeys.elementAt(0);
      expect(positionKey_0_55_0.time, moreOrLessEquals(0.0333329998));
      expect(positionKey_0_55_0.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_55_1 = channel_0_55.positionKeys.elementAt(1);
      expect(positionKey_0_55_1.time, moreOrLessEquals(3.01666665));
      expect(positionKey_0_55_1.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_55_2 = channel_0_55.positionKeys.elementAt(2);
      expect(positionKey_0_55_2.time, moreOrLessEquals(6));
      expect(positionKey_0_55_2.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_55_3 = channel_0_55.positionKeys.elementAt(3);
      expect(positionKey_0_55_3.time, moreOrLessEquals(8.98333359));
      expect(positionKey_0_55_3.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_55_4 = channel_0_55.positionKeys.elementAt(4);
      expect(positionKey_0_55_4.time, moreOrLessEquals(11.9666672));
      expect(positionKey_0_55_4.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      expect(channel_0_55.rotationKeys.length, equals(5));
      final rotationKey_0_55_0 = channel_0_55.rotationKeys.elementAt(0);
      expect(rotationKey_0_55_0.time, moreOrLessEquals(0.0333329998));
      expect(rotationKey_0_55_0.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 2.38497613e-08, 2.38497613e-08)));
      final rotationKey_0_55_1 = channel_0_55.rotationKeys.elementAt(1);
      expect(rotationKey_0_55_1.time, moreOrLessEquals(3.01666665));
      expect(rotationKey_0_55_1.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0.707107008, 0.707107008)));
      final rotationKey_0_55_2 = channel_0_55.rotationKeys.elementAt(2);
      expect(rotationKey_0_55_2.time, moreOrLessEquals(6));
      expect(rotationKey_0_55_2.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 1, 1)));
      final rotationKey_0_55_3 = channel_0_55.rotationKeys.elementAt(3);
      expect(rotationKey_0_55_3.time, moreOrLessEquals(8.98333359));
      expect(rotationKey_0_55_3.value, quaternionMoreOrLessEquals(Quaternion(0, 0, -0.707106054, -0.707106054)));
      final rotationKey_0_55_4 = channel_0_55.rotationKeys.elementAt(4);
      expect(rotationKey_0_55_4.time, moreOrLessEquals(11.9666672));
      expect(rotationKey_0_55_4.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 3.49691106e-07, 3.49691106e-07)));
      expect(channel_0_55.scalingKeys.length, equals(5));
      final scalingKey_0_55_0 = channel_0_55.scalingKeys.elementAt(0);
      expect(scalingKey_0_55_0.time, moreOrLessEquals(0.0333329998));
      expect(scalingKey_0_55_0.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_55_1 = channel_0_55.scalingKeys.elementAt(1);
      expect(scalingKey_0_55_1.time, moreOrLessEquals(3.01666665));
      expect(scalingKey_0_55_1.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_55_2 = channel_0_55.scalingKeys.elementAt(2);
      expect(scalingKey_0_55_2.time, moreOrLessEquals(6));
      expect(scalingKey_0_55_2.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_55_3 = channel_0_55.scalingKeys.elementAt(3);
      expect(scalingKey_0_55_3.time, moreOrLessEquals(8.98333359));
      expect(scalingKey_0_55_3.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_55_4 = channel_0_55.scalingKeys.elementAt(4);
      expect(scalingKey_0_55_4.time, moreOrLessEquals(11.9666672));
      expect(scalingKey_0_55_4.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      expect(channel_0_55.preState, equals(AnimBehavior.defaults));
      expect(channel_0_55.postState, equals(AnimBehavior.defaults));
      final  channel_0_56 = animation_0.channels.elementAt(56);
      expect(channel_0_56.positionKeys.length, equals(5));
      final positionKey_0_56_0 = channel_0_56.positionKeys.elementAt(0);
      expect(positionKey_0_56_0.time, moreOrLessEquals(0.0333329998));
      expect(positionKey_0_56_0.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_56_1 = channel_0_56.positionKeys.elementAt(1);
      expect(positionKey_0_56_1.time, moreOrLessEquals(3.01666665));
      expect(positionKey_0_56_1.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_56_2 = channel_0_56.positionKeys.elementAt(2);
      expect(positionKey_0_56_2.time, moreOrLessEquals(6));
      expect(positionKey_0_56_2.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_56_3 = channel_0_56.positionKeys.elementAt(3);
      expect(positionKey_0_56_3.time, moreOrLessEquals(8.98333359));
      expect(positionKey_0_56_3.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_56_4 = channel_0_56.positionKeys.elementAt(4);
      expect(positionKey_0_56_4.time, moreOrLessEquals(11.9666672));
      expect(positionKey_0_56_4.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      expect(channel_0_56.rotationKeys.length, equals(5));
      final rotationKey_0_56_0 = channel_0_56.rotationKeys.elementAt(0);
      expect(rotationKey_0_56_0.time, moreOrLessEquals(0.0333329998));
      expect(rotationKey_0_56_0.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 2.38497613e-08, 2.38497613e-08)));
      final rotationKey_0_56_1 = channel_0_56.rotationKeys.elementAt(1);
      expect(rotationKey_0_56_1.time, moreOrLessEquals(3.01666665));
      expect(rotationKey_0_56_1.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0.707107008, 0.707107008)));
      final rotationKey_0_56_2 = channel_0_56.rotationKeys.elementAt(2);
      expect(rotationKey_0_56_2.time, moreOrLessEquals(6));
      expect(rotationKey_0_56_2.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 1, 1)));
      final rotationKey_0_56_3 = channel_0_56.rotationKeys.elementAt(3);
      expect(rotationKey_0_56_3.time, moreOrLessEquals(8.98333359));
      expect(rotationKey_0_56_3.value, quaternionMoreOrLessEquals(Quaternion(0, 0, -0.707106054, -0.707106054)));
      final rotationKey_0_56_4 = channel_0_56.rotationKeys.elementAt(4);
      expect(rotationKey_0_56_4.time, moreOrLessEquals(11.9666672));
      expect(rotationKey_0_56_4.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 3.49691106e-07, 3.49691106e-07)));
      expect(channel_0_56.scalingKeys.length, equals(5));
      final scalingKey_0_56_0 = channel_0_56.scalingKeys.elementAt(0);
      expect(scalingKey_0_56_0.time, moreOrLessEquals(0.0333329998));
      expect(scalingKey_0_56_0.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_56_1 = channel_0_56.scalingKeys.elementAt(1);
      expect(scalingKey_0_56_1.time, moreOrLessEquals(3.01666665));
      expect(scalingKey_0_56_1.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_56_2 = channel_0_56.scalingKeys.elementAt(2);
      expect(scalingKey_0_56_2.time, moreOrLessEquals(6));
      expect(scalingKey_0_56_2.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_56_3 = channel_0_56.scalingKeys.elementAt(3);
      expect(scalingKey_0_56_3.time, moreOrLessEquals(8.98333359));
      expect(scalingKey_0_56_3.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_56_4 = channel_0_56.scalingKeys.elementAt(4);
      expect(scalingKey_0_56_4.time, moreOrLessEquals(11.9666672));
      expect(scalingKey_0_56_4.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      expect(channel_0_56.preState, equals(AnimBehavior.defaults));
      expect(channel_0_56.postState, equals(AnimBehavior.defaults));
      final  channel_0_57 = animation_0.channels.elementAt(57);
      expect(channel_0_57.positionKeys.length, equals(5));
      final positionKey_0_57_0 = channel_0_57.positionKeys.elementAt(0);
      expect(positionKey_0_57_0.time, moreOrLessEquals(0.0333329998));
      expect(positionKey_0_57_0.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_57_1 = channel_0_57.positionKeys.elementAt(1);
      expect(positionKey_0_57_1.time, moreOrLessEquals(3.01666665));
      expect(positionKey_0_57_1.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_57_2 = channel_0_57.positionKeys.elementAt(2);
      expect(positionKey_0_57_2.time, moreOrLessEquals(6));
      expect(positionKey_0_57_2.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_57_3 = channel_0_57.positionKeys.elementAt(3);
      expect(positionKey_0_57_3.time, moreOrLessEquals(8.98333359));
      expect(positionKey_0_57_3.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_57_4 = channel_0_57.positionKeys.elementAt(4);
      expect(positionKey_0_57_4.time, moreOrLessEquals(11.9666672));
      expect(positionKey_0_57_4.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      expect(channel_0_57.rotationKeys.length, equals(5));
      final rotationKey_0_57_0 = channel_0_57.rotationKeys.elementAt(0);
      expect(rotationKey_0_57_0.time, moreOrLessEquals(0.0333329998));
      expect(rotationKey_0_57_0.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 2.38497613e-08, 2.38497613e-08)));
      final rotationKey_0_57_1 = channel_0_57.rotationKeys.elementAt(1);
      expect(rotationKey_0_57_1.time, moreOrLessEquals(3.01666665));
      expect(rotationKey_0_57_1.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0.707107008, 0.707107008)));
      final rotationKey_0_57_2 = channel_0_57.rotationKeys.elementAt(2);
      expect(rotationKey_0_57_2.time, moreOrLessEquals(6));
      expect(rotationKey_0_57_2.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 1, 1)));
      final rotationKey_0_57_3 = channel_0_57.rotationKeys.elementAt(3);
      expect(rotationKey_0_57_3.time, moreOrLessEquals(8.98333359));
      expect(rotationKey_0_57_3.value, quaternionMoreOrLessEquals(Quaternion(0, 0, -0.707106054, -0.707106054)));
      final rotationKey_0_57_4 = channel_0_57.rotationKeys.elementAt(4);
      expect(rotationKey_0_57_4.time, moreOrLessEquals(11.9666672));
      expect(rotationKey_0_57_4.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 3.49691106e-07, 3.49691106e-07)));
      expect(channel_0_57.scalingKeys.length, equals(5));
      final scalingKey_0_57_0 = channel_0_57.scalingKeys.elementAt(0);
      expect(scalingKey_0_57_0.time, moreOrLessEquals(0.0333329998));
      expect(scalingKey_0_57_0.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_57_1 = channel_0_57.scalingKeys.elementAt(1);
      expect(scalingKey_0_57_1.time, moreOrLessEquals(3.01666665));
      expect(scalingKey_0_57_1.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_57_2 = channel_0_57.scalingKeys.elementAt(2);
      expect(scalingKey_0_57_2.time, moreOrLessEquals(6));
      expect(scalingKey_0_57_2.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_57_3 = channel_0_57.scalingKeys.elementAt(3);
      expect(scalingKey_0_57_3.time, moreOrLessEquals(8.98333359));
      expect(scalingKey_0_57_3.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_57_4 = channel_0_57.scalingKeys.elementAt(4);
      expect(scalingKey_0_57_4.time, moreOrLessEquals(11.9666672));
      expect(scalingKey_0_57_4.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      expect(channel_0_57.preState, equals(AnimBehavior.defaults));
      expect(channel_0_57.postState, equals(AnimBehavior.defaults));
      final  channel_0_58 = animation_0.channels.elementAt(58);
      expect(channel_0_58.positionKeys.length, equals(5));
      final positionKey_0_58_0 = channel_0_58.positionKeys.elementAt(0);
      expect(positionKey_0_58_0.time, moreOrLessEquals(0.0333329998));
      expect(positionKey_0_58_0.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_58_1 = channel_0_58.positionKeys.elementAt(1);
      expect(positionKey_0_58_1.time, moreOrLessEquals(3.01666665));
      expect(positionKey_0_58_1.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_58_2 = channel_0_58.positionKeys.elementAt(2);
      expect(positionKey_0_58_2.time, moreOrLessEquals(6));
      expect(positionKey_0_58_2.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_58_3 = channel_0_58.positionKeys.elementAt(3);
      expect(positionKey_0_58_3.time, moreOrLessEquals(8.98333359));
      expect(positionKey_0_58_3.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_58_4 = channel_0_58.positionKeys.elementAt(4);
      expect(positionKey_0_58_4.time, moreOrLessEquals(11.9666672));
      expect(positionKey_0_58_4.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      expect(channel_0_58.rotationKeys.length, equals(5));
      final rotationKey_0_58_0 = channel_0_58.rotationKeys.elementAt(0);
      expect(rotationKey_0_58_0.time, moreOrLessEquals(0.0333329998));
      expect(rotationKey_0_58_0.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 2.38497613e-08, 2.38497613e-08)));
      final rotationKey_0_58_1 = channel_0_58.rotationKeys.elementAt(1);
      expect(rotationKey_0_58_1.time, moreOrLessEquals(3.01666665));
      expect(rotationKey_0_58_1.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0.707107008, 0.707107008)));
      final rotationKey_0_58_2 = channel_0_58.rotationKeys.elementAt(2);
      expect(rotationKey_0_58_2.time, moreOrLessEquals(6));
      expect(rotationKey_0_58_2.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 1, 1)));
      final rotationKey_0_58_3 = channel_0_58.rotationKeys.elementAt(3);
      expect(rotationKey_0_58_3.time, moreOrLessEquals(8.98333359));
      expect(rotationKey_0_58_3.value, quaternionMoreOrLessEquals(Quaternion(0, 0, -0.707106054, -0.707106054)));
      final rotationKey_0_58_4 = channel_0_58.rotationKeys.elementAt(4);
      expect(rotationKey_0_58_4.time, moreOrLessEquals(11.9666672));
      expect(rotationKey_0_58_4.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 3.49691106e-07, 3.49691106e-07)));
      expect(channel_0_58.scalingKeys.length, equals(5));
      final scalingKey_0_58_0 = channel_0_58.scalingKeys.elementAt(0);
      expect(scalingKey_0_58_0.time, moreOrLessEquals(0.0333329998));
      expect(scalingKey_0_58_0.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_58_1 = channel_0_58.scalingKeys.elementAt(1);
      expect(scalingKey_0_58_1.time, moreOrLessEquals(3.01666665));
      expect(scalingKey_0_58_1.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_58_2 = channel_0_58.scalingKeys.elementAt(2);
      expect(scalingKey_0_58_2.time, moreOrLessEquals(6));
      expect(scalingKey_0_58_2.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_58_3 = channel_0_58.scalingKeys.elementAt(3);
      expect(scalingKey_0_58_3.time, moreOrLessEquals(8.98333359));
      expect(scalingKey_0_58_3.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_58_4 = channel_0_58.scalingKeys.elementAt(4);
      expect(scalingKey_0_58_4.time, moreOrLessEquals(11.9666672));
      expect(scalingKey_0_58_4.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      expect(channel_0_58.preState, equals(AnimBehavior.defaults));
      expect(channel_0_58.postState, equals(AnimBehavior.defaults));
      final  channel_0_59 = animation_0.channels.elementAt(59);
      expect(channel_0_59.positionKeys.length, equals(5));
      final positionKey_0_59_0 = channel_0_59.positionKeys.elementAt(0);
      expect(positionKey_0_59_0.time, moreOrLessEquals(0.0333329998));
      expect(positionKey_0_59_0.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_59_1 = channel_0_59.positionKeys.elementAt(1);
      expect(positionKey_0_59_1.time, moreOrLessEquals(3.01666665));
      expect(positionKey_0_59_1.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_59_2 = channel_0_59.positionKeys.elementAt(2);
      expect(positionKey_0_59_2.time, moreOrLessEquals(6));
      expect(positionKey_0_59_2.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_59_3 = channel_0_59.positionKeys.elementAt(3);
      expect(positionKey_0_59_3.time, moreOrLessEquals(8.98333359));
      expect(positionKey_0_59_3.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_59_4 = channel_0_59.positionKeys.elementAt(4);
      expect(positionKey_0_59_4.time, moreOrLessEquals(11.9666672));
      expect(positionKey_0_59_4.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      expect(channel_0_59.rotationKeys.length, equals(5));
      final rotationKey_0_59_0 = channel_0_59.rotationKeys.elementAt(0);
      expect(rotationKey_0_59_0.time, moreOrLessEquals(0.0333329998));
      expect(rotationKey_0_59_0.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 2.38497613e-08, 2.38497613e-08)));
      final rotationKey_0_59_1 = channel_0_59.rotationKeys.elementAt(1);
      expect(rotationKey_0_59_1.time, moreOrLessEquals(3.01666665));
      expect(rotationKey_0_59_1.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0.707107008, 0.707107008)));
      final rotationKey_0_59_2 = channel_0_59.rotationKeys.elementAt(2);
      expect(rotationKey_0_59_2.time, moreOrLessEquals(6));
      expect(rotationKey_0_59_2.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 1, 1)));
      final rotationKey_0_59_3 = channel_0_59.rotationKeys.elementAt(3);
      expect(rotationKey_0_59_3.time, moreOrLessEquals(8.98333359));
      expect(rotationKey_0_59_3.value, quaternionMoreOrLessEquals(Quaternion(0, 0, -0.707106054, -0.707106054)));
      final rotationKey_0_59_4 = channel_0_59.rotationKeys.elementAt(4);
      expect(rotationKey_0_59_4.time, moreOrLessEquals(11.9666672));
      expect(rotationKey_0_59_4.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 3.49691106e-07, 3.49691106e-07)));
      expect(channel_0_59.scalingKeys.length, equals(5));
      final scalingKey_0_59_0 = channel_0_59.scalingKeys.elementAt(0);
      expect(scalingKey_0_59_0.time, moreOrLessEquals(0.0333329998));
      expect(scalingKey_0_59_0.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_59_1 = channel_0_59.scalingKeys.elementAt(1);
      expect(scalingKey_0_59_1.time, moreOrLessEquals(3.01666665));
      expect(scalingKey_0_59_1.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_59_2 = channel_0_59.scalingKeys.elementAt(2);
      expect(scalingKey_0_59_2.time, moreOrLessEquals(6));
      expect(scalingKey_0_59_2.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_59_3 = channel_0_59.scalingKeys.elementAt(3);
      expect(scalingKey_0_59_3.time, moreOrLessEquals(8.98333359));
      expect(scalingKey_0_59_3.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_59_4 = channel_0_59.scalingKeys.elementAt(4);
      expect(scalingKey_0_59_4.time, moreOrLessEquals(11.9666672));
      expect(scalingKey_0_59_4.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      expect(channel_0_59.preState, equals(AnimBehavior.defaults));
      expect(channel_0_59.postState, equals(AnimBehavior.defaults));
      final  channel_0_60 = animation_0.channels.elementAt(60);
      expect(channel_0_60.positionKeys.length, equals(5));
      final positionKey_0_60_0 = channel_0_60.positionKeys.elementAt(0);
      expect(positionKey_0_60_0.time, moreOrLessEquals(0.0333329998));
      expect(positionKey_0_60_0.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_60_1 = channel_0_60.positionKeys.elementAt(1);
      expect(positionKey_0_60_1.time, moreOrLessEquals(3.01666665));
      expect(positionKey_0_60_1.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_60_2 = channel_0_60.positionKeys.elementAt(2);
      expect(positionKey_0_60_2.time, moreOrLessEquals(6));
      expect(positionKey_0_60_2.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_60_3 = channel_0_60.positionKeys.elementAt(3);
      expect(positionKey_0_60_3.time, moreOrLessEquals(8.98333359));
      expect(positionKey_0_60_3.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_60_4 = channel_0_60.positionKeys.elementAt(4);
      expect(positionKey_0_60_4.time, moreOrLessEquals(11.9666672));
      expect(positionKey_0_60_4.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      expect(channel_0_60.rotationKeys.length, equals(5));
      final rotationKey_0_60_0 = channel_0_60.rotationKeys.elementAt(0);
      expect(rotationKey_0_60_0.time, moreOrLessEquals(0.0333329998));
      expect(rotationKey_0_60_0.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 2.38497613e-08, 2.38497613e-08)));
      final rotationKey_0_60_1 = channel_0_60.rotationKeys.elementAt(1);
      expect(rotationKey_0_60_1.time, moreOrLessEquals(3.01666665));
      expect(rotationKey_0_60_1.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0.707107008, 0.707107008)));
      final rotationKey_0_60_2 = channel_0_60.rotationKeys.elementAt(2);
      expect(rotationKey_0_60_2.time, moreOrLessEquals(6));
      expect(rotationKey_0_60_2.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 1, 1)));
      final rotationKey_0_60_3 = channel_0_60.rotationKeys.elementAt(3);
      expect(rotationKey_0_60_3.time, moreOrLessEquals(8.98333359));
      expect(rotationKey_0_60_3.value, quaternionMoreOrLessEquals(Quaternion(0, 0, -0.707106054, -0.707106054)));
      final rotationKey_0_60_4 = channel_0_60.rotationKeys.elementAt(4);
      expect(rotationKey_0_60_4.time, moreOrLessEquals(11.9666672));
      expect(rotationKey_0_60_4.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 3.49691106e-07, 3.49691106e-07)));
      expect(channel_0_60.scalingKeys.length, equals(5));
      final scalingKey_0_60_0 = channel_0_60.scalingKeys.elementAt(0);
      expect(scalingKey_0_60_0.time, moreOrLessEquals(0.0333329998));
      expect(scalingKey_0_60_0.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_60_1 = channel_0_60.scalingKeys.elementAt(1);
      expect(scalingKey_0_60_1.time, moreOrLessEquals(3.01666665));
      expect(scalingKey_0_60_1.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_60_2 = channel_0_60.scalingKeys.elementAt(2);
      expect(scalingKey_0_60_2.time, moreOrLessEquals(6));
      expect(scalingKey_0_60_2.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_60_3 = channel_0_60.scalingKeys.elementAt(3);
      expect(scalingKey_0_60_3.time, moreOrLessEquals(8.98333359));
      expect(scalingKey_0_60_3.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_60_4 = channel_0_60.scalingKeys.elementAt(4);
      expect(scalingKey_0_60_4.time, moreOrLessEquals(11.9666672));
      expect(scalingKey_0_60_4.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      expect(channel_0_60.preState, equals(AnimBehavior.defaults));
      expect(channel_0_60.postState, equals(AnimBehavior.defaults));
      final  channel_0_61 = animation_0.channels.elementAt(61);
      expect(channel_0_61.positionKeys.length, equals(5));
      final positionKey_0_61_0 = channel_0_61.positionKeys.elementAt(0);
      expect(positionKey_0_61_0.time, moreOrLessEquals(0.0333329998));
      expect(positionKey_0_61_0.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_61_1 = channel_0_61.positionKeys.elementAt(1);
      expect(positionKey_0_61_1.time, moreOrLessEquals(3.01666665));
      expect(positionKey_0_61_1.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_61_2 = channel_0_61.positionKeys.elementAt(2);
      expect(positionKey_0_61_2.time, moreOrLessEquals(6));
      expect(positionKey_0_61_2.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_61_3 = channel_0_61.positionKeys.elementAt(3);
      expect(positionKey_0_61_3.time, moreOrLessEquals(8.98333359));
      expect(positionKey_0_61_3.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_61_4 = channel_0_61.positionKeys.elementAt(4);
      expect(positionKey_0_61_4.time, moreOrLessEquals(11.9666672));
      expect(positionKey_0_61_4.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      expect(channel_0_61.rotationKeys.length, equals(5));
      final rotationKey_0_61_0 = channel_0_61.rotationKeys.elementAt(0);
      expect(rotationKey_0_61_0.time, moreOrLessEquals(0.0333329998));
      expect(rotationKey_0_61_0.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 2.38497613e-08, 2.38497613e-08)));
      final rotationKey_0_61_1 = channel_0_61.rotationKeys.elementAt(1);
      expect(rotationKey_0_61_1.time, moreOrLessEquals(3.01666665));
      expect(rotationKey_0_61_1.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0.707107008, 0.707107008)));
      final rotationKey_0_61_2 = channel_0_61.rotationKeys.elementAt(2);
      expect(rotationKey_0_61_2.time, moreOrLessEquals(6));
      expect(rotationKey_0_61_2.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 1, 1)));
      final rotationKey_0_61_3 = channel_0_61.rotationKeys.elementAt(3);
      expect(rotationKey_0_61_3.time, moreOrLessEquals(8.98333359));
      expect(rotationKey_0_61_3.value, quaternionMoreOrLessEquals(Quaternion(0, 0, -0.707106054, -0.707106054)));
      final rotationKey_0_61_4 = channel_0_61.rotationKeys.elementAt(4);
      expect(rotationKey_0_61_4.time, moreOrLessEquals(11.9666672));
      expect(rotationKey_0_61_4.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 3.49691106e-07, 3.49691106e-07)));
      expect(channel_0_61.scalingKeys.length, equals(5));
      final scalingKey_0_61_0 = channel_0_61.scalingKeys.elementAt(0);
      expect(scalingKey_0_61_0.time, moreOrLessEquals(0.0333329998));
      expect(scalingKey_0_61_0.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_61_1 = channel_0_61.scalingKeys.elementAt(1);
      expect(scalingKey_0_61_1.time, moreOrLessEquals(3.01666665));
      expect(scalingKey_0_61_1.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_61_2 = channel_0_61.scalingKeys.elementAt(2);
      expect(scalingKey_0_61_2.time, moreOrLessEquals(6));
      expect(scalingKey_0_61_2.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_61_3 = channel_0_61.scalingKeys.elementAt(3);
      expect(scalingKey_0_61_3.time, moreOrLessEquals(8.98333359));
      expect(scalingKey_0_61_3.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_61_4 = channel_0_61.scalingKeys.elementAt(4);
      expect(scalingKey_0_61_4.time, moreOrLessEquals(11.9666672));
      expect(scalingKey_0_61_4.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      expect(channel_0_61.preState, equals(AnimBehavior.defaults));
      expect(channel_0_61.postState, equals(AnimBehavior.defaults));
      final  channel_0_62 = animation_0.channels.elementAt(62);
      expect(channel_0_62.positionKeys.length, equals(5));
      final positionKey_0_62_0 = channel_0_62.positionKeys.elementAt(0);
      expect(positionKey_0_62_0.time, moreOrLessEquals(0.0333329998));
      expect(positionKey_0_62_0.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_62_1 = channel_0_62.positionKeys.elementAt(1);
      expect(positionKey_0_62_1.time, moreOrLessEquals(3.01666665));
      expect(positionKey_0_62_1.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_62_2 = channel_0_62.positionKeys.elementAt(2);
      expect(positionKey_0_62_2.time, moreOrLessEquals(6));
      expect(positionKey_0_62_2.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_62_3 = channel_0_62.positionKeys.elementAt(3);
      expect(positionKey_0_62_3.time, moreOrLessEquals(8.98333359));
      expect(positionKey_0_62_3.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_62_4 = channel_0_62.positionKeys.elementAt(4);
      expect(positionKey_0_62_4.time, moreOrLessEquals(11.9666672));
      expect(positionKey_0_62_4.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      expect(channel_0_62.rotationKeys.length, equals(5));
      final rotationKey_0_62_0 = channel_0_62.rotationKeys.elementAt(0);
      expect(rotationKey_0_62_0.time, moreOrLessEquals(0.0333329998));
      expect(rotationKey_0_62_0.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 2.38497613e-08, 2.38497613e-08)));
      final rotationKey_0_62_1 = channel_0_62.rotationKeys.elementAt(1);
      expect(rotationKey_0_62_1.time, moreOrLessEquals(3.01666665));
      expect(rotationKey_0_62_1.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0.707107008, 0.707107008)));
      final rotationKey_0_62_2 = channel_0_62.rotationKeys.elementAt(2);
      expect(rotationKey_0_62_2.time, moreOrLessEquals(6));
      expect(rotationKey_0_62_2.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 1, 1)));
      final rotationKey_0_62_3 = channel_0_62.rotationKeys.elementAt(3);
      expect(rotationKey_0_62_3.time, moreOrLessEquals(8.98333359));
      expect(rotationKey_0_62_3.value, quaternionMoreOrLessEquals(Quaternion(0, 0, -0.707106054, -0.707106054)));
      final rotationKey_0_62_4 = channel_0_62.rotationKeys.elementAt(4);
      expect(rotationKey_0_62_4.time, moreOrLessEquals(11.9666672));
      expect(rotationKey_0_62_4.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 3.49691106e-07, 3.49691106e-07)));
      expect(channel_0_62.scalingKeys.length, equals(5));
      final scalingKey_0_62_0 = channel_0_62.scalingKeys.elementAt(0);
      expect(scalingKey_0_62_0.time, moreOrLessEquals(0.0333329998));
      expect(scalingKey_0_62_0.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_62_1 = channel_0_62.scalingKeys.elementAt(1);
      expect(scalingKey_0_62_1.time, moreOrLessEquals(3.01666665));
      expect(scalingKey_0_62_1.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_62_2 = channel_0_62.scalingKeys.elementAt(2);
      expect(scalingKey_0_62_2.time, moreOrLessEquals(6));
      expect(scalingKey_0_62_2.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_62_3 = channel_0_62.scalingKeys.elementAt(3);
      expect(scalingKey_0_62_3.time, moreOrLessEquals(8.98333359));
      expect(scalingKey_0_62_3.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_62_4 = channel_0_62.scalingKeys.elementAt(4);
      expect(scalingKey_0_62_4.time, moreOrLessEquals(11.9666672));
      expect(scalingKey_0_62_4.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      expect(channel_0_62.preState, equals(AnimBehavior.defaults));
      expect(channel_0_62.postState, equals(AnimBehavior.defaults));
      final  channel_0_63 = animation_0.channels.elementAt(63);
      expect(channel_0_63.positionKeys.length, equals(5));
      final positionKey_0_63_0 = channel_0_63.positionKeys.elementAt(0);
      expect(positionKey_0_63_0.time, moreOrLessEquals(0.0333329998));
      expect(positionKey_0_63_0.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_63_1 = channel_0_63.positionKeys.elementAt(1);
      expect(positionKey_0_63_1.time, moreOrLessEquals(3.01666665));
      expect(positionKey_0_63_1.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_63_2 = channel_0_63.positionKeys.elementAt(2);
      expect(positionKey_0_63_2.time, moreOrLessEquals(6));
      expect(positionKey_0_63_2.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_63_3 = channel_0_63.positionKeys.elementAt(3);
      expect(positionKey_0_63_3.time, moreOrLessEquals(8.98333359));
      expect(positionKey_0_63_3.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_63_4 = channel_0_63.positionKeys.elementAt(4);
      expect(positionKey_0_63_4.time, moreOrLessEquals(11.9666672));
      expect(positionKey_0_63_4.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      expect(channel_0_63.rotationKeys.length, equals(5));
      final rotationKey_0_63_0 = channel_0_63.rotationKeys.elementAt(0);
      expect(rotationKey_0_63_0.time, moreOrLessEquals(0.0333329998));
      expect(rotationKey_0_63_0.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 2.38497613e-08, 2.38497613e-08)));
      final rotationKey_0_63_1 = channel_0_63.rotationKeys.elementAt(1);
      expect(rotationKey_0_63_1.time, moreOrLessEquals(3.01666665));
      expect(rotationKey_0_63_1.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0.707107008, 0.707107008)));
      final rotationKey_0_63_2 = channel_0_63.rotationKeys.elementAt(2);
      expect(rotationKey_0_63_2.time, moreOrLessEquals(6));
      expect(rotationKey_0_63_2.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 1, 1)));
      final rotationKey_0_63_3 = channel_0_63.rotationKeys.elementAt(3);
      expect(rotationKey_0_63_3.time, moreOrLessEquals(8.98333359));
      expect(rotationKey_0_63_3.value, quaternionMoreOrLessEquals(Quaternion(0, 0, -0.707106054, -0.707106054)));
      final rotationKey_0_63_4 = channel_0_63.rotationKeys.elementAt(4);
      expect(rotationKey_0_63_4.time, moreOrLessEquals(11.9666672));
      expect(rotationKey_0_63_4.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 3.49691106e-07, 3.49691106e-07)));
      expect(channel_0_63.scalingKeys.length, equals(5));
      final scalingKey_0_63_0 = channel_0_63.scalingKeys.elementAt(0);
      expect(scalingKey_0_63_0.time, moreOrLessEquals(0.0333329998));
      expect(scalingKey_0_63_0.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_63_1 = channel_0_63.scalingKeys.elementAt(1);
      expect(scalingKey_0_63_1.time, moreOrLessEquals(3.01666665));
      expect(scalingKey_0_63_1.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_63_2 = channel_0_63.scalingKeys.elementAt(2);
      expect(scalingKey_0_63_2.time, moreOrLessEquals(6));
      expect(scalingKey_0_63_2.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_63_3 = channel_0_63.scalingKeys.elementAt(3);
      expect(scalingKey_0_63_3.time, moreOrLessEquals(8.98333359));
      expect(scalingKey_0_63_3.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_63_4 = channel_0_63.scalingKeys.elementAt(4);
      expect(scalingKey_0_63_4.time, moreOrLessEquals(11.9666672));
      expect(scalingKey_0_63_4.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      expect(channel_0_63.preState, equals(AnimBehavior.defaults));
      expect(channel_0_63.postState, equals(AnimBehavior.defaults));
      expect(animation_0.meshChannels.length, isZero);
      expect(animation_0.meshMorphChannels.length, isZero);
    });
    testScene('lib.dae', (scene) {
      final animations = scene.animations;
      expect(animations, isNotEmpty);
      expect(animations.length, equals(2));
      final animation_0 = animations.elementAt(0);
      expect(animation_0.name, equals('bend'));
      expect(animation_0.duration, moreOrLessEquals(0.583333313));
      expect(animation_0.ticksPerSecond, moreOrLessEquals(1));
      expect(animation_0.channels.length, equals(6));
      final  channel_0_0 = animation_0.channels.elementAt(0);
      expect(channel_0_0.positionKeys.length, equals(15));
      final positionKey_0_0_0 = channel_0_0.positionKeys.elementAt(0);
      expect(positionKey_0_0_0.time, isZero);
      expect(positionKey_0_0_0.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_0_1 = channel_0_0.positionKeys.elementAt(1);
      expect(positionKey_0_0_1.time, moreOrLessEquals(0.0416666679));
      expect(positionKey_0_0_1.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_0_2 = channel_0_0.positionKeys.elementAt(2);
      expect(positionKey_0_0_2.time, moreOrLessEquals(0.0833333358));
      expect(positionKey_0_0_2.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_0_3 = channel_0_0.positionKeys.elementAt(3);
      expect(positionKey_0_0_3.time, moreOrLessEquals(0.125));
      expect(positionKey_0_0_3.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_0_4 = channel_0_0.positionKeys.elementAt(4);
      expect(positionKey_0_0_4.time, moreOrLessEquals(0.166666672));
      expect(positionKey_0_0_4.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_0_5 = channel_0_0.positionKeys.elementAt(5);
      expect(positionKey_0_0_5.time, moreOrLessEquals(0.208333328));
      expect(positionKey_0_0_5.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_0_6 = channel_0_0.positionKeys.elementAt(6);
      expect(positionKey_0_0_6.time, moreOrLessEquals(0.25));
      expect(positionKey_0_0_6.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_0_7 = channel_0_0.positionKeys.elementAt(7);
      expect(positionKey_0_0_7.time, moreOrLessEquals(0.291666657));
      expect(positionKey_0_0_7.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_0_8 = channel_0_0.positionKeys.elementAt(8);
      expect(positionKey_0_0_8.time, moreOrLessEquals(0.333333343));
      expect(positionKey_0_0_8.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_0_9 = channel_0_0.positionKeys.elementAt(9);
      expect(positionKey_0_0_9.time, moreOrLessEquals(0.375));
      expect(positionKey_0_0_9.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_0_10 = channel_0_0.positionKeys.elementAt(10);
      expect(positionKey_0_0_10.time, moreOrLessEquals(0.416666657));
      expect(positionKey_0_0_10.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_0_11 = channel_0_0.positionKeys.elementAt(11);
      expect(positionKey_0_0_11.time, moreOrLessEquals(0.458333343));
      expect(positionKey_0_0_11.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_0_12 = channel_0_0.positionKeys.elementAt(12);
      expect(positionKey_0_0_12.time, moreOrLessEquals(0.5));
      expect(positionKey_0_0_12.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_0_13 = channel_0_0.positionKeys.elementAt(13);
      expect(positionKey_0_0_13.time, moreOrLessEquals(0.541666687));
      expect(positionKey_0_0_13.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_0_0_14 = channel_0_0.positionKeys.elementAt(14);
      expect(positionKey_0_0_14.time, moreOrLessEquals(0.583333313));
      expect(positionKey_0_0_14.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      expect(channel_0_0.rotationKeys.length, equals(15));
      final rotationKey_0_0_0 = channel_0_0.rotationKeys.elementAt(0);
      expect(rotationKey_0_0_0.time, isZero);
      expect(rotationKey_0_0_0.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0, 0)));
      final rotationKey_0_0_1 = channel_0_0.rotationKeys.elementAt(1);
      expect(rotationKey_0_0_1.time, moreOrLessEquals(0.0416666679));
      expect(rotationKey_0_0_1.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0, 0)));
      final rotationKey_0_0_2 = channel_0_0.rotationKeys.elementAt(2);
      expect(rotationKey_0_0_2.time, moreOrLessEquals(0.0833333358));
      expect(rotationKey_0_0_2.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0, 0)));
      final rotationKey_0_0_3 = channel_0_0.rotationKeys.elementAt(3);
      expect(rotationKey_0_0_3.time, moreOrLessEquals(0.125));
      expect(rotationKey_0_0_3.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0, 0)));
      final rotationKey_0_0_4 = channel_0_0.rotationKeys.elementAt(4);
      expect(rotationKey_0_0_4.time, moreOrLessEquals(0.166666672));
      expect(rotationKey_0_0_4.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0, 0)));
      final rotationKey_0_0_5 = channel_0_0.rotationKeys.elementAt(5);
      expect(rotationKey_0_0_5.time, moreOrLessEquals(0.208333328));
      expect(rotationKey_0_0_5.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0, 0)));
      final rotationKey_0_0_6 = channel_0_0.rotationKeys.elementAt(6);
      expect(rotationKey_0_0_6.time, moreOrLessEquals(0.25));
      expect(rotationKey_0_0_6.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0, 0)));
      final rotationKey_0_0_7 = channel_0_0.rotationKeys.elementAt(7);
      expect(rotationKey_0_0_7.time, moreOrLessEquals(0.291666657));
      expect(rotationKey_0_0_7.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0, 0)));
      final rotationKey_0_0_8 = channel_0_0.rotationKeys.elementAt(8);
      expect(rotationKey_0_0_8.time, moreOrLessEquals(0.333333343));
      expect(rotationKey_0_0_8.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0, 0)));
      final rotationKey_0_0_9 = channel_0_0.rotationKeys.elementAt(9);
      expect(rotationKey_0_0_9.time, moreOrLessEquals(0.375));
      expect(rotationKey_0_0_9.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0, 0)));
      final rotationKey_0_0_10 = channel_0_0.rotationKeys.elementAt(10);
      expect(rotationKey_0_0_10.time, moreOrLessEquals(0.416666657));
      expect(rotationKey_0_0_10.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0, 0)));
      final rotationKey_0_0_11 = channel_0_0.rotationKeys.elementAt(11);
      expect(rotationKey_0_0_11.time, moreOrLessEquals(0.458333343));
      expect(rotationKey_0_0_11.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0, 0)));
      final rotationKey_0_0_12 = channel_0_0.rotationKeys.elementAt(12);
      expect(rotationKey_0_0_12.time, moreOrLessEquals(0.5));
      expect(rotationKey_0_0_12.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0, 0)));
      final rotationKey_0_0_13 = channel_0_0.rotationKeys.elementAt(13);
      expect(rotationKey_0_0_13.time, moreOrLessEquals(0.541666687));
      expect(rotationKey_0_0_13.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0, 0)));
      final rotationKey_0_0_14 = channel_0_0.rotationKeys.elementAt(14);
      expect(rotationKey_0_0_14.time, moreOrLessEquals(0.583333313));
      expect(rotationKey_0_0_14.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0, 0)));
      expect(channel_0_0.scalingKeys.length, equals(15));
      final scalingKey_0_0_0 = channel_0_0.scalingKeys.elementAt(0);
      expect(scalingKey_0_0_0.time, isZero);
      expect(scalingKey_0_0_0.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_0_1 = channel_0_0.scalingKeys.elementAt(1);
      expect(scalingKey_0_0_1.time, moreOrLessEquals(0.0416666679));
      expect(scalingKey_0_0_1.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_0_2 = channel_0_0.scalingKeys.elementAt(2);
      expect(scalingKey_0_0_2.time, moreOrLessEquals(0.0833333358));
      expect(scalingKey_0_0_2.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_0_3 = channel_0_0.scalingKeys.elementAt(3);
      expect(scalingKey_0_0_3.time, moreOrLessEquals(0.125));
      expect(scalingKey_0_0_3.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_0_4 = channel_0_0.scalingKeys.elementAt(4);
      expect(scalingKey_0_0_4.time, moreOrLessEquals(0.166666672));
      expect(scalingKey_0_0_4.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_0_5 = channel_0_0.scalingKeys.elementAt(5);
      expect(scalingKey_0_0_5.time, moreOrLessEquals(0.208333328));
      expect(scalingKey_0_0_5.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_0_6 = channel_0_0.scalingKeys.elementAt(6);
      expect(scalingKey_0_0_6.time, moreOrLessEquals(0.25));
      expect(scalingKey_0_0_6.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_0_7 = channel_0_0.scalingKeys.elementAt(7);
      expect(scalingKey_0_0_7.time, moreOrLessEquals(0.291666657));
      expect(scalingKey_0_0_7.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_0_8 = channel_0_0.scalingKeys.elementAt(8);
      expect(scalingKey_0_0_8.time, moreOrLessEquals(0.333333343));
      expect(scalingKey_0_0_8.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_0_9 = channel_0_0.scalingKeys.elementAt(9);
      expect(scalingKey_0_0_9.time, moreOrLessEquals(0.375));
      expect(scalingKey_0_0_9.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_0_10 = channel_0_0.scalingKeys.elementAt(10);
      expect(scalingKey_0_0_10.time, moreOrLessEquals(0.416666657));
      expect(scalingKey_0_0_10.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_0_11 = channel_0_0.scalingKeys.elementAt(11);
      expect(scalingKey_0_0_11.time, moreOrLessEquals(0.458333343));
      expect(scalingKey_0_0_11.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_0_12 = channel_0_0.scalingKeys.elementAt(12);
      expect(scalingKey_0_0_12.time, moreOrLessEquals(0.5));
      expect(scalingKey_0_0_12.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_0_13 = channel_0_0.scalingKeys.elementAt(13);
      expect(scalingKey_0_0_13.time, moreOrLessEquals(0.541666687));
      expect(scalingKey_0_0_13.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_0_14 = channel_0_0.scalingKeys.elementAt(14);
      expect(scalingKey_0_0_14.time, moreOrLessEquals(0.583333313));
      expect(scalingKey_0_0_14.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      expect(channel_0_0.preState, equals(AnimBehavior.defaults));
      expect(channel_0_0.postState, equals(AnimBehavior.defaults));
      final  channel_0_1 = animation_0.channels.elementAt(1);
      expect(channel_0_1.positionKeys.length, equals(15));
      final positionKey_0_1_0 = channel_0_1.positionKeys.elementAt(0);
      expect(positionKey_0_1_0.time, isZero);
      expect(positionKey_0_1_0.value, vector3MoreOrLessEquals(Vector3(0, 0, -1)));
      final positionKey_0_1_1 = channel_0_1.positionKeys.elementAt(1);
      expect(positionKey_0_1_1.time, moreOrLessEquals(0.0416666679));
      expect(positionKey_0_1_1.value, vector3MoreOrLessEquals(Vector3(0, 0, -0.934041381)));
      final positionKey_0_1_2 = channel_0_1.positionKeys.elementAt(2);
      expect(positionKey_0_1_2.time, moreOrLessEquals(0.0833333358));
      expect(positionKey_0_1_2.value, vector3MoreOrLessEquals(Vector3(0, 1.77635684e-15, -0.664606571)));
      final positionKey_0_1_3 = channel_0_1.positionKeys.elementAt(3);
      expect(positionKey_0_1_3.time, moreOrLessEquals(0.125));
      expect(positionKey_0_1_3.value, vector3MoreOrLessEquals(Vector3(0, -7.10542736e-15, -0.321985841)));
      final positionKey_0_1_4 = channel_0_1.positionKeys.elementAt(4);
      expect(positionKey_0_1_4.time, moreOrLessEquals(0.166666672));
      expect(positionKey_0_1_4.value, vector3MoreOrLessEquals(Vector3(0, -7.10542736e-15, 0.0357341766)));
      final positionKey_0_1_5 = channel_0_1.positionKeys.elementAt(5);
      expect(positionKey_0_1_5.time, moreOrLessEquals(0.208333328));
      expect(positionKey_0_1_5.value, vector3MoreOrLessEquals(Vector3(0, -1.42108547e-14, 0.414366364)));
      final positionKey_0_1_6 = channel_0_1.positionKeys.elementAt(6);
      expect(positionKey_0_1_6.time, moreOrLessEquals(0.25));
      expect(positionKey_0_1_6.value, vector3MoreOrLessEquals(Vector3(0, -1.42108547e-14, 0.783106685)));
      final positionKey_0_1_7 = channel_0_1.positionKeys.elementAt(7);
      expect(positionKey_0_1_7.time, moreOrLessEquals(0.291666657));
      expect(positionKey_0_1_7.value, vector3MoreOrLessEquals(Vector3(0, -2.84217094e-14, 1.10704374)));
      final positionKey_0_1_8 = channel_0_1.positionKeys.elementAt(8);
      expect(positionKey_0_1_8.time, moreOrLessEquals(0.333333343));
      expect(positionKey_0_1_8.value, vector3MoreOrLessEquals(Vector3(0, 0, 1.33685279)));
      final positionKey_0_1_9 = channel_0_1.positionKeys.elementAt(9);
      expect(positionKey_0_1_9.time, moreOrLessEquals(0.375));
      expect(positionKey_0_1_9.value, vector3MoreOrLessEquals(Vector3(0, 0, 1.40779948)));
      final positionKey_0_1_10 = channel_0_1.positionKeys.elementAt(10);
      expect(positionKey_0_1_10.time, moreOrLessEquals(0.416666657));
      expect(positionKey_0_1_10.value, vector3MoreOrLessEquals(Vector3(0, -1.42108547e-14, 1.19377279)));
      final positionKey_0_1_11 = channel_0_1.positionKeys.elementAt(11);
      expect(positionKey_0_1_11.time, moreOrLessEquals(0.458333343));
      expect(positionKey_0_1_11.value, vector3MoreOrLessEquals(Vector3(0, 0, 0.645316124)));
      final positionKey_0_1_12 = channel_0_1.positionKeys.elementAt(12);
      expect(positionKey_0_1_12.time, moreOrLessEquals(0.5));
      expect(positionKey_0_1_12.value, vector3MoreOrLessEquals(Vector3(0, -7.10542736e-15, -0.0372572541)));
      final positionKey_0_1_13 = channel_0_1.positionKeys.elementAt(13);
      expect(positionKey_0_1_13.time, moreOrLessEquals(0.541666687));
      expect(positionKey_0_1_13.value, vector3MoreOrLessEquals(Vector3(0, 3.55271368e-15, -0.689035118)));
      final positionKey_0_1_14 = channel_0_1.positionKeys.elementAt(14);
      expect(positionKey_0_1_14.time, moreOrLessEquals(0.583333313));
      expect(positionKey_0_1_14.value, vector3MoreOrLessEquals(Vector3(0, 0, -1)));
      expect(channel_0_1.rotationKeys.length, equals(15));
      final rotationKey_0_1_0 = channel_0_1.rotationKeys.elementAt(0);
      expect(rotationKey_0_1_0.time, isZero);
      expect(rotationKey_0_1_0.value, quaternionMoreOrLessEquals(Quaternion(0.707106709, 0, 0, 0)));
      final rotationKey_0_1_1 = channel_0_1.rotationKeys.elementAt(1);
      expect(rotationKey_0_1_1.time, moreOrLessEquals(0.0416666679));
      expect(rotationKey_0_1_1.value, quaternionMoreOrLessEquals(Quaternion(0.707106709, 0, 0, 0)));
      final rotationKey_0_1_2 = channel_0_1.rotationKeys.elementAt(2);
      expect(rotationKey_0_1_2.time, moreOrLessEquals(0.0833333358));
      expect(rotationKey_0_1_2.value, quaternionMoreOrLessEquals(Quaternion(0.707106709, 0, 0, 0)));
      final rotationKey_0_1_3 = channel_0_1.rotationKeys.elementAt(3);
      expect(rotationKey_0_1_3.time, moreOrLessEquals(0.125));
      expect(rotationKey_0_1_3.value, quaternionMoreOrLessEquals(Quaternion(0.707106709, 0, 0, 0)));
      final rotationKey_0_1_4 = channel_0_1.rotationKeys.elementAt(4);
      expect(rotationKey_0_1_4.time, moreOrLessEquals(0.166666672));
      expect(rotationKey_0_1_4.value, quaternionMoreOrLessEquals(Quaternion(0.707106709, 0, 0, 0)));
      final rotationKey_0_1_5 = channel_0_1.rotationKeys.elementAt(5);
      expect(rotationKey_0_1_5.time, moreOrLessEquals(0.208333328));
      expect(rotationKey_0_1_5.value, quaternionMoreOrLessEquals(Quaternion(0.707106709, 0, 0, 0)));
      final rotationKey_0_1_6 = channel_0_1.rotationKeys.elementAt(6);
      expect(rotationKey_0_1_6.time, moreOrLessEquals(0.25));
      expect(rotationKey_0_1_6.value, quaternionMoreOrLessEquals(Quaternion(0.707106709, 0, 0, 0)));
      final rotationKey_0_1_7 = channel_0_1.rotationKeys.elementAt(7);
      expect(rotationKey_0_1_7.time, moreOrLessEquals(0.291666657));
      expect(rotationKey_0_1_7.value, quaternionMoreOrLessEquals(Quaternion(0.707106709, 0, 0, 0)));
      final rotationKey_0_1_8 = channel_0_1.rotationKeys.elementAt(8);
      expect(rotationKey_0_1_8.time, moreOrLessEquals(0.333333343));
      expect(rotationKey_0_1_8.value, quaternionMoreOrLessEquals(Quaternion(0.707106709, 0, 0, 0)));
      final rotationKey_0_1_9 = channel_0_1.rotationKeys.elementAt(9);
      expect(rotationKey_0_1_9.time, moreOrLessEquals(0.375));
      expect(rotationKey_0_1_9.value, quaternionMoreOrLessEquals(Quaternion(0.707106709, 0, 0, 0)));
      final rotationKey_0_1_10 = channel_0_1.rotationKeys.elementAt(10);
      expect(rotationKey_0_1_10.time, moreOrLessEquals(0.416666657));
      expect(rotationKey_0_1_10.value, quaternionMoreOrLessEquals(Quaternion(0.704262614, 0.029853316, -0.0262962542, -0.0262962542)));
      final rotationKey_0_1_11 = channel_0_1.rotationKeys.elementAt(11);
      expect(rotationKey_0_1_11.time, moreOrLessEquals(0.458333343));
      expect(rotationKey_0_1_11.value, quaternionMoreOrLessEquals(Quaternion(0.691462457, 0.107920147, -0.095061332, -0.095061332)));
      final rotationKey_0_1_12 = channel_0_1.rotationKeys.elementAt(12);
      expect(rotationKey_0_1_12.time, moreOrLessEquals(0.5));
      expect(rotationKey_0_1_12.value, quaternionMoreOrLessEquals(Quaternion(0.664346159, 0.205060273, -0.180627093, -0.180627093)));
      final rotationKey_0_1_13 = channel_0_1.rotationKeys.elementAt(13);
      expect(rotationKey_0_1_13.time, moreOrLessEquals(0.541666687));
      expect(rotationKey_0_1_13.value, quaternionMoreOrLessEquals(Quaternion(0.627987087, 0.293459594, -0.258493513, -0.258493513)));
      final rotationKey_0_1_14 = channel_0_1.rotationKeys.elementAt(14);
      expect(rotationKey_0_1_14.time, moreOrLessEquals(0.583333313));
      expect(rotationKey_0_1_14.value, quaternionMoreOrLessEquals(Quaternion(0.607721508, 0.332993329, -0.293316782, -0.293316782)));
      expect(channel_0_1.scalingKeys.length, equals(15));
      final scalingKey_0_1_0 = channel_0_1.scalingKeys.elementAt(0);
      expect(scalingKey_0_1_0.time, isZero);
      expect(scalingKey_0_1_0.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_1_1 = channel_0_1.scalingKeys.elementAt(1);
      expect(scalingKey_0_1_1.time, moreOrLessEquals(0.0416666679));
      expect(scalingKey_0_1_1.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_1_2 = channel_0_1.scalingKeys.elementAt(2);
      expect(scalingKey_0_1_2.time, moreOrLessEquals(0.0833333358));
      expect(scalingKey_0_1_2.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_1_3 = channel_0_1.scalingKeys.elementAt(3);
      expect(scalingKey_0_1_3.time, moreOrLessEquals(0.125));
      expect(scalingKey_0_1_3.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_1_4 = channel_0_1.scalingKeys.elementAt(4);
      expect(scalingKey_0_1_4.time, moreOrLessEquals(0.166666672));
      expect(scalingKey_0_1_4.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_1_5 = channel_0_1.scalingKeys.elementAt(5);
      expect(scalingKey_0_1_5.time, moreOrLessEquals(0.208333328));
      expect(scalingKey_0_1_5.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_1_6 = channel_0_1.scalingKeys.elementAt(6);
      expect(scalingKey_0_1_6.time, moreOrLessEquals(0.25));
      expect(scalingKey_0_1_6.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_1_7 = channel_0_1.scalingKeys.elementAt(7);
      expect(scalingKey_0_1_7.time, moreOrLessEquals(0.291666657));
      expect(scalingKey_0_1_7.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_1_8 = channel_0_1.scalingKeys.elementAt(8);
      expect(scalingKey_0_1_8.time, moreOrLessEquals(0.333333343));
      expect(scalingKey_0_1_8.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_1_9 = channel_0_1.scalingKeys.elementAt(9);
      expect(scalingKey_0_1_9.time, moreOrLessEquals(0.375));
      expect(scalingKey_0_1_9.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_1_10 = channel_0_1.scalingKeys.elementAt(10);
      expect(scalingKey_0_1_10.time, moreOrLessEquals(0.416666657));
      expect(scalingKey_0_1_10.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_1_11 = channel_0_1.scalingKeys.elementAt(11);
      expect(scalingKey_0_1_11.time, moreOrLessEquals(0.458333343));
      expect(scalingKey_0_1_11.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_1_12 = channel_0_1.scalingKeys.elementAt(12);
      expect(scalingKey_0_1_12.time, moreOrLessEquals(0.5));
      expect(scalingKey_0_1_12.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_1_13 = channel_0_1.scalingKeys.elementAt(13);
      expect(scalingKey_0_1_13.time, moreOrLessEquals(0.541666687));
      expect(scalingKey_0_1_13.value, vector3MoreOrLessEquals(Vector3(0.99999994, 1, 1)));
      final scalingKey_0_1_14 = channel_0_1.scalingKeys.elementAt(14);
      expect(scalingKey_0_1_14.time, moreOrLessEquals(0.583333313));
      expect(scalingKey_0_1_14.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      expect(channel_0_1.preState, equals(AnimBehavior.defaults));
      expect(channel_0_1.postState, equals(AnimBehavior.defaults));
      final  channel_0_2 = animation_0.channels.elementAt(2);
      expect(channel_0_2.positionKeys.length, equals(15));
      final positionKey_0_2_0 = channel_0_2.positionKeys.elementAt(0);
      expect(positionKey_0_2_0.time, isZero);
      expect(positionKey_0_2_0.value, vector3MoreOrLessEquals(Vector3(0, 2, 0)));
      final positionKey_0_2_1 = channel_0_2.positionKeys.elementAt(1);
      expect(positionKey_0_2_1.time, moreOrLessEquals(0.0416666679));
      expect(positionKey_0_2_1.value, vector3MoreOrLessEquals(Vector3(0, 2, 0)));
      final positionKey_0_2_2 = channel_0_2.positionKeys.elementAt(2);
      expect(positionKey_0_2_2.time, moreOrLessEquals(0.0833333358));
      expect(positionKey_0_2_2.value, vector3MoreOrLessEquals(Vector3(0, 2, 0)));
      final positionKey_0_2_3 = channel_0_2.positionKeys.elementAt(3);
      expect(positionKey_0_2_3.time, moreOrLessEquals(0.125));
      expect(positionKey_0_2_3.value, vector3MoreOrLessEquals(Vector3(0, 2, 3.55271368e-15)));
      final positionKey_0_2_4 = channel_0_2.positionKeys.elementAt(4);
      expect(positionKey_0_2_4.time, moreOrLessEquals(0.166666672));
      expect(positionKey_0_2_4.value, vector3MoreOrLessEquals(Vector3(0, 2, 1.15463195e-14)));
      final positionKey_0_2_5 = channel_0_2.positionKeys.elementAt(5);
      expect(positionKey_0_2_5.time, moreOrLessEquals(0.208333328));
      expect(positionKey_0_2_5.value, vector3MoreOrLessEquals(Vector3(0, 1.99999988, -1.42108547e-14)));
      final positionKey_0_2_6 = channel_0_2.positionKeys.elementAt(6);
      expect(positionKey_0_2_6.time, moreOrLessEquals(0.25));
      expect(positionKey_0_2_6.value, vector3MoreOrLessEquals(Vector3(0, 2.00000024, 1.42108547e-14)));
      final positionKey_0_2_7 = channel_0_2.positionKeys.elementAt(7);
      expect(positionKey_0_2_7.time, moreOrLessEquals(0.291666657));
      expect(positionKey_0_2_7.value, vector3MoreOrLessEquals(Vector3(0, 2, 0)));
      final positionKey_0_2_8 = channel_0_2.positionKeys.elementAt(8);
      expect(positionKey_0_2_8.time, moreOrLessEquals(0.333333343));
      expect(positionKey_0_2_8.value, vector3MoreOrLessEquals(Vector3(0, 2, -1.42108547e-14)));
      final positionKey_0_2_9 = channel_0_2.positionKeys.elementAt(9);
      expect(positionKey_0_2_9.time, moreOrLessEquals(0.375));
      expect(positionKey_0_2_9.value, vector3MoreOrLessEquals(Vector3(0, 2, -1.42108547e-14)));
      final positionKey_0_2_10 = channel_0_2.positionKeys.elementAt(10);
      expect(positionKey_0_2_10.time, moreOrLessEquals(0.416666657));
      expect(positionKey_0_2_10.value, vector3MoreOrLessEquals(Vector3(4.8748916e-09, 2.00000024, -1.04773779e-09)));
      final positionKey_0_2_11 = channel_0_2.positionKeys.elementAt(11);
      expect(positionKey_0_2_11.time, moreOrLessEquals(0.458333343));
      expect(positionKey_0_2_11.value, vector3MoreOrLessEquals(Vector3(6.12926669e-08, 2, -9.31322575e-10)));
      final positionKey_0_2_12 = channel_0_2.positionKeys.elementAt(12);
      expect(positionKey_0_2_12.time, moreOrLessEquals(0.5));
      expect(positionKey_0_2_12.value, vector3MoreOrLessEquals(Vector3(3.35276127e-08, 2, -4.65661287e-09)));
      final positionKey_0_2_13 = channel_0_2.positionKeys.elementAt(13);
      expect(positionKey_0_2_13.time, moreOrLessEquals(0.541666687));
      expect(positionKey_0_2_13.value, vector3MoreOrLessEquals(Vector3(1.18743637e-08, 2, 1.49011612e-08)));
      final positionKey_0_2_14 = channel_0_2.positionKeys.elementAt(14);
      expect(positionKey_0_2_14.time, moreOrLessEquals(0.583333313));
      expect(positionKey_0_2_14.value, vector3MoreOrLessEquals(Vector3(-5.05242497e-08, 2, 7.4505806e-09)));
      expect(channel_0_2.rotationKeys.length, equals(15));
      final rotationKey_0_2_0 = channel_0_2.rotationKeys.elementAt(0);
      expect(rotationKey_0_2_0.time, isZero);
      expect(rotationKey_0_2_0.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0, 0)));
      final rotationKey_0_2_1 = channel_0_2.rotationKeys.elementAt(1);
      expect(rotationKey_0_2_1.time, moreOrLessEquals(0.0416666679));
      expect(rotationKey_0_2_1.value, quaternionMoreOrLessEquals(Quaternion(0, 1.04208534e-11, -0.00270340079, -0.00270340079)));
      final rotationKey_0_2_2 = channel_0_2.rotationKeys.elementAt(2);
      expect(rotationKey_0_2_2.time, moreOrLessEquals(0.0833333358));
      expect(rotationKey_0_2_2.value, quaternionMoreOrLessEquals(Quaternion(0, 7.11001744e-11, -0.0139862793, -0.0139862793)));
      final rotationKey_0_2_3 = channel_0_2.rotationKeys.elementAt(3);
      expect(rotationKey_0_2_3.time, moreOrLessEquals(0.125));
      expect(rotationKey_0_2_3.value, quaternionMoreOrLessEquals(Quaternion(0, 2.24875202e-10, -0.0307859126, -0.0307859126)));
      final rotationKey_0_2_4 = channel_0_2.rotationKeys.elementAt(4);
      expect(rotationKey_0_2_4.time, moreOrLessEquals(0.166666672));
      expect(rotationKey_0_2_4.value, quaternionMoreOrLessEquals(Quaternion(-1.7368607e-18, 5.54176594e-10, -0.0495931841, -0.0495931841)));
      final rotationKey_0_2_5 = channel_0_2.rotationKeys.elementAt(5);
      expect(rotationKey_0_2_5.time, moreOrLessEquals(0.208333328));
      expect(rotationKey_0_2_5.value, quaternionMoreOrLessEquals(Quaternion(1.78065892e-15, 1.19649679e-09, -0.0694703534, -0.0694703534)));
      final rotationKey_0_2_6 = channel_0_2.rotationKeys.elementAt(6);
      expect(rotationKey_0_2_6.time, moreOrLessEquals(0.25));
      expect(rotationKey_0_2_6.value, quaternionMoreOrLessEquals(Quaternion(-1.39337664e-17, 2.1901152e-09, -0.0895480067, -0.0895480067)));
      final rotationKey_0_2_7 = channel_0_2.rotationKeys.elementAt(7);
      expect(rotationKey_0_2_7.time, moreOrLessEquals(0.291666657));
      expect(rotationKey_0_2_7.value, quaternionMoreOrLessEquals(Quaternion(0, 3.71871089e-09, -0.109057479, -0.109057479)));
      final rotationKey_0_2_8 = channel_0_2.rotationKeys.elementAt(8);
      expect(rotationKey_0_2_8.time, moreOrLessEquals(0.333333343));
      expect(rotationKey_0_2_8.value, quaternionMoreOrLessEquals(Quaternion(0, 6.25426955e-09, -0.127250552, -0.127250552)));
      final rotationKey_0_2_9 = channel_0_2.rotationKeys.elementAt(9);
      expect(rotationKey_0_2_9.time, moreOrLessEquals(0.375));
      expect(rotationKey_0_2_9.value, quaternionMoreOrLessEquals(Quaternion(0, 1.07801768e-08, -0.142787769, -0.142787769)));
      final rotationKey_0_2_10 = channel_0_2.rotationKeys.elementAt(10);
      expect(rotationKey_0_2_10.time, moreOrLessEquals(0.416666657));
      expect(rotationKey_0_2_10.value, quaternionMoreOrLessEquals(Quaternion(-0.000410281064, 0.000234404419, -0.15653491, -0.15653491)));
      final rotationKey_0_2_11 = channel_0_2.rotationKeys.elementAt(11);
      expect(rotationKey_0_2_11.time, moreOrLessEquals(0.458333343));
      expect(rotationKey_0_2_11.value, quaternionMoreOrLessEquals(Quaternion(-0.00146169937, 0.000835058803, -0.169080004, -0.169080004)));
      final rotationKey_0_2_12 = channel_0_2.rotationKeys.elementAt(12);
      expect(rotationKey_0_2_12.time, moreOrLessEquals(0.5));
      expect(rotationKey_0_2_12.value, quaternionMoreOrLessEquals(Quaternion(-0.00277036428, 0.00158267177, -0.180415675, -0.180415675)));
      final rotationKey_0_2_13 = channel_0_2.rotationKeys.elementAt(13);
      expect(rotationKey_0_2_13.time, moreOrLessEquals(0.541666687));
      expect(rotationKey_0_2_13.value, quaternionMoreOrLessEquals(Quaternion(-0.00402002735, 0.00229657302, -0.189674616, -0.189674616)));
      final rotationKey_0_2_14 = channel_0_2.rotationKeys.elementAt(14);
      expect(rotationKey_0_2_14.time, moreOrLessEquals(0.583333313));
      expect(rotationKey_0_2_14.value, quaternionMoreOrLessEquals(Quaternion(-0.00461625494, 0.00263718166, -0.19367379, -0.19367379)));
      expect(channel_0_2.scalingKeys.length, equals(15));
      final scalingKey_0_2_0 = channel_0_2.scalingKeys.elementAt(0);
      expect(scalingKey_0_2_0.time, isZero);
      expect(scalingKey_0_2_0.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_2_1 = channel_0_2.scalingKeys.elementAt(1);
      expect(scalingKey_0_2_1.time, moreOrLessEquals(0.0416666679));
      expect(scalingKey_0_2_1.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_2_2 = channel_0_2.scalingKeys.elementAt(2);
      expect(scalingKey_0_2_2.time, moreOrLessEquals(0.0833333358));
      expect(scalingKey_0_2_2.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_2_3 = channel_0_2.scalingKeys.elementAt(3);
      expect(scalingKey_0_2_3.time, moreOrLessEquals(0.125));
      expect(scalingKey_0_2_3.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_2_4 = channel_0_2.scalingKeys.elementAt(4);
      expect(scalingKey_0_2_4.time, moreOrLessEquals(0.166666672));
      expect(scalingKey_0_2_4.value, vector3MoreOrLessEquals(Vector3(0.99999994, 0.99999994, 1)));
      final scalingKey_0_2_5 = channel_0_2.scalingKeys.elementAt(5);
      expect(scalingKey_0_2_5.time, moreOrLessEquals(0.208333328));
      expect(scalingKey_0_2_5.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_2_6 = channel_0_2.scalingKeys.elementAt(6);
      expect(scalingKey_0_2_6.time, moreOrLessEquals(0.25));
      expect(scalingKey_0_2_6.value, vector3MoreOrLessEquals(Vector3(0.99999994, 0.99999994, 1)));
      final scalingKey_0_2_7 = channel_0_2.scalingKeys.elementAt(7);
      expect(scalingKey_0_2_7.time, moreOrLessEquals(0.291666657));
      expect(scalingKey_0_2_7.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_2_8 = channel_0_2.scalingKeys.elementAt(8);
      expect(scalingKey_0_2_8.time, moreOrLessEquals(0.333333343));
      expect(scalingKey_0_2_8.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_2_9 = channel_0_2.scalingKeys.elementAt(9);
      expect(scalingKey_0_2_9.time, moreOrLessEquals(0.375));
      expect(scalingKey_0_2_9.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_2_10 = channel_0_2.scalingKeys.elementAt(10);
      expect(scalingKey_0_2_10.time, moreOrLessEquals(0.416666657));
      expect(scalingKey_0_2_10.value, vector3MoreOrLessEquals(Vector3(1, 0.99999994, 1)));
      final scalingKey_0_2_11 = channel_0_2.scalingKeys.elementAt(11);
      expect(scalingKey_0_2_11.time, moreOrLessEquals(0.458333343));
      expect(scalingKey_0_2_11.value, vector3MoreOrLessEquals(Vector3(1, 0.99999994, 1)));
      final scalingKey_0_2_12 = channel_0_2.scalingKeys.elementAt(12);
      expect(scalingKey_0_2_12.time, moreOrLessEquals(0.5));
      expect(scalingKey_0_2_12.value, vector3MoreOrLessEquals(Vector3(0.99999994, 1, 0.99999994)));
      final scalingKey_0_2_13 = channel_0_2.scalingKeys.elementAt(13);
      expect(scalingKey_0_2_13.time, moreOrLessEquals(0.541666687));
      expect(scalingKey_0_2_13.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_2_14 = channel_0_2.scalingKeys.elementAt(14);
      expect(scalingKey_0_2_14.time, moreOrLessEquals(0.583333313));
      expect(scalingKey_0_2_14.value, vector3MoreOrLessEquals(Vector3(0.99999994, 1, 1)));
      expect(channel_0_2.preState, equals(AnimBehavior.defaults));
      expect(channel_0_2.postState, equals(AnimBehavior.defaults));
      final  channel_0_3 = animation_0.channels.elementAt(3);
      expect(channel_0_3.positionKeys.length, equals(15));
      final positionKey_0_3_0 = channel_0_3.positionKeys.elementAt(0);
      expect(positionKey_0_3_0.time, isZero);
      expect(positionKey_0_3_0.value, vector3MoreOrLessEquals(Vector3(0, 2, 7.10542736e-15)));
      final positionKey_0_3_1 = channel_0_3.positionKeys.elementAt(1);
      expect(positionKey_0_3_1.time, moreOrLessEquals(0.0416666679));
      expect(positionKey_0_3_1.value, vector3MoreOrLessEquals(Vector3(-1.16226473e-16, 2, -2.00103063e-15)));
      final positionKey_0_3_2 = channel_0_3.positionKeys.elementAt(2);
      expect(positionKey_0_3_2.time, moreOrLessEquals(0.0833333358));
      expect(positionKey_0_3_2.value, vector3MoreOrLessEquals(Vector3(-5.96744876e-16, 2, 9.99374195e-15)));
      final positionKey_0_3_3 = channel_0_3.positionKeys.elementAt(3);
      expect(positionKey_0_3_3.time, moreOrLessEquals(0.125));
      expect(positionKey_0_3_3.value, vector3MoreOrLessEquals(Vector3(7.45057882e-09, 1.99999988, 1.5727003e-14)));
      final positionKey_0_3_4 = channel_0_3.positionKeys.elementAt(4);
      expect(positionKey_0_3_4.time, moreOrLessEquals(0.166666672));
      expect(positionKey_0_3_4.value, vector3MoreOrLessEquals(Vector3(-1.91513472e-15, 1.99999988, 6.66133868e-16)));
      final positionKey_0_3_5 = channel_0_3.positionKeys.elementAt(5);
      expect(positionKey_0_3_5.time, moreOrLessEquals(0.208333328));
      expect(positionKey_0_3_5.value, vector3MoreOrLessEquals(Vector3(-2.44249065e-15, 1.99999964, -2.24820162e-14)));
      final positionKey_0_3_6 = channel_0_3.positionKeys.elementAt(6);
      expect(positionKey_0_3_6.time, moreOrLessEquals(0.25));
      expect(positionKey_0_3_6.value, vector3MoreOrLessEquals(Vector3(-2.72004662e-15, 2, 5.92859095e-14)));
      final positionKey_0_3_7 = channel_0_3.positionKeys.elementAt(7);
      expect(positionKey_0_3_7.time, moreOrLessEquals(0.291666657));
      expect(positionKey_0_3_7.value, vector3MoreOrLessEquals(Vector3(2.98023171e-08, 2.00000024, 2.6423308e-14)));
      final positionKey_0_3_8 = channel_0_3.positionKeys.elementAt(8);
      expect(positionKey_0_3_8.time, moreOrLessEquals(0.333333343));
      expect(positionKey_0_3_8.value, vector3MoreOrLessEquals(Vector3(-2.98023259e-08, 1.99999976, 4.48530102e-14)));
      final positionKey_0_3_9 = channel_0_3.positionKeys.elementAt(9);
      expect(positionKey_0_3_9.time, moreOrLessEquals(0.375));
      expect(positionKey_0_3_9.value, vector3MoreOrLessEquals(Vector3(-1.1920929e-07, 2.00000024, 1.95399252e-14)));
      final positionKey_0_3_10 = channel_0_3.positionKeys.elementAt(10);
      expect(positionKey_0_3_10.time, moreOrLessEquals(0.416666657));
      expect(positionKey_0_3_10.value, vector3MoreOrLessEquals(Vector3(6.51198206e-08, 1.99999976, -1.39698386e-09)));
      final positionKey_0_3_11 = channel_0_3.positionKeys.elementAt(11);
      expect(positionKey_0_3_11.time, moreOrLessEquals(0.458333343));
      expect(positionKey_0_3_11.value, vector3MoreOrLessEquals(Vector3(1.87486876e-07, 1.99999988, -1.3038516e-08)));
      final positionKey_0_3_12 = channel_0_3.positionKeys.elementAt(12);
      expect(positionKey_0_3_12.time, moreOrLessEquals(0.5));
      expect(positionKey_0_3_12.value, vector3MoreOrLessEquals(Vector3(7.39237294e-08, 1.99999952, -1.86264515e-09)));
      final positionKey_0_3_13 = channel_0_3.positionKeys.elementAt(13);
      expect(positionKey_0_3_13.time, moreOrLessEquals(0.541666687));
      expect(positionKey_0_3_13.value, vector3MoreOrLessEquals(Vector3(2.56113736e-07, 1.99999988, -1.3038516e-08)));
      final positionKey_0_3_14 = channel_0_3.positionKeys.elementAt(14);
      expect(positionKey_0_3_14.time, moreOrLessEquals(0.583333313));
      expect(positionKey_0_3_14.value, vector3MoreOrLessEquals(Vector3(3.7252903e-08, 1.99999988, 2.23517418e-08)));
      expect(channel_0_3.rotationKeys.length, equals(15));
      final rotationKey_0_3_0 = channel_0_3.rotationKeys.elementAt(0);
      expect(rotationKey_0_3_0.time, isZero);
      expect(rotationKey_0_3_0.value, quaternionMoreOrLessEquals(Quaternion(0, 1.50995803e-07, 1.13998658e-14, 1.13998658e-14)));
      final rotationKey_0_3_1 = channel_0_3.rotationKeys.elementAt(1);
      expect(rotationKey_0_3_1.time, moreOrLessEquals(0.0416666679));
      expect(rotationKey_0_3_1.value, quaternionMoreOrLessEquals(Quaternion(-0.000881588785, 1.24218604e-05, -0.00921024568, -0.00921024568)));
      final rotationKey_0_3_2 = channel_0_3.rotationKeys.elementAt(2);
      expect(rotationKey_0_3_2.time, moreOrLessEquals(0.0833333358));
      expect(rotationKey_0_3_2.value, quaternionMoreOrLessEquals(Quaternion(-0.00450754305, 8.42906593e-05, -0.0470651723, -0.0470651723)));
      final rotationKey_0_3_3 = channel_0_3.rotationKeys.elementAt(3);
      expect(rotationKey_0_3_3.time, moreOrLessEquals(0.125));
      expect(rotationKey_0_3_3.value, quaternionMoreOrLessEquals(Quaternion(-0.00915715192, 0.000267393276, -0.0955872238, -0.0955872238)));
      final rotationKey_0_3_4 = channel_0_3.rotationKeys.elementAt(4);
      expect(rotationKey_0_3_4.time, moreOrLessEquals(0.166666672));
      expect(rotationKey_0_3_4.value, quaternionMoreOrLessEquals(Quaternion(-0.0140246172, 0.000660107355, -0.146376684, -0.146376684)));
      final rotationKey_0_3_5 = channel_0_3.rotationKeys.elementAt(5);
      expect(rotationKey_0_3_5.time, moreOrLessEquals(0.208333328));
      expect(rotationKey_0_3_5.value, quaternionMoreOrLessEquals(Quaternion(-0.0191486198, 0.00142459734, -0.199840292, -0.199840292)));
      final rotationKey_0_3_6 = channel_0_3.rotationKeys.elementAt(6);
      expect(rotationKey_0_3_6.time, moreOrLessEquals(0.25));
      expect(rotationKey_0_3_6.value, quaternionMoreOrLessEquals(Quaternion(-0.0240685288, 0.00260027638, -0.251173019, -0.251173019)));
      final rotationKey_0_3_7 = channel_0_3.rotationKeys.elementAt(7);
      expect(rotationKey_0_3_7.time, moreOrLessEquals(0.291666657));
      expect(rotationKey_0_3_7.value, quaternionMoreOrLessEquals(Quaternion(-0.0283014141, 0.00439571962, -0.295337051, -0.295337051)));
      final rotationKey_0_3_8 = channel_0_3.rotationKeys.elementAt(8);
      expect(rotationKey_0_3_8.time, moreOrLessEquals(0.333333343));
      expect(rotationKey_0_3_8.value, quaternionMoreOrLessEquals(Quaternion(-0.0312389862, 0.00736286351, -0.3259857, -0.3259857)));
      final rotationKey_0_3_9 = channel_0_3.rotationKeys.elementAt(9);
      expect(rotationKey_0_3_9.time, moreOrLessEquals(0.375));
      expect(rotationKey_0_3_9.value, quaternionMoreOrLessEquals(Quaternion(-0.0321319364, 0.0126762409, -0.335302085, -0.335302085)));
      final rotationKey_0_3_10 = channel_0_3.rotationKeys.elementAt(10);
      expect(rotationKey_0_3_10.time, moreOrLessEquals(0.416666657));
      expect(rotationKey_0_3_10.value, quaternionMoreOrLessEquals(Quaternion(-0.0207258034, 0.0272155274, -0.309070766, -0.309070766)));
      final rotationKey_0_3_11 = channel_0_3.rotationKeys.elementAt(11);
      expect(rotationKey_0_3_11.time, moreOrLessEquals(0.458333343));
      expect(rotationKey_0_3_11.value, quaternionMoreOrLessEquals(Quaternion(0.00897378847, 0.0461850241, -0.239685193, -0.239685193)));
      final rotationKey_0_3_12 = channel_0_3.rotationKeys.elementAt(12);
      expect(rotationKey_0_3_12.time, moreOrLessEquals(0.5));
      expect(rotationKey_0_3_12.value, quaternionMoreOrLessEquals(Quaternion(0.0462179407, 0.0660942569, -0.15035896, -0.15035896)));
      final rotationKey_0_3_13 = channel_0_3.rotationKeys.elementAt(13);
      expect(rotationKey_0_3_13.time, moreOrLessEquals(0.541666687));
      expect(rotationKey_0_3_13.value, quaternionMoreOrLessEquals(Quaternion(0.0811352953, 0.0831071511, -0.0642248765, -0.0642248765)));
      final rotationKey_0_3_14 = channel_0_3.rotationKeys.elementAt(14);
      expect(rotationKey_0_3_14.time, moreOrLessEquals(0.583333313));
      expect(rotationKey_0_3_14.value, quaternionMoreOrLessEquals(Quaternion(0.0973052382, 0.0905136168, -0.0235265717, -0.0235265717)));
      expect(channel_0_3.scalingKeys.length, equals(15));
      final scalingKey_0_3_0 = channel_0_3.scalingKeys.elementAt(0);
      expect(scalingKey_0_3_0.time, isZero);
      expect(scalingKey_0_3_0.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_3_1 = channel_0_3.scalingKeys.elementAt(1);
      expect(scalingKey_0_3_1.time, moreOrLessEquals(0.0416666679));
      expect(scalingKey_0_3_1.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_3_2 = channel_0_3.scalingKeys.elementAt(2);
      expect(scalingKey_0_3_2.time, moreOrLessEquals(0.0833333358));
      expect(scalingKey_0_3_2.value, vector3MoreOrLessEquals(Vector3(0.99999994, 1, 1)));
      final scalingKey_0_3_3 = channel_0_3.scalingKeys.elementAt(3);
      expect(scalingKey_0_3_3.time, moreOrLessEquals(0.125));
      expect(scalingKey_0_3_3.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_3_4 = channel_0_3.scalingKeys.elementAt(4);
      expect(scalingKey_0_3_4.time, moreOrLessEquals(0.166666672));
      expect(scalingKey_0_3_4.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_3_5 = channel_0_3.scalingKeys.elementAt(5);
      expect(scalingKey_0_3_5.time, moreOrLessEquals(0.208333328));
      expect(scalingKey_0_3_5.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_3_6 = channel_0_3.scalingKeys.elementAt(6);
      expect(scalingKey_0_3_6.time, moreOrLessEquals(0.25));
      expect(scalingKey_0_3_6.value, vector3MoreOrLessEquals(Vector3(1, 1, 0.99999994)));
      final scalingKey_0_3_7 = channel_0_3.scalingKeys.elementAt(7);
      expect(scalingKey_0_3_7.time, moreOrLessEquals(0.291666657));
      expect(scalingKey_0_3_7.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_3_8 = channel_0_3.scalingKeys.elementAt(8);
      expect(scalingKey_0_3_8.time, moreOrLessEquals(0.333333343));
      expect(scalingKey_0_3_8.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_3_9 = channel_0_3.scalingKeys.elementAt(9);
      expect(scalingKey_0_3_9.time, moreOrLessEquals(0.375));
      expect(scalingKey_0_3_9.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_3_10 = channel_0_3.scalingKeys.elementAt(10);
      expect(scalingKey_0_3_10.time, moreOrLessEquals(0.416666657));
      expect(scalingKey_0_3_10.value, vector3MoreOrLessEquals(Vector3(1, 0.99999994, 1)));
      final scalingKey_0_3_11 = channel_0_3.scalingKeys.elementAt(11);
      expect(scalingKey_0_3_11.time, moreOrLessEquals(0.458333343));
      expect(scalingKey_0_3_11.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_3_12 = channel_0_3.scalingKeys.elementAt(12);
      expect(scalingKey_0_3_12.time, moreOrLessEquals(0.5));
      expect(scalingKey_0_3_12.value, vector3MoreOrLessEquals(Vector3(0.999999881, 1, 0.999999881)));
      final scalingKey_0_3_13 = channel_0_3.scalingKeys.elementAt(13);
      expect(scalingKey_0_3_13.time, moreOrLessEquals(0.541666687));
      expect(scalingKey_0_3_13.value, vector3MoreOrLessEquals(Vector3(1, 1, 0.99999994)));
      final scalingKey_0_3_14 = channel_0_3.scalingKeys.elementAt(14);
      expect(scalingKey_0_3_14.time, moreOrLessEquals(0.583333313));
      expect(scalingKey_0_3_14.value, vector3MoreOrLessEquals(Vector3(1, 1, 0.99999994)));
      expect(channel_0_3.preState, equals(AnimBehavior.defaults));
      expect(channel_0_3.postState, equals(AnimBehavior.defaults));
      final  channel_0_4 = animation_0.channels.elementAt(4);
      expect(channel_0_4.positionKeys.length, equals(15));
      final positionKey_0_4_0 = channel_0_4.positionKeys.elementAt(0);
      expect(positionKey_0_4_0.time, isZero);
      expect(positionKey_0_4_0.value, vector3MoreOrLessEquals(Vector3(-3.38813179e-21, 2, -2.8421723e-14)));
      final positionKey_0_4_1 = channel_0_4.positionKeys.elementAt(1);
      expect(positionKey_0_4_1.time, moreOrLessEquals(0.0416666679));
      expect(positionKey_0_4_1.value, vector3MoreOrLessEquals(Vector3(4.26172164e-09, 1.99999988, 4.55656873e-10)));
      final positionKey_0_4_2 = channel_0_4.positionKeys.elementAt(2);
      expect(positionKey_0_4_2.time, moreOrLessEquals(0.0833333358));
      expect(positionKey_0_4_2.value, vector3MoreOrLessEquals(Vector3(-2.36109372e-08, 2.00000024, 7.71251507e-09)));
      final positionKey_0_4_3 = channel_0_4.positionKeys.elementAt(3);
      expect(positionKey_0_4_3.time, moreOrLessEquals(0.125));
      expect(positionKey_0_4_3.value, vector3MoreOrLessEquals(Vector3(4.01159888e-08, 2.00000024, -1.62981451e-09)));
      final positionKey_0_4_4 = channel_0_4.positionKeys.elementAt(4);
      expect(positionKey_0_4_4.time, moreOrLessEquals(0.166666672));
      expect(positionKey_0_4_4.value, vector3MoreOrLessEquals(Vector3(1.93933374e-07, 1.99999905, -1.76951289e-08)));
      final positionKey_0_4_5 = channel_0_4.positionKeys.elementAt(5);
      expect(positionKey_0_4_5.time, moreOrLessEquals(0.208333328));
      expect(positionKey_0_4_5.value, vector3MoreOrLessEquals(Vector3(2.4860492e-07, 1.99999952, -5.58793545e-09)));
      final positionKey_0_4_6 = channel_0_4.positionKeys.elementAt(6);
      expect(positionKey_0_4_6.time, moreOrLessEquals(0.25));
      expect(positionKey_0_4_6.value, vector3MoreOrLessEquals(Vector3(-3.26544978e-07, 1.99999976, 1.11758709e-08)));
      final positionKey_0_4_7 = channel_0_4.positionKeys.elementAt(7);
      expect(positionKey_0_4_7.time, moreOrLessEquals(0.291666657));
      expect(positionKey_0_4_7.value, vector3MoreOrLessEquals(Vector3(4.76720771e-07, 2.00000024, 0)));
      final positionKey_0_4_8 = channel_0_4.positionKeys.elementAt(8);
      expect(positionKey_0_4_8.time, moreOrLessEquals(0.333333343));
      expect(positionKey_0_4_8.value, vector3MoreOrLessEquals(Vector3(-3.99537385e-07, 2.00000024, -1.49011612e-08)));
      final positionKey_0_4_9 = channel_0_4.positionKeys.elementAt(9);
      expect(positionKey_0_4_9.time, moreOrLessEquals(0.375));
      expect(positionKey_0_4_9.value, vector3MoreOrLessEquals(Vector3(2.28115823e-07, 2.00000024, -1.49011612e-08)));
      final positionKey_0_4_10 = channel_0_4.positionKeys.elementAt(10);
      expect(positionKey_0_4_10.time, moreOrLessEquals(0.416666657));
      expect(positionKey_0_4_10.value, vector3MoreOrLessEquals(Vector3(-2.17463835e-07, 2.00000048, -1.86264515e-09)));
      final positionKey_0_4_11 = channel_0_4.positionKeys.elementAt(11);
      expect(positionKey_0_4_11.time, moreOrLessEquals(0.458333343));
      expect(positionKey_0_4_11.value, vector3MoreOrLessEquals(Vector3(-3.53902578e-08, 1.99999964, 2.98023224e-08)));
      final positionKey_0_4_12 = channel_0_4.positionKeys.elementAt(12);
      expect(positionKey_0_4_12.time, moreOrLessEquals(0.5));
      expect(positionKey_0_4_12.value, vector3MoreOrLessEquals(Vector3(3.29688191e-07, 1.99999976, 1.49011612e-08)));
      final positionKey_0_4_13 = channel_0_4.positionKeys.elementAt(13);
      expect(positionKey_0_4_13.time, moreOrLessEquals(0.541666687));
      expect(positionKey_0_4_13.value, vector3MoreOrLessEquals(Vector3(1.15483999e-07, 2.00000048, 1.49011612e-08)));
      final positionKey_0_4_14 = channel_0_4.positionKeys.elementAt(14);
      expect(positionKey_0_4_14.time, moreOrLessEquals(0.583333313));
      expect(positionKey_0_4_14.value, vector3MoreOrLessEquals(Vector3(3.7252903e-09, 2.00000048, 1.49011612e-08)));
      expect(channel_0_4.rotationKeys.length, equals(15));
      final rotationKey_0_4_0 = channel_0_4.rotationKeys.elementAt(0);
      expect(rotationKey_0_4_0.time, isZero);
      expect(rotationKey_0_4_0.value, quaternionMoreOrLessEquals(Quaternion(0, -1.50995803e-07, -1.13998658e-14, -1.13998658e-14)));
      final rotationKey_0_4_1 = channel_0_4.rotationKeys.elementAt(1);
      expect(rotationKey_0_4_1.time, moreOrLessEquals(0.0416666679));
      expect(rotationKey_0_4_1.value, quaternionMoreOrLessEquals(Quaternion(-0.000819154549, 0.000191297135, -0.00855579786, -0.00855579786)));
      final rotationKey_0_4_2 = channel_0_4.rotationKeys.elementAt(2);
      expect(rotationKey_0_4_2.time, moreOrLessEquals(0.0833333358));
      expect(rotationKey_0_4_2.value, quaternionMoreOrLessEquals(Quaternion(-0.00418505631, 0.00100746483, -0.04369222, -0.04369222)));
      final rotationKey_0_4_3 = channel_0_4.rotationKeys.elementAt(3);
      expect(rotationKey_0_4_3.time, moreOrLessEquals(0.125));
      expect(rotationKey_0_4_3.value, quaternionMoreOrLessEquals(Quaternion(-0.00849603862, 0.00232020393, -0.0886799768, -0.0886799768)));
      final rotationKey_0_4_4 = channel_0_4.rotationKeys.elementAt(4);
      expect(rotationKey_0_4_4.time, moreOrLessEquals(0.166666672));
      expect(rotationKey_0_4_4.value, quaternionMoreOrLessEquals(Quaternion(-0.0130072217, 0.00383049459, -0.135752469, -0.135752469)));
      final rotationKey_0_4_5 = channel_0_4.rotationKeys.elementAt(5);
      expect(rotationKey_0_4_5.time, moreOrLessEquals(0.208333328));
      expect(rotationKey_0_4_5.value, quaternionMoreOrLessEquals(Quaternion(-0.0177597851, 0.00542502105, -0.185341731, -0.185341731)));
      final rotationKey_0_4_6 = channel_0_4.rotationKeys.elementAt(6);
      expect(rotationKey_0_4_6.time, moreOrLessEquals(0.25));
      expect(rotationKey_0_4_6.value, quaternionMoreOrLessEquals(Quaternion(-0.0223322473, 0.00704097329, -0.233050883, -0.233050883)));
      final rotationKey_0_4_7 = channel_0_4.rotationKeys.elementAt(7);
      expect(rotationKey_0_4_7.time, moreOrLessEquals(0.291666657));
      expect(rotationKey_0_4_7.value, quaternionMoreOrLessEquals(Quaternion(-0.0262779649, 0.00863857381, -0.274220079, -0.274220079)));
      final rotationKey_0_4_8 = channel_0_4.rotationKeys.elementAt(8);
      expect(rotationKey_0_4_8.time, moreOrLessEquals(0.333333343));
      expect(rotationKey_0_4_8.value, quaternionMoreOrLessEquals(Quaternion(-0.0290249772, 0.0102139898, -0.302881688, -0.302881688)));
      final rotationKey_0_4_9 = channel_0_4.rotationKeys.elementAt(9);
      expect(rotationKey_0_4_9.time, moreOrLessEquals(0.375));
      expect(rotationKey_0_4_9.value, quaternionMoreOrLessEquals(Quaternion(-0.0298627038, 0.0117807416, -0.311622292, -0.311622292)));
      final rotationKey_0_4_10 = channel_0_4.rotationKeys.elementAt(10);
      expect(rotationKey_0_4_10.time, moreOrLessEquals(0.416666657));
      expect(rotationKey_0_4_10.value, quaternionMoreOrLessEquals(Quaternion(-0.0227356497, 0.0137182958, -0.269568264, -0.269568264)));
      final rotationKey_0_4_11 = channel_0_4.rotationKeys.elementAt(11);
      expect(rotationKey_0_4_11.time, moreOrLessEquals(0.458333343));
      expect(rotationKey_0_4_11.value, quaternionMoreOrLessEquals(Quaternion(-0.00371191627, 0.015880499, -0.156025812, -0.156025812)));
      final rotationKey_0_4_12 = channel_0_4.rotationKeys.elementAt(12);
      expect(rotationKey_0_4_12.time, moreOrLessEquals(0.5));
      expect(rotationKey_0_4_12.value, quaternionMoreOrLessEquals(Quaternion(0.020561751, 0.0177793317, -0.0084615536, -0.0084615536)));
      final rotationKey_0_4_13 = channel_0_4.rotationKeys.elementAt(13);
      expect(rotationKey_0_4_13.time, moreOrLessEquals(0.541666687));
      expect(rotationKey_0_4_13.value, quaternionMoreOrLessEquals(Quaternion(0.0429885536, 0.019010311, 0.130619019, 0.130619019)));
      final rotationKey_0_4_14 = channel_0_4.rotationKeys.elementAt(14);
      expect(rotationKey_0_4_14.time, moreOrLessEquals(0.583333313));
      expect(rotationKey_0_4_14.value, quaternionMoreOrLessEquals(Quaternion(0.0530560389, 0.019400714, 0.193966493, 0.193966493)));
      expect(channel_0_4.scalingKeys.length, equals(15));
      final scalingKey_0_4_0 = channel_0_4.scalingKeys.elementAt(0);
      expect(scalingKey_0_4_0.time, isZero);
      expect(scalingKey_0_4_0.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_4_1 = channel_0_4.scalingKeys.elementAt(1);
      expect(scalingKey_0_4_1.time, moreOrLessEquals(0.0416666679));
      expect(scalingKey_0_4_1.value, vector3MoreOrLessEquals(Vector3(1, 0.99999994, 1)));
      final scalingKey_0_4_2 = channel_0_4.scalingKeys.elementAt(2);
      expect(scalingKey_0_4_2.time, moreOrLessEquals(0.0833333358));
      expect(scalingKey_0_4_2.value, vector3MoreOrLessEquals(Vector3(1, 1, 0.99999994)));
      final scalingKey_0_4_3 = channel_0_4.scalingKeys.elementAt(3);
      expect(scalingKey_0_4_3.time, moreOrLessEquals(0.125));
      expect(scalingKey_0_4_3.value, vector3MoreOrLessEquals(Vector3(0.99999994, 1, 0.99999994)));
      final scalingKey_0_4_4 = channel_0_4.scalingKeys.elementAt(4);
      expect(scalingKey_0_4_4.time, moreOrLessEquals(0.166666672));
      expect(scalingKey_0_4_4.value, vector3MoreOrLessEquals(Vector3(0.999999881, 0.999999821, 0.99999994)));
      final scalingKey_0_4_5 = channel_0_4.scalingKeys.elementAt(5);
      expect(scalingKey_0_4_5.time, moreOrLessEquals(0.208333328));
      expect(scalingKey_0_4_5.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_4_6 = channel_0_4.scalingKeys.elementAt(6);
      expect(scalingKey_0_4_6.time, moreOrLessEquals(0.25));
      expect(scalingKey_0_4_6.value, vector3MoreOrLessEquals(Vector3(0.99999994, 1, 0.99999994)));
      final scalingKey_0_4_7 = channel_0_4.scalingKeys.elementAt(7);
      expect(scalingKey_0_4_7.time, moreOrLessEquals(0.291666657));
      expect(scalingKey_0_4_7.value, vector3MoreOrLessEquals(Vector3(1.00000012, 1.00000012, 1)));
      final scalingKey_0_4_8 = channel_0_4.scalingKeys.elementAt(8);
      expect(scalingKey_0_4_8.time, moreOrLessEquals(0.333333343));
      expect(scalingKey_0_4_8.value, vector3MoreOrLessEquals(Vector3(1, 1, 0.99999994)));
      final scalingKey_0_4_9 = channel_0_4.scalingKeys.elementAt(9);
      expect(scalingKey_0_4_9.time, moreOrLessEquals(0.375));
      expect(scalingKey_0_4_9.value, vector3MoreOrLessEquals(Vector3(0.99999994, 1, 1)));
      final scalingKey_0_4_10 = channel_0_4.scalingKeys.elementAt(10);
      expect(scalingKey_0_4_10.time, moreOrLessEquals(0.416666657));
      expect(scalingKey_0_4_10.value, vector3MoreOrLessEquals(Vector3(1, 1, 1.00000012)));
      final scalingKey_0_4_11 = channel_0_4.scalingKeys.elementAt(11);
      expect(scalingKey_0_4_11.time, moreOrLessEquals(0.458333343));
      expect(scalingKey_0_4_11.value, vector3MoreOrLessEquals(Vector3(0.999999821, 0.999999881, 0.999999881)));
      final scalingKey_0_4_12 = channel_0_4.scalingKeys.elementAt(12);
      expect(scalingKey_0_4_12.time, moreOrLessEquals(0.5));
      expect(scalingKey_0_4_12.value, vector3MoreOrLessEquals(Vector3(1, 0.99999994, 1)));
      final scalingKey_0_4_13 = channel_0_4.scalingKeys.elementAt(13);
      expect(scalingKey_0_4_13.time, moreOrLessEquals(0.541666687));
      expect(scalingKey_0_4_13.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_4_14 = channel_0_4.scalingKeys.elementAt(14);
      expect(scalingKey_0_4_14.time, moreOrLessEquals(0.583333313));
      expect(scalingKey_0_4_14.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      expect(channel_0_4.preState, equals(AnimBehavior.defaults));
      expect(channel_0_4.postState, equals(AnimBehavior.defaults));
      final  channel_0_5 = animation_0.channels.elementAt(5);
      expect(channel_0_5.positionKeys.length, equals(15));
      final positionKey_0_5_0 = channel_0_5.positionKeys.elementAt(0);
      expect(positionKey_0_5_0.time, isZero);
      expect(positionKey_0_5_0.value, vector3MoreOrLessEquals(Vector3(-3.38813179e-21, 2, -2.8421723e-14)));
      final positionKey_0_5_1 = channel_0_5.positionKeys.elementAt(1);
      expect(positionKey_0_5_1.time, moreOrLessEquals(0.0416666679));
      expect(positionKey_0_5_1.value, vector3MoreOrLessEquals(Vector3(4.26172164e-09, 1.99999988, 4.55656873e-10)));
      final positionKey_0_5_2 = channel_0_5.positionKeys.elementAt(2);
      expect(positionKey_0_5_2.time, moreOrLessEquals(0.0833333358));
      expect(positionKey_0_5_2.value, vector3MoreOrLessEquals(Vector3(-2.36109372e-08, 2.00000024, 7.71251507e-09)));
      final positionKey_0_5_3 = channel_0_5.positionKeys.elementAt(3);
      expect(positionKey_0_5_3.time, moreOrLessEquals(0.125));
      expect(positionKey_0_5_3.value, vector3MoreOrLessEquals(Vector3(4.01159888e-08, 2.00000024, -1.62981451e-09)));
      final positionKey_0_5_4 = channel_0_5.positionKeys.elementAt(4);
      expect(positionKey_0_5_4.time, moreOrLessEquals(0.166666672));
      expect(positionKey_0_5_4.value, vector3MoreOrLessEquals(Vector3(1.93933374e-07, 1.99999905, -1.76951289e-08)));
      final positionKey_0_5_5 = channel_0_5.positionKeys.elementAt(5);
      expect(positionKey_0_5_5.time, moreOrLessEquals(0.208333328));
      expect(positionKey_0_5_5.value, vector3MoreOrLessEquals(Vector3(2.4860492e-07, 1.99999952, -5.58793545e-09)));
      final positionKey_0_5_6 = channel_0_5.positionKeys.elementAt(6);
      expect(positionKey_0_5_6.time, moreOrLessEquals(0.25));
      expect(positionKey_0_5_6.value, vector3MoreOrLessEquals(Vector3(-3.26544978e-07, 1.99999976, 1.11758709e-08)));
      final positionKey_0_5_7 = channel_0_5.positionKeys.elementAt(7);
      expect(positionKey_0_5_7.time, moreOrLessEquals(0.291666657));
      expect(positionKey_0_5_7.value, vector3MoreOrLessEquals(Vector3(4.76720771e-07, 2.00000024, 0)));
      final positionKey_0_5_8 = channel_0_5.positionKeys.elementAt(8);
      expect(positionKey_0_5_8.time, moreOrLessEquals(0.333333343));
      expect(positionKey_0_5_8.value, vector3MoreOrLessEquals(Vector3(-3.99537385e-07, 2.00000024, -1.49011612e-08)));
      final positionKey_0_5_9 = channel_0_5.positionKeys.elementAt(9);
      expect(positionKey_0_5_9.time, moreOrLessEquals(0.375));
      expect(positionKey_0_5_9.value, vector3MoreOrLessEquals(Vector3(2.28115823e-07, 2.00000024, -1.49011612e-08)));
      final positionKey_0_5_10 = channel_0_5.positionKeys.elementAt(10);
      expect(positionKey_0_5_10.time, moreOrLessEquals(0.416666657));
      expect(positionKey_0_5_10.value, vector3MoreOrLessEquals(Vector3(-2.17463835e-07, 2.00000048, -1.86264515e-09)));
      final positionKey_0_5_11 = channel_0_5.positionKeys.elementAt(11);
      expect(positionKey_0_5_11.time, moreOrLessEquals(0.458333343));
      expect(positionKey_0_5_11.value, vector3MoreOrLessEquals(Vector3(-3.53902578e-08, 1.99999964, 2.98023224e-08)));
      final positionKey_0_5_12 = channel_0_5.positionKeys.elementAt(12);
      expect(positionKey_0_5_12.time, moreOrLessEquals(0.5));
      expect(positionKey_0_5_12.value, vector3MoreOrLessEquals(Vector3(3.29688191e-07, 1.99999976, 1.49011612e-08)));
      final positionKey_0_5_13 = channel_0_5.positionKeys.elementAt(13);
      expect(positionKey_0_5_13.time, moreOrLessEquals(0.541666687));
      expect(positionKey_0_5_13.value, vector3MoreOrLessEquals(Vector3(1.15483999e-07, 2.00000048, 1.49011612e-08)));
      final positionKey_0_5_14 = channel_0_5.positionKeys.elementAt(14);
      expect(positionKey_0_5_14.time, moreOrLessEquals(0.583333313));
      expect(positionKey_0_5_14.value, vector3MoreOrLessEquals(Vector3(3.7252903e-09, 2.00000048, 1.49011612e-08)));
      expect(channel_0_5.rotationKeys.length, equals(15));
      final rotationKey_0_5_0 = channel_0_5.rotationKeys.elementAt(0);
      expect(rotationKey_0_5_0.time, isZero);
      expect(rotationKey_0_5_0.value, quaternionMoreOrLessEquals(Quaternion(-0.707106709, -1.06770152e-07, -1.06770159e-07, -1.06770159e-07)));
      final rotationKey_0_5_1 = channel_0_5.rotationKeys.elementAt(1);
      expect(rotationKey_0_5_1.time, moreOrLessEquals(0.0416666679));
      expect(rotationKey_0_5_1.value, quaternionMoreOrLessEquals(Quaternion(-0.707106709, -1.07332539e-07, -1.07521871e-07, -1.07521871e-07)));
      final rotationKey_0_5_2 = channel_0_5.rotationKeys.elementAt(2);
      expect(rotationKey_0_5_2.time, moreOrLessEquals(0.0833333358));
      expect(rotationKey_0_5_2.value, quaternionMoreOrLessEquals(Quaternion(-0.707106709, -1.08213676e-07, -1.09254792e-07, -1.09254792e-07)));
      final rotationKey_0_5_3 = channel_0_5.rotationKeys.elementAt(3);
      expect(rotationKey_0_5_3.time, moreOrLessEquals(0.125));
      expect(rotationKey_0_5_3.value, quaternionMoreOrLessEquals(Quaternion(-0.707106709, -1.10113909e-07, -1.06745944e-07, -1.06745944e-07)));
      final rotationKey_0_5_4 = channel_0_5.rotationKeys.elementAt(4);
      expect(rotationKey_0_5_4.time, moreOrLessEquals(0.166666672));
      expect(rotationKey_0_5_4.value, quaternionMoreOrLessEquals(Quaternion(-0.707106709, -1.03952281e-07, -1.17709689e-07, -1.17709689e-07)));
      final rotationKey_0_5_5 = channel_0_5.rotationKeys.elementAt(5);
      expect(rotationKey_0_5_5.time, moreOrLessEquals(0.208333328));
      expect(rotationKey_0_5_5.value, quaternionMoreOrLessEquals(Quaternion(-0.707106709, -1.04662263e-07, -8.74423591e-08, -8.74423591e-08)));
      final rotationKey_0_5_6 = channel_0_5.rotationKeys.elementAt(6);
      expect(rotationKey_0_5_6.time, moreOrLessEquals(0.25));
      expect(rotationKey_0_5_6.value, quaternionMoreOrLessEquals(Quaternion(-0.707106709, -1.10995614e-07, -1.07044357e-07, -1.07044357e-07)));
      final rotationKey_0_5_7 = channel_0_5.rotationKeys.elementAt(7);
      expect(rotationKey_0_5_7.time, moreOrLessEquals(0.291666657));
      expect(rotationKey_0_5_7.value, quaternionMoreOrLessEquals(Quaternion(-0.707106709, -1.06046237e-07, -1.23055202e-07, -1.23055202e-07)));
      final rotationKey_0_5_8 = channel_0_5.rotationKeys.elementAt(8);
      expect(rotationKey_0_5_8.time, moreOrLessEquals(0.333333343));
      expect(rotationKey_0_5_8.value, quaternionMoreOrLessEquals(Quaternion(-0.707106709, -1.13742978e-07, -1.09925473e-07, -1.09925473e-07)));
      final rotationKey_0_5_9 = channel_0_5.rotationKeys.elementAt(9);
      expect(rotationKey_0_5_9.time, moreOrLessEquals(0.375));
      expect(rotationKey_0_5_9.value, quaternionMoreOrLessEquals(Quaternion(-0.707106709, -9.80665291e-08, -1.0308792e-07, -1.0308792e-07)));
      final rotationKey_0_5_10 = channel_0_5.rotationKeys.elementAt(10);
      expect(rotationKey_0_5_10.time, moreOrLessEquals(0.416666657));
      expect(rotationKey_0_5_10.value, quaternionMoreOrLessEquals(Quaternion(-0.707106709, -1.09153746e-07, -1.1738554e-07, -1.1738554e-07)));
      final rotationKey_0_5_11 = channel_0_5.rotationKeys.elementAt(11);
      expect(rotationKey_0_5_11.time, moreOrLessEquals(0.458333343));
      expect(rotationKey_0_5_11.value, quaternionMoreOrLessEquals(Quaternion(-0.707106709, -1.07260441e-07, -1.11047072e-07, -1.11047072e-07)));
      final rotationKey_0_5_12 = channel_0_5.rotationKeys.elementAt(12);
      expect(rotationKey_0_5_12.time, moreOrLessEquals(0.5));
      expect(rotationKey_0_5_12.value, quaternionMoreOrLessEquals(Quaternion(-0.707106709, -1.07383904e-07, -1.19937425e-07, -1.19937425e-07)));
      final rotationKey_0_5_13 = channel_0_5.rotationKeys.elementAt(13);
      expect(rotationKey_0_5_13.time, moreOrLessEquals(0.541666687));
      expect(rotationKey_0_5_13.value, quaternionMoreOrLessEquals(Quaternion(-0.707106709, -1.04214664e-07, -1.0125121e-07, -1.0125121e-07)));
      final rotationKey_0_5_14 = channel_0_5.rotationKeys.elementAt(14);
      expect(rotationKey_0_5_14.time, moreOrLessEquals(0.583333313));
      expect(rotationKey_0_5_14.value, quaternionMoreOrLessEquals(Quaternion(-0.707106709, -1.03720751e-07, -1.04379296e-07, -1.04379296e-07)));
      expect(channel_0_5.scalingKeys.length, equals(15));
      final scalingKey_0_5_0 = channel_0_5.scalingKeys.elementAt(0);
      expect(scalingKey_0_5_0.time, isZero);
      expect(scalingKey_0_5_0.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_5_1 = channel_0_5.scalingKeys.elementAt(1);
      expect(scalingKey_0_5_1.time, moreOrLessEquals(0.0416666679));
      expect(scalingKey_0_5_1.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_5_2 = channel_0_5.scalingKeys.elementAt(2);
      expect(scalingKey_0_5_2.time, moreOrLessEquals(0.0833333358));
      expect(scalingKey_0_5_2.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_5_3 = channel_0_5.scalingKeys.elementAt(3);
      expect(scalingKey_0_5_3.time, moreOrLessEquals(0.125));
      expect(scalingKey_0_5_3.value, vector3MoreOrLessEquals(Vector3(1, 1, 1.00000012)));
      final scalingKey_0_5_4 = channel_0_5.scalingKeys.elementAt(4);
      expect(scalingKey_0_5_4.time, moreOrLessEquals(0.166666672));
      expect(scalingKey_0_5_4.value, vector3MoreOrLessEquals(Vector3(0.999999881, 0.99999994, 0.999999881)));
      final scalingKey_0_5_5 = channel_0_5.scalingKeys.elementAt(5);
      expect(scalingKey_0_5_5.time, moreOrLessEquals(0.208333328));
      expect(scalingKey_0_5_5.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_5_6 = channel_0_5.scalingKeys.elementAt(6);
      expect(scalingKey_0_5_6.time, moreOrLessEquals(0.25));
      expect(scalingKey_0_5_6.value, vector3MoreOrLessEquals(Vector3(1, 0.99999994, 0.99999994)));
      final scalingKey_0_5_7 = channel_0_5.scalingKeys.elementAt(7);
      expect(scalingKey_0_5_7.time, moreOrLessEquals(0.291666657));
      expect(scalingKey_0_5_7.value, vector3MoreOrLessEquals(Vector3(1, 1, 1.00000012)));
      final scalingKey_0_5_8 = channel_0_5.scalingKeys.elementAt(8);
      expect(scalingKey_0_5_8.time, moreOrLessEquals(0.333333343));
      expect(scalingKey_0_5_8.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_5_9 = channel_0_5.scalingKeys.elementAt(9);
      expect(scalingKey_0_5_9.time, moreOrLessEquals(0.375));
      expect(scalingKey_0_5_9.value, vector3MoreOrLessEquals(Vector3(1, 1.00000012, 1)));
      final scalingKey_0_5_10 = channel_0_5.scalingKeys.elementAt(10);
      expect(scalingKey_0_5_10.time, moreOrLessEquals(0.416666657));
      expect(scalingKey_0_5_10.value, vector3MoreOrLessEquals(Vector3(1, 1.00000012, 1.00000024)));
      final scalingKey_0_5_11 = channel_0_5.scalingKeys.elementAt(11);
      expect(scalingKey_0_5_11.time, moreOrLessEquals(0.458333343));
      expect(scalingKey_0_5_11.value, vector3MoreOrLessEquals(Vector3(0.99999994, 0.999999881, 0.999999881)));
      final scalingKey_0_5_12 = channel_0_5.scalingKeys.elementAt(12);
      expect(scalingKey_0_5_12.time, moreOrLessEquals(0.5));
      expect(scalingKey_0_5_12.value, vector3MoreOrLessEquals(Vector3(1, 0.99999994, 0.99999994)));
      final scalingKey_0_5_13 = channel_0_5.scalingKeys.elementAt(13);
      expect(scalingKey_0_5_13.time, moreOrLessEquals(0.541666687));
      expect(scalingKey_0_5_13.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_0_5_14 = channel_0_5.scalingKeys.elementAt(14);
      expect(scalingKey_0_5_14.time, moreOrLessEquals(0.583333313));
      expect(scalingKey_0_5_14.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      expect(channel_0_5.preState, equals(AnimBehavior.defaults));
      expect(channel_0_5.postState, equals(AnimBehavior.defaults));
      expect(animation_0.meshChannels.length, isZero);
      expect(animation_0.meshMorphChannels.length, isZero);

      final animation_1 = animations.elementAt(1);
      expect(animation_1.name, equals('turn'));
      expect(animation_1.duration, moreOrLessEquals(0.833333313));
      expect(animation_1.ticksPerSecond, moreOrLessEquals(1));
      expect(animation_1.channels.length, equals(6));
      final  channel_1_0 = animation_1.channels.elementAt(0);
      expect(channel_1_0.positionKeys.length, equals(21));
      final positionKey_1_0_0 = channel_1_0.positionKeys.elementAt(0);
      expect(positionKey_1_0_0.time, isZero);
      expect(positionKey_1_0_0.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_1_0_1 = channel_1_0.positionKeys.elementAt(1);
      expect(positionKey_1_0_1.time, moreOrLessEquals(0.0416666679));
      expect(positionKey_1_0_1.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_1_0_2 = channel_1_0.positionKeys.elementAt(2);
      expect(positionKey_1_0_2.time, moreOrLessEquals(0.0833333358));
      expect(positionKey_1_0_2.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_1_0_3 = channel_1_0.positionKeys.elementAt(3);
      expect(positionKey_1_0_3.time, moreOrLessEquals(0.125));
      expect(positionKey_1_0_3.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_1_0_4 = channel_1_0.positionKeys.elementAt(4);
      expect(positionKey_1_0_4.time, moreOrLessEquals(0.166666672));
      expect(positionKey_1_0_4.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_1_0_5 = channel_1_0.positionKeys.elementAt(5);
      expect(positionKey_1_0_5.time, moreOrLessEquals(0.208333328));
      expect(positionKey_1_0_5.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_1_0_6 = channel_1_0.positionKeys.elementAt(6);
      expect(positionKey_1_0_6.time, moreOrLessEquals(0.25));
      expect(positionKey_1_0_6.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_1_0_7 = channel_1_0.positionKeys.elementAt(7);
      expect(positionKey_1_0_7.time, moreOrLessEquals(0.291666657));
      expect(positionKey_1_0_7.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_1_0_8 = channel_1_0.positionKeys.elementAt(8);
      expect(positionKey_1_0_8.time, moreOrLessEquals(0.333333343));
      expect(positionKey_1_0_8.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_1_0_9 = channel_1_0.positionKeys.elementAt(9);
      expect(positionKey_1_0_9.time, moreOrLessEquals(0.375));
      expect(positionKey_1_0_9.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_1_0_10 = channel_1_0.positionKeys.elementAt(10);
      expect(positionKey_1_0_10.time, moreOrLessEquals(0.416666657));
      expect(positionKey_1_0_10.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_1_0_11 = channel_1_0.positionKeys.elementAt(11);
      expect(positionKey_1_0_11.time, moreOrLessEquals(0.458333343));
      expect(positionKey_1_0_11.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_1_0_12 = channel_1_0.positionKeys.elementAt(12);
      expect(positionKey_1_0_12.time, moreOrLessEquals(0.5));
      expect(positionKey_1_0_12.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_1_0_13 = channel_1_0.positionKeys.elementAt(13);
      expect(positionKey_1_0_13.time, moreOrLessEquals(0.541666687));
      expect(positionKey_1_0_13.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_1_0_14 = channel_1_0.positionKeys.elementAt(14);
      expect(positionKey_1_0_14.time, moreOrLessEquals(0.583333313));
      expect(positionKey_1_0_14.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_1_0_15 = channel_1_0.positionKeys.elementAt(15);
      expect(positionKey_1_0_15.time, moreOrLessEquals(0.625));
      expect(positionKey_1_0_15.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_1_0_16 = channel_1_0.positionKeys.elementAt(16);
      expect(positionKey_1_0_16.time, moreOrLessEquals(0.666666687));
      expect(positionKey_1_0_16.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_1_0_17 = channel_1_0.positionKeys.elementAt(17);
      expect(positionKey_1_0_17.time, moreOrLessEquals(0.708333313));
      expect(positionKey_1_0_17.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_1_0_18 = channel_1_0.positionKeys.elementAt(18);
      expect(positionKey_1_0_18.time, moreOrLessEquals(0.75));
      expect(positionKey_1_0_18.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_1_0_19 = channel_1_0.positionKeys.elementAt(19);
      expect(positionKey_1_0_19.time, moreOrLessEquals(0.791666687));
      expect(positionKey_1_0_19.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      final positionKey_1_0_20 = channel_1_0.positionKeys.elementAt(20);
      expect(positionKey_1_0_20.time, moreOrLessEquals(0.833333313));
      expect(positionKey_1_0_20.value, vector3MoreOrLessEquals(Vector3(0, 0, 0)));
      expect(channel_1_0.rotationKeys.length, equals(21));
      final rotationKey_1_0_0 = channel_1_0.rotationKeys.elementAt(0);
      expect(rotationKey_1_0_0.time, isZero);
      expect(rotationKey_1_0_0.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0, 0)));
      final rotationKey_1_0_1 = channel_1_0.rotationKeys.elementAt(1);
      expect(rotationKey_1_0_1.time, moreOrLessEquals(0.0416666679));
      expect(rotationKey_1_0_1.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0, 0)));
      final rotationKey_1_0_2 = channel_1_0.rotationKeys.elementAt(2);
      expect(rotationKey_1_0_2.time, moreOrLessEquals(0.0833333358));
      expect(rotationKey_1_0_2.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0, 0)));
      final rotationKey_1_0_3 = channel_1_0.rotationKeys.elementAt(3);
      expect(rotationKey_1_0_3.time, moreOrLessEquals(0.125));
      expect(rotationKey_1_0_3.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0, 0)));
      final rotationKey_1_0_4 = channel_1_0.rotationKeys.elementAt(4);
      expect(rotationKey_1_0_4.time, moreOrLessEquals(0.166666672));
      expect(rotationKey_1_0_4.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0, 0)));
      final rotationKey_1_0_5 = channel_1_0.rotationKeys.elementAt(5);
      expect(rotationKey_1_0_5.time, moreOrLessEquals(0.208333328));
      expect(rotationKey_1_0_5.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0, 0)));
      final rotationKey_1_0_6 = channel_1_0.rotationKeys.elementAt(6);
      expect(rotationKey_1_0_6.time, moreOrLessEquals(0.25));
      expect(rotationKey_1_0_6.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0, 0)));
      final rotationKey_1_0_7 = channel_1_0.rotationKeys.elementAt(7);
      expect(rotationKey_1_0_7.time, moreOrLessEquals(0.291666657));
      expect(rotationKey_1_0_7.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0, 0)));
      final rotationKey_1_0_8 = channel_1_0.rotationKeys.elementAt(8);
      expect(rotationKey_1_0_8.time, moreOrLessEquals(0.333333343));
      expect(rotationKey_1_0_8.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0, 0)));
      final rotationKey_1_0_9 = channel_1_0.rotationKeys.elementAt(9);
      expect(rotationKey_1_0_9.time, moreOrLessEquals(0.375));
      expect(rotationKey_1_0_9.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0, 0)));
      final rotationKey_1_0_10 = channel_1_0.rotationKeys.elementAt(10);
      expect(rotationKey_1_0_10.time, moreOrLessEquals(0.416666657));
      expect(rotationKey_1_0_10.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0, 0)));
      final rotationKey_1_0_11 = channel_1_0.rotationKeys.elementAt(11);
      expect(rotationKey_1_0_11.time, moreOrLessEquals(0.458333343));
      expect(rotationKey_1_0_11.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0, 0)));
      final rotationKey_1_0_12 = channel_1_0.rotationKeys.elementAt(12);
      expect(rotationKey_1_0_12.time, moreOrLessEquals(0.5));
      expect(rotationKey_1_0_12.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0, 0)));
      final rotationKey_1_0_13 = channel_1_0.rotationKeys.elementAt(13);
      expect(rotationKey_1_0_13.time, moreOrLessEquals(0.541666687));
      expect(rotationKey_1_0_13.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0, 0)));
      final rotationKey_1_0_14 = channel_1_0.rotationKeys.elementAt(14);
      expect(rotationKey_1_0_14.time, moreOrLessEquals(0.583333313));
      expect(rotationKey_1_0_14.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0, 0)));
      final rotationKey_1_0_15 = channel_1_0.rotationKeys.elementAt(15);
      expect(rotationKey_1_0_15.time, moreOrLessEquals(0.625));
      expect(rotationKey_1_0_15.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0, 0)));
      final rotationKey_1_0_16 = channel_1_0.rotationKeys.elementAt(16);
      expect(rotationKey_1_0_16.time, moreOrLessEquals(0.666666687));
      expect(rotationKey_1_0_16.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0, 0)));
      final rotationKey_1_0_17 = channel_1_0.rotationKeys.elementAt(17);
      expect(rotationKey_1_0_17.time, moreOrLessEquals(0.708333313));
      expect(rotationKey_1_0_17.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0, 0)));
      final rotationKey_1_0_18 = channel_1_0.rotationKeys.elementAt(18);
      expect(rotationKey_1_0_18.time, moreOrLessEquals(0.75));
      expect(rotationKey_1_0_18.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0, 0)));
      final rotationKey_1_0_19 = channel_1_0.rotationKeys.elementAt(19);
      expect(rotationKey_1_0_19.time, moreOrLessEquals(0.791666687));
      expect(rotationKey_1_0_19.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0, 0)));
      final rotationKey_1_0_20 = channel_1_0.rotationKeys.elementAt(20);
      expect(rotationKey_1_0_20.time, moreOrLessEquals(0.833333313));
      expect(rotationKey_1_0_20.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0, 0)));
      expect(channel_1_0.scalingKeys.length, equals(21));
      final scalingKey_1_0_0 = channel_1_0.scalingKeys.elementAt(0);
      expect(scalingKey_1_0_0.time, isZero);
      expect(scalingKey_1_0_0.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_1_0_1 = channel_1_0.scalingKeys.elementAt(1);
      expect(scalingKey_1_0_1.time, moreOrLessEquals(0.0416666679));
      expect(scalingKey_1_0_1.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_1_0_2 = channel_1_0.scalingKeys.elementAt(2);
      expect(scalingKey_1_0_2.time, moreOrLessEquals(0.0833333358));
      expect(scalingKey_1_0_2.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_1_0_3 = channel_1_0.scalingKeys.elementAt(3);
      expect(scalingKey_1_0_3.time, moreOrLessEquals(0.125));
      expect(scalingKey_1_0_3.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_1_0_4 = channel_1_0.scalingKeys.elementAt(4);
      expect(scalingKey_1_0_4.time, moreOrLessEquals(0.166666672));
      expect(scalingKey_1_0_4.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_1_0_5 = channel_1_0.scalingKeys.elementAt(5);
      expect(scalingKey_1_0_5.time, moreOrLessEquals(0.208333328));
      expect(scalingKey_1_0_5.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_1_0_6 = channel_1_0.scalingKeys.elementAt(6);
      expect(scalingKey_1_0_6.time, moreOrLessEquals(0.25));
      expect(scalingKey_1_0_6.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_1_0_7 = channel_1_0.scalingKeys.elementAt(7);
      expect(scalingKey_1_0_7.time, moreOrLessEquals(0.291666657));
      expect(scalingKey_1_0_7.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_1_0_8 = channel_1_0.scalingKeys.elementAt(8);
      expect(scalingKey_1_0_8.time, moreOrLessEquals(0.333333343));
      expect(scalingKey_1_0_8.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_1_0_9 = channel_1_0.scalingKeys.elementAt(9);
      expect(scalingKey_1_0_9.time, moreOrLessEquals(0.375));
      expect(scalingKey_1_0_9.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_1_0_10 = channel_1_0.scalingKeys.elementAt(10);
      expect(scalingKey_1_0_10.time, moreOrLessEquals(0.416666657));
      expect(scalingKey_1_0_10.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_1_0_11 = channel_1_0.scalingKeys.elementAt(11);
      expect(scalingKey_1_0_11.time, moreOrLessEquals(0.458333343));
      expect(scalingKey_1_0_11.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_1_0_12 = channel_1_0.scalingKeys.elementAt(12);
      expect(scalingKey_1_0_12.time, moreOrLessEquals(0.5));
      expect(scalingKey_1_0_12.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_1_0_13 = channel_1_0.scalingKeys.elementAt(13);
      expect(scalingKey_1_0_13.time, moreOrLessEquals(0.541666687));
      expect(scalingKey_1_0_13.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_1_0_14 = channel_1_0.scalingKeys.elementAt(14);
      expect(scalingKey_1_0_14.time, moreOrLessEquals(0.583333313));
      expect(scalingKey_1_0_14.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_1_0_15 = channel_1_0.scalingKeys.elementAt(15);
      expect(scalingKey_1_0_15.time, moreOrLessEquals(0.625));
      expect(scalingKey_1_0_15.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_1_0_16 = channel_1_0.scalingKeys.elementAt(16);
      expect(scalingKey_1_0_16.time, moreOrLessEquals(0.666666687));
      expect(scalingKey_1_0_16.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_1_0_17 = channel_1_0.scalingKeys.elementAt(17);
      expect(scalingKey_1_0_17.time, moreOrLessEquals(0.708333313));
      expect(scalingKey_1_0_17.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_1_0_18 = channel_1_0.scalingKeys.elementAt(18);
      expect(scalingKey_1_0_18.time, moreOrLessEquals(0.75));
      expect(scalingKey_1_0_18.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_1_0_19 = channel_1_0.scalingKeys.elementAt(19);
      expect(scalingKey_1_0_19.time, moreOrLessEquals(0.791666687));
      expect(scalingKey_1_0_19.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_1_0_20 = channel_1_0.scalingKeys.elementAt(20);
      expect(scalingKey_1_0_20.time, moreOrLessEquals(0.833333313));
      expect(scalingKey_1_0_20.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      expect(channel_1_0.preState, equals(AnimBehavior.defaults));
      expect(channel_1_0.postState, equals(AnimBehavior.defaults));
      final  channel_1_1 = animation_1.channels.elementAt(1);
      expect(channel_1_1.positionKeys.length, equals(21));
      final positionKey_1_1_0 = channel_1_1.positionKeys.elementAt(0);
      expect(positionKey_1_1_0.time, isZero);
      expect(positionKey_1_1_0.value, vector3MoreOrLessEquals(Vector3(0, 0, -1)));
      final positionKey_1_1_1 = channel_1_1.positionKeys.elementAt(1);
      expect(positionKey_1_1_1.time, moreOrLessEquals(0.0416666679));
      expect(positionKey_1_1_1.value, vector3MoreOrLessEquals(Vector3(0, 0, -1)));
      final positionKey_1_1_2 = channel_1_1.positionKeys.elementAt(2);
      expect(positionKey_1_1_2.time, moreOrLessEquals(0.0833333358));
      expect(positionKey_1_1_2.value, vector3MoreOrLessEquals(Vector3(0, 0, -1)));
      final positionKey_1_1_3 = channel_1_1.positionKeys.elementAt(3);
      expect(positionKey_1_1_3.time, moreOrLessEquals(0.125));
      expect(positionKey_1_1_3.value, vector3MoreOrLessEquals(Vector3(0, 0, -1)));
      final positionKey_1_1_4 = channel_1_1.positionKeys.elementAt(4);
      expect(positionKey_1_1_4.time, moreOrLessEquals(0.166666672));
      expect(positionKey_1_1_4.value, vector3MoreOrLessEquals(Vector3(0, 0, -1)));
      final positionKey_1_1_5 = channel_1_1.positionKeys.elementAt(5);
      expect(positionKey_1_1_5.time, moreOrLessEquals(0.208333328));
      expect(positionKey_1_1_5.value, vector3MoreOrLessEquals(Vector3(0, 0, -1)));
      final positionKey_1_1_6 = channel_1_1.positionKeys.elementAt(6);
      expect(positionKey_1_1_6.time, moreOrLessEquals(0.25));
      expect(positionKey_1_1_6.value, vector3MoreOrLessEquals(Vector3(0, 0, -1)));
      final positionKey_1_1_7 = channel_1_1.positionKeys.elementAt(7);
      expect(positionKey_1_1_7.time, moreOrLessEquals(0.291666657));
      expect(positionKey_1_1_7.value, vector3MoreOrLessEquals(Vector3(0, 0, -1)));
      final positionKey_1_1_8 = channel_1_1.positionKeys.elementAt(8);
      expect(positionKey_1_1_8.time, moreOrLessEquals(0.333333343));
      expect(positionKey_1_1_8.value, vector3MoreOrLessEquals(Vector3(0, 0, -1)));
      final positionKey_1_1_9 = channel_1_1.positionKeys.elementAt(9);
      expect(positionKey_1_1_9.time, moreOrLessEquals(0.375));
      expect(positionKey_1_1_9.value, vector3MoreOrLessEquals(Vector3(0, 0, -1)));
      final positionKey_1_1_10 = channel_1_1.positionKeys.elementAt(10);
      expect(positionKey_1_1_10.time, moreOrLessEquals(0.416666657));
      expect(positionKey_1_1_10.value, vector3MoreOrLessEquals(Vector3(0, 0, -1)));
      final positionKey_1_1_11 = channel_1_1.positionKeys.elementAt(11);
      expect(positionKey_1_1_11.time, moreOrLessEquals(0.458333343));
      expect(positionKey_1_1_11.value, vector3MoreOrLessEquals(Vector3(0, 0, -1)));
      final positionKey_1_1_12 = channel_1_1.positionKeys.elementAt(12);
      expect(positionKey_1_1_12.time, moreOrLessEquals(0.5));
      expect(positionKey_1_1_12.value, vector3MoreOrLessEquals(Vector3(0, 0, -1)));
      final positionKey_1_1_13 = channel_1_1.positionKeys.elementAt(13);
      expect(positionKey_1_1_13.time, moreOrLessEquals(0.541666687));
      expect(positionKey_1_1_13.value, vector3MoreOrLessEquals(Vector3(0, 0, -1)));
      final positionKey_1_1_14 = channel_1_1.positionKeys.elementAt(14);
      expect(positionKey_1_1_14.time, moreOrLessEquals(0.583333313));
      expect(positionKey_1_1_14.value, vector3MoreOrLessEquals(Vector3(0, 0, -1)));
      final positionKey_1_1_15 = channel_1_1.positionKeys.elementAt(15);
      expect(positionKey_1_1_15.time, moreOrLessEquals(0.625));
      expect(positionKey_1_1_15.value, vector3MoreOrLessEquals(Vector3(0, 0, -1)));
      final positionKey_1_1_16 = channel_1_1.positionKeys.elementAt(16);
      expect(positionKey_1_1_16.time, moreOrLessEquals(0.666666687));
      expect(positionKey_1_1_16.value, vector3MoreOrLessEquals(Vector3(0, 0, -1)));
      final positionKey_1_1_17 = channel_1_1.positionKeys.elementAt(17);
      expect(positionKey_1_1_17.time, moreOrLessEquals(0.708333313));
      expect(positionKey_1_1_17.value, vector3MoreOrLessEquals(Vector3(0, 0, -1)));
      final positionKey_1_1_18 = channel_1_1.positionKeys.elementAt(18);
      expect(positionKey_1_1_18.time, moreOrLessEquals(0.75));
      expect(positionKey_1_1_18.value, vector3MoreOrLessEquals(Vector3(0, 0, -1)));
      final positionKey_1_1_19 = channel_1_1.positionKeys.elementAt(19);
      expect(positionKey_1_1_19.time, moreOrLessEquals(0.791666687));
      expect(positionKey_1_1_19.value, vector3MoreOrLessEquals(Vector3(0, 0, -1)));
      final positionKey_1_1_20 = channel_1_1.positionKeys.elementAt(20);
      expect(positionKey_1_1_20.time, moreOrLessEquals(0.833333313));
      expect(positionKey_1_1_20.value, vector3MoreOrLessEquals(Vector3(0, 0, -1)));
      expect(channel_1_1.rotationKeys.length, equals(21));
      final rotationKey_1_1_0 = channel_1_1.rotationKeys.elementAt(0);
      expect(rotationKey_1_1_0.time, isZero);
      expect(rotationKey_1_1_0.value, quaternionMoreOrLessEquals(Quaternion(0.707106709, 0, 0, 0)));
      final rotationKey_1_1_1 = channel_1_1.rotationKeys.elementAt(1);
      expect(rotationKey_1_1_1.time, moreOrLessEquals(0.0416666679));
      expect(rotationKey_1_1_1.value, quaternionMoreOrLessEquals(Quaternion(0.70632112, 0.0333244689, 0.0333244652, 0.0333244652)));
      final rotationKey_1_1_2 = channel_1_1.rotationKeys.elementAt(2);
      expect(rotationKey_1_1_2.time, moreOrLessEquals(0.0833333358));
      expect(rotationKey_1_1_2.value, quaternionMoreOrLessEquals(Quaternion(0.694158733, 0.134698153, 0.134698138, 0.134698138)));
      final rotationKey_1_1_3 = channel_1_1.rotationKeys.elementAt(3);
      expect(rotationKey_1_1_3.time, moreOrLessEquals(0.125));
      expect(rotationKey_1_1_3.value, quaternionMoreOrLessEquals(Quaternion(0.649861574, 0.278711051, 0.278711051, 0.278711051)));
      final rotationKey_1_1_4 = channel_1_1.rotationKeys.elementAt(4);
      expect(rotationKey_1_1_4.time, moreOrLessEquals(0.166666672));
      expect(rotationKey_1_1_4.value, quaternionMoreOrLessEquals(Quaternion(0.576183319, 0.409893543, 0.409893513, 0.409893513)));
      final rotationKey_1_1_5 = channel_1_1.rotationKeys.elementAt(5);
      expect(rotationKey_1_1_5.time, moreOrLessEquals(0.208333328));
      expect(rotationKey_1_1_5.value, quaternionMoreOrLessEquals(Quaternion(0.49999994, 0.5, 0.50000006, 0.50000006)));
      final rotationKey_1_1_6 = channel_1_1.rotationKeys.elementAt(6);
      expect(rotationKey_1_1_6.time, moreOrLessEquals(0.25));
      expect(rotationKey_1_1_6.value, quaternionMoreOrLessEquals(Quaternion(0.420527637, 0.568468571, 0.568468571, 0.568468571)));
      final rotationKey_1_1_7 = channel_1_1.rotationKeys.elementAt(7);
      expect(rotationKey_1_1_7.time, moreOrLessEquals(0.291666657));
      expect(rotationKey_1_1_7.value, quaternionMoreOrLessEquals(Quaternion(0.323955923, 0.628532052, 0.628532052, 0.628532052)));
      final rotationKey_1_1_8 = channel_1_1.rotationKeys.elementAt(8);
      expect(rotationKey_1_1_8.time, moreOrLessEquals(0.333333343));
      expect(rotationKey_1_1_8.value, quaternionMoreOrLessEquals(Quaternion(0.215367779, 0.67351079, 0.67351073, 0.67351073)));
      final rotationKey_1_1_9 = channel_1_1.rotationKeys.elementAt(9);
      expect(rotationKey_1_1_9.time, moreOrLessEquals(0.375));
      expect(rotationKey_1_1_9.value, quaternionMoreOrLessEquals(Quaternion(0.104610085, 0.699325979, 0.699325919, 0.699325919)));
      final rotationKey_1_1_10 = channel_1_1.rotationKeys.elementAt(10);
      expect(rotationKey_1_1_10.time, moreOrLessEquals(0.416666657));
      expect(rotationKey_1_1_10.value, quaternionMoreOrLessEquals(Quaternion(-2.01523114e-15, 0.707106769, 0.707106769, 0.707106769)));
      final rotationKey_1_1_11 = channel_1_1.rotationKeys.elementAt(11);
      expect(rotationKey_1_1_11.time, moreOrLessEquals(0.458333343));
      expect(rotationKey_1_1_11.value, quaternionMoreOrLessEquals(Quaternion(-0.104610078, 0.699325919, 0.699325979, 0.699325979)));
      final rotationKey_1_1_12 = channel_1_1.rotationKeys.elementAt(12);
      expect(rotationKey_1_1_12.time, moreOrLessEquals(0.5));
      expect(rotationKey_1_1_12.value, quaternionMoreOrLessEquals(Quaternion(-0.215367749, 0.67351073, 0.67351079, 0.67351079)));
      final rotationKey_1_1_13 = channel_1_1.rotationKeys.elementAt(13);
      expect(rotationKey_1_1_13.time, moreOrLessEquals(0.541666687));
      expect(rotationKey_1_1_13.value, quaternionMoreOrLessEquals(Quaternion(-0.323955923, 0.628531992, 0.628532112, 0.628532112)));
      final rotationKey_1_1_14 = channel_1_1.rotationKeys.elementAt(14);
      expect(rotationKey_1_1_14.time, moreOrLessEquals(0.583333313));
      expect(rotationKey_1_1_14.value, quaternionMoreOrLessEquals(Quaternion(-0.420527577, 0.568468571, 0.56846863, 0.56846863)));
      final rotationKey_1_1_15 = channel_1_1.rotationKeys.elementAt(15);
      expect(rotationKey_1_1_15.time, moreOrLessEquals(0.625));
      expect(rotationKey_1_1_15.value, quaternionMoreOrLessEquals(Quaternion(-0.49999994, 0.5, 0.50000006, 0.50000006)));
      final rotationKey_1_1_16 = channel_1_1.rotationKeys.elementAt(16);
      expect(rotationKey_1_1_16.time, moreOrLessEquals(0.666666687));
      expect(rotationKey_1_1_16.value, quaternionMoreOrLessEquals(Quaternion(0.576183319, -0.409893483, -0.409893513, -0.409893513)));
      final rotationKey_1_1_17 = channel_1_1.rotationKeys.elementAt(17);
      expect(rotationKey_1_1_17.time, moreOrLessEquals(0.708333313));
      expect(rotationKey_1_1_17.value, quaternionMoreOrLessEquals(Quaternion(0.649861574, -0.278711021, -0.278711081, -0.278711081)));
      final rotationKey_1_1_18 = channel_1_1.rotationKeys.elementAt(18);
      expect(rotationKey_1_1_18.time, moreOrLessEquals(0.75));
      expect(rotationKey_1_1_18.value, quaternionMoreOrLessEquals(Quaternion(0.694158792, -0.134698108, -0.134698197, -0.134698197)));
      final rotationKey_1_1_19 = channel_1_1.rotationKeys.elementAt(19);
      expect(rotationKey_1_1_19.time, moreOrLessEquals(0.791666687));
      expect(rotationKey_1_1_19.value, quaternionMoreOrLessEquals(Quaternion(0.70632112, -0.0333244391, -0.0333245099, -0.0333245099)));
      final rotationKey_1_1_20 = channel_1_1.rotationKeys.elementAt(20);
      expect(rotationKey_1_1_20.time, moreOrLessEquals(0.833333313));
      expect(rotationKey_1_1_20.value, quaternionMoreOrLessEquals(Quaternion(0.707106709, 1.77635652e-15, -1.77635642e-15, -1.77635642e-15)));
      expect(channel_1_1.scalingKeys.length, equals(21));
      final scalingKey_1_1_0 = channel_1_1.scalingKeys.elementAt(0);
      expect(scalingKey_1_1_0.time, isZero);
      expect(scalingKey_1_1_0.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_1_1_1 = channel_1_1.scalingKeys.elementAt(1);
      expect(scalingKey_1_1_1.time, moreOrLessEquals(0.0416666679));
      expect(scalingKey_1_1_1.value, vector3MoreOrLessEquals(Vector3(0.99999994, 1, 0.99999994)));
      final scalingKey_1_1_2 = channel_1_1.scalingKeys.elementAt(2);
      expect(scalingKey_1_1_2.time, moreOrLessEquals(0.0833333358));
      expect(scalingKey_1_1_2.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_1_1_3 = channel_1_1.scalingKeys.elementAt(3);
      expect(scalingKey_1_1_3.time, moreOrLessEquals(0.125));
      expect(scalingKey_1_1_3.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_1_1_4 = channel_1_1.scalingKeys.elementAt(4);
      expect(scalingKey_1_1_4.time, moreOrLessEquals(0.166666672));
      expect(scalingKey_1_1_4.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_1_1_5 = channel_1_1.scalingKeys.elementAt(5);
      expect(scalingKey_1_1_5.time, moreOrLessEquals(0.208333328));
      expect(scalingKey_1_1_5.value, vector3MoreOrLessEquals(Vector3(1.00000012, 1, 1.00000012)));
      final scalingKey_1_1_6 = channel_1_1.scalingKeys.elementAt(6);
      expect(scalingKey_1_1_6.time, moreOrLessEquals(0.25));
      expect(scalingKey_1_1_6.value, vector3MoreOrLessEquals(Vector3(0.999999821, 1, 0.999999821)));
      final scalingKey_1_1_7 = channel_1_1.scalingKeys.elementAt(7);
      expect(scalingKey_1_1_7.time, moreOrLessEquals(0.291666657));
      expect(scalingKey_1_1_7.value, vector3MoreOrLessEquals(Vector3(1.00000012, 1, 1.00000012)));
      final scalingKey_1_1_8 = channel_1_1.scalingKeys.elementAt(8);
      expect(scalingKey_1_1_8.time, moreOrLessEquals(0.333333343));
      expect(scalingKey_1_1_8.value, vector3MoreOrLessEquals(Vector3(1.00000012, 1, 1.00000012)));
      final scalingKey_1_1_9 = channel_1_1.scalingKeys.elementAt(9);
      expect(scalingKey_1_1_9.time, moreOrLessEquals(0.375));
      expect(scalingKey_1_1_9.value, vector3MoreOrLessEquals(Vector3(0.999999821, 1, 0.999999821)));
      final scalingKey_1_1_10 = channel_1_1.scalingKeys.elementAt(10);
      expect(scalingKey_1_1_10.time, moreOrLessEquals(0.416666657));
      expect(scalingKey_1_1_10.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_1_1_11 = channel_1_1.scalingKeys.elementAt(11);
      expect(scalingKey_1_1_11.time, moreOrLessEquals(0.458333343));
      expect(scalingKey_1_1_11.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_1_1_12 = channel_1_1.scalingKeys.elementAt(12);
      expect(scalingKey_1_1_12.time, moreOrLessEquals(0.5));
      expect(scalingKey_1_1_12.value, vector3MoreOrLessEquals(Vector3(1.00000012, 1, 1.00000012)));
      final scalingKey_1_1_13 = channel_1_1.scalingKeys.elementAt(13);
      expect(scalingKey_1_1_13.time, moreOrLessEquals(0.541666687));
      expect(scalingKey_1_1_13.value, vector3MoreOrLessEquals(Vector3(1.00000012, 1, 1.00000012)));
      final scalingKey_1_1_14 = channel_1_1.scalingKeys.elementAt(14);
      expect(scalingKey_1_1_14.time, moreOrLessEquals(0.583333313));
      expect(scalingKey_1_1_14.value, vector3MoreOrLessEquals(Vector3(0.99999994, 1, 0.99999994)));
      final scalingKey_1_1_15 = channel_1_1.scalingKeys.elementAt(15);
      expect(scalingKey_1_1_15.time, moreOrLessEquals(0.625));
      expect(scalingKey_1_1_15.value, vector3MoreOrLessEquals(Vector3(1.00000012, 1, 1.00000012)));
      final scalingKey_1_1_16 = channel_1_1.scalingKeys.elementAt(16);
      expect(scalingKey_1_1_16.time, moreOrLessEquals(0.666666687));
      expect(scalingKey_1_1_16.value, vector3MoreOrLessEquals(Vector3(1.00000012, 1, 1.00000012)));
      final scalingKey_1_1_17 = channel_1_1.scalingKeys.elementAt(17);
      expect(scalingKey_1_1_17.time, moreOrLessEquals(0.708333313));
      expect(scalingKey_1_1_17.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_1_1_18 = channel_1_1.scalingKeys.elementAt(18);
      expect(scalingKey_1_1_18.time, moreOrLessEquals(0.75));
      expect(scalingKey_1_1_18.value, vector3MoreOrLessEquals(Vector3(0.99999994, 1, 0.99999994)));
      final scalingKey_1_1_19 = channel_1_1.scalingKeys.elementAt(19);
      expect(scalingKey_1_1_19.time, moreOrLessEquals(0.791666687));
      expect(scalingKey_1_1_19.value, vector3MoreOrLessEquals(Vector3(0.99999994, 1, 0.99999994)));
      final scalingKey_1_1_20 = channel_1_1.scalingKeys.elementAt(20);
      expect(scalingKey_1_1_20.time, moreOrLessEquals(0.833333313));
      expect(scalingKey_1_1_20.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      expect(channel_1_1.preState, equals(AnimBehavior.defaults));
      expect(channel_1_1.postState, equals(AnimBehavior.defaults));
      final  channel_1_2 = animation_1.channels.elementAt(2);
      expect(channel_1_2.positionKeys.length, equals(21));
      final positionKey_1_2_0 = channel_1_2.positionKeys.elementAt(0);
      expect(positionKey_1_2_0.time, isZero);
      expect(positionKey_1_2_0.value, vector3MoreOrLessEquals(Vector3(0, 2, 0)));
      final positionKey_1_2_1 = channel_1_2.positionKeys.elementAt(1);
      expect(positionKey_1_2_1.time, moreOrLessEquals(0.0416666679));
      expect(positionKey_1_2_1.value, vector3MoreOrLessEquals(Vector3(0, 2, 0)));
      final positionKey_1_2_2 = channel_1_2.positionKeys.elementAt(2);
      expect(positionKey_1_2_2.time, moreOrLessEquals(0.0833333358));
      expect(positionKey_1_2_2.value, vector3MoreOrLessEquals(Vector3(0, 2, 0)));
      final positionKey_1_2_3 = channel_1_2.positionKeys.elementAt(3);
      expect(positionKey_1_2_3.time, moreOrLessEquals(0.125));
      expect(positionKey_1_2_3.value, vector3MoreOrLessEquals(Vector3(0, 2, 0)));
      final positionKey_1_2_4 = channel_1_2.positionKeys.elementAt(4);
      expect(positionKey_1_2_4.time, moreOrLessEquals(0.166666672));
      expect(positionKey_1_2_4.value, vector3MoreOrLessEquals(Vector3(0, 2, -3.55271368e-15)));
      final positionKey_1_2_5 = channel_1_2.positionKeys.elementAt(5);
      expect(positionKey_1_2_5.time, moreOrLessEquals(0.208333328));
      expect(positionKey_1_2_5.value, vector3MoreOrLessEquals(Vector3(1.69406579e-21, 2, -1.42108581e-14)));
      final positionKey_1_2_6 = channel_1_2.positionKeys.elementAt(6);
      expect(positionKey_1_2_6.time, moreOrLessEquals(0.25));
      expect(positionKey_1_2_6.value, vector3MoreOrLessEquals(Vector3(-1.77635684e-15, 2, -7.54951657e-15)));
      final positionKey_1_2_7 = channel_1_2.positionKeys.elementAt(7);
      expect(positionKey_1_2_7.time, moreOrLessEquals(0.291666657));
      expect(positionKey_1_2_7.value, vector3MoreOrLessEquals(Vector3(1.77635684e-15, 2, 1.77635684e-15)));
      final positionKey_1_2_8 = channel_1_2.positionKeys.elementAt(8);
      expect(positionKey_1_2_8.time, moreOrLessEquals(0.333333343));
      expect(positionKey_1_2_8.value, vector3MoreOrLessEquals(Vector3(1.77635684e-15, 2, -1.0658141e-14)));
      final positionKey_1_2_9 = channel_1_2.positionKeys.elementAt(9);
      expect(positionKey_1_2_9.time, moreOrLessEquals(0.375));
      expect(positionKey_1_2_9.value, vector3MoreOrLessEquals(Vector3(-1.77635684e-15, 2, -8.8817842e-16)));
      final positionKey_1_2_10 = channel_1_2.positionKeys.elementAt(10);
      expect(positionKey_1_2_10.time, moreOrLessEquals(0.416666657));
      expect(positionKey_1_2_10.value, vector3MoreOrLessEquals(Vector3(0, 2, 0)));
      final positionKey_1_2_11 = channel_1_2.positionKeys.elementAt(11);
      expect(positionKey_1_2_11.time, moreOrLessEquals(0.458333343));
      expect(positionKey_1_2_11.value, vector3MoreOrLessEquals(Vector3(5.55111479e-17, 2, 1.50990331e-14)));
      final positionKey_1_2_12 = channel_1_2.positionKeys.elementAt(12);
      expect(positionKey_1_2_12.time, moreOrLessEquals(0.5));
      expect(positionKey_1_2_12.value, vector3MoreOrLessEquals(Vector3(7.99360578e-15, 2, -1.0658141e-14)));
      final positionKey_1_2_13 = channel_1_2.positionKeys.elementAt(13);
      expect(positionKey_1_2_13.time, moreOrLessEquals(0.541666687));
      expect(positionKey_1_2_13.value, vector3MoreOrLessEquals(Vector3(-3.55271368e-15, 2, -7.10542736e-15)));
      final positionKey_1_2_14 = channel_1_2.positionKeys.elementAt(14);
      expect(positionKey_1_2_14.time, moreOrLessEquals(0.583333313));
      expect(positionKey_1_2_14.value, vector3MoreOrLessEquals(Vector3(-3.55271368e-15, 2, -5.32907052e-15)));
      final positionKey_1_2_15 = channel_1_2.positionKeys.elementAt(15);
      expect(positionKey_1_2_15.time, moreOrLessEquals(0.625));
      expect(positionKey_1_2_15.value, vector3MoreOrLessEquals(Vector3(-1.69406579e-21, 2, -1.42108581e-14)));
      final positionKey_1_2_16 = channel_1_2.positionKeys.elementAt(16);
      expect(positionKey_1_2_16.time, moreOrLessEquals(0.666666687));
      expect(positionKey_1_2_16.value, vector3MoreOrLessEquals(Vector3(-3.55271368e-15, 2, 4.4408921e-15)));
      final positionKey_1_2_17 = channel_1_2.positionKeys.elementAt(17);
      expect(positionKey_1_2_17.time, moreOrLessEquals(0.708333313));
      expect(positionKey_1_2_17.value, vector3MoreOrLessEquals(Vector3(3.55271368e-15, 2, -1.42108547e-14)));
      final positionKey_1_2_18 = channel_1_2.positionKeys.elementAt(18);
      expect(positionKey_1_2_18.time, moreOrLessEquals(0.75));
      expect(positionKey_1_2_18.value, vector3MoreOrLessEquals(Vector3(0, 2, 0)));
      final positionKey_1_2_19 = channel_1_2.positionKeys.elementAt(19);
      expect(positionKey_1_2_19.time, moreOrLessEquals(0.791666687));
      expect(positionKey_1_2_19.value, vector3MoreOrLessEquals(Vector3(-1.77635684e-15, 2, 1.42108547e-14)));
      final positionKey_1_2_20 = channel_1_2.positionKeys.elementAt(20);
      expect(positionKey_1_2_20.time, moreOrLessEquals(0.833333313));
      expect(positionKey_1_2_20.value, vector3MoreOrLessEquals(Vector3(0, 2, 0)));
      expect(channel_1_2.rotationKeys.length, equals(21));
      final rotationKey_1_2_0 = channel_1_2.rotationKeys.elementAt(0);
      expect(rotationKey_1_2_0.time, isZero);
      expect(rotationKey_1_2_0.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0, 0)));
      final rotationKey_1_2_1 = channel_1_2.rotationKeys.elementAt(1);
      expect(rotationKey_1_2_1.time, moreOrLessEquals(0.0416666679));
      expect(rotationKey_1_2_1.value, quaternionMoreOrLessEquals(Quaternion(1.76590392e-15, 1.32348898e-23, 2.21551446e-16, 2.21551446e-16)));
      final rotationKey_1_2_2 = channel_1_2.rotationKeys.elementAt(2);
      expect(rotationKey_1_2_2.time, moreOrLessEquals(0.0833333358));
      expect(rotationKey_1_2_2.value, quaternionMoreOrLessEquals(Quaternion(1.77635663e-15, 0, 8.88178314e-16, 8.88178314e-16)));
      final rotationKey_1_2_3 = channel_1_2.rotationKeys.elementAt(3);
      expect(rotationKey_1_2_3.time, moreOrLessEquals(0.125));
      expect(rotationKey_1_2_3.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0, 0)));
      final rotationKey_1_2_4 = channel_1_2.rotationKeys.elementAt(4);
      expect(rotationKey_1_2_4.time, moreOrLessEquals(0.166666672));
      expect(rotationKey_1_2_4.value, quaternionMoreOrLessEquals(Quaternion(-4.68649407e-16, 0, -1.45638686e-16, -1.45638686e-16)));
      final rotationKey_1_2_5 = channel_1_2.rotationKeys.elementAt(5);
      expect(rotationKey_1_2_5.time, moreOrLessEquals(0.208333328));
      expect(rotationKey_1_2_5.value, quaternionMoreOrLessEquals(Quaternion(-3.55271368e-15, -5.73479159e-23, -2.11758237e-22, -2.11758237e-22)));
      final rotationKey_1_2_6 = channel_1_2.rotationKeys.elementAt(6);
      expect(rotationKey_1_2_6.time, moreOrLessEquals(0.25));
      expect(rotationKey_1_2_6.value, quaternionMoreOrLessEquals(Quaternion(-1.72084579e-15, -5.29395592e-23, -2.64697796e-23, -2.64697796e-23)));
      final rotationKey_1_2_7 = channel_1_2.rotationKeys.elementAt(7);
      expect(rotationKey_1_2_7.time, moreOrLessEquals(0.291666657));
      expect(rotationKey_1_2_7.value, quaternionMoreOrLessEquals(Quaternion(-2.22044658e-16, 7.94093388e-23, 2.22044658e-16, 2.22044658e-16)));
      final rotationKey_1_2_8 = channel_1_2.rotationKeys.elementAt(8);
      expect(rotationKey_1_2_8.time, moreOrLessEquals(0.333333343));
      expect(rotationKey_1_2_8.value, quaternionMoreOrLessEquals(Quaternion(-4.4408921e-16, 1.49011612e-08, 2.22044605e-16, 2.22044605e-16)));
      final rotationKey_1_2_9 = channel_1_2.rotationKeys.elementAt(9);
      expect(rotationKey_1_2_9.time, moreOrLessEquals(0.375));
      expect(rotationKey_1_2_9.value, quaternionMoreOrLessEquals(Quaternion(-2.22044605e-16, -4.30133919e-23, 2.22044605e-16, 2.22044605e-16)));
      final rotationKey_1_2_10 = channel_1_2.rotationKeys.elementAt(10);
      expect(rotationKey_1_2_10.time, moreOrLessEquals(0.416666657));
      expect(rotationKey_1_2_10.value, quaternionMoreOrLessEquals(Quaternion(0, -9.52917753e-37, 0, 0)));
      final rotationKey_1_2_11 = channel_1_2.rotationKeys.elementAt(11);
      expect(rotationKey_1_2_11.time, moreOrLessEquals(0.458333343));
      expect(rotationKey_1_2_11.value, quaternionMoreOrLessEquals(Quaternion(3.55271368e-15, 8.27180613e-25, -6.93889349e-18, -6.93889349e-18)));
      final rotationKey_1_2_12 = channel_1_2.rotationKeys.elementAt(12);
      expect(rotationKey_1_2_12.time, moreOrLessEquals(0.5));
      expect(rotationKey_1_2_12.value, quaternionMoreOrLessEquals(Quaternion(4.4408921e-16, -1.49011612e-08, -1.11022302e-16, -1.11022302e-16)));
      final rotationKey_1_2_13 = channel_1_2.rotationKeys.elementAt(13);
      expect(rotationKey_1_2_13.time, moreOrLessEquals(0.541666687));
      expect(rotationKey_1_2_13.value, quaternionMoreOrLessEquals(Quaternion(8.88178208e-16, 2.38228016e-22, 4.4408921e-16, 4.4408921e-16)));
      final rotationKey_1_2_14 = channel_1_2.rotationKeys.elementAt(14);
      expect(rotationKey_1_2_14.time, moreOrLessEquals(0.583333313));
      expect(rotationKey_1_2_14.value, quaternionMoreOrLessEquals(Quaternion(-2.22044605e-16, -2.11758237e-22, 0, 0)));
      final rotationKey_1_2_15 = channel_1_2.rotationKeys.elementAt(15);
      expect(rotationKey_1_2_15.time, moreOrLessEquals(0.625));
      expect(rotationKey_1_2_15.value, quaternionMoreOrLessEquals(Quaternion(-3.55271368e-15, 5.7347897e-23, 4.23516474e-22, 4.23516474e-22)));
      final rotationKey_1_2_16 = channel_1_2.rotationKeys.elementAt(16);
      expect(rotationKey_1_2_16.time, moreOrLessEquals(0.666666687));
      expect(rotationKey_1_2_16.value, quaternionMoreOrLessEquals(Quaternion(1.1102225e-16, -2.64697796e-23, 6.66133815e-16, 6.66133815e-16)));
      final rotationKey_1_2_17 = channel_1_2.rotationKeys.elementAt(17);
      expect(rotationKey_1_2_17.time, moreOrLessEquals(0.708333313));
      expect(rotationKey_1_2_17.value, quaternionMoreOrLessEquals(Quaternion(-2.22044605e-15, 1.05879118e-22, 0, 0)));
      final rotationKey_1_2_18 = channel_1_2.rotationKeys.elementAt(18);
      expect(rotationKey_1_2_18.time, moreOrLessEquals(0.75));
      expect(rotationKey_1_2_18.value, quaternionMoreOrLessEquals(Quaternion(0, 1.49011612e-08, -4.4408921e-16, -4.4408921e-16)));
      final rotationKey_1_2_19 = channel_1_2.rotationKeys.elementAt(19);
      expect(rotationKey_1_2_19.time, moreOrLessEquals(0.791666687));
      expect(rotationKey_1_2_19.value, quaternionMoreOrLessEquals(Quaternion(3.33066907e-15, 2.11758237e-22, -1.11022302e-16, -1.11022302e-16)));
      final rotationKey_1_2_20 = channel_1_2.rotationKeys.elementAt(20);
      expect(rotationKey_1_2_20.time, moreOrLessEquals(0.833333313));
      expect(rotationKey_1_2_20.value, quaternionMoreOrLessEquals(Quaternion(0, 0, 0, 0)));
      expect(channel_1_2.scalingKeys.length, equals(21));
      final scalingKey_1_2_0 = channel_1_2.scalingKeys.elementAt(0);
      expect(scalingKey_1_2_0.time, isZero);
      expect(scalingKey_1_2_0.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_1_2_1 = channel_1_2.scalingKeys.elementAt(1);
      expect(scalingKey_1_2_1.time, moreOrLessEquals(0.0416666679));
      expect(scalingKey_1_2_1.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_1_2_2 = channel_1_2.scalingKeys.elementAt(2);
      expect(scalingKey_1_2_2.time, moreOrLessEquals(0.0833333358));
      expect(scalingKey_1_2_2.value, vector3MoreOrLessEquals(Vector3(1.00000012, 1, 1.00000012)));
      final scalingKey_1_2_3 = channel_1_2.scalingKeys.elementAt(3);
      expect(scalingKey_1_2_3.time, moreOrLessEquals(0.125));
      expect(scalingKey_1_2_3.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_1_2_4 = channel_1_2.scalingKeys.elementAt(4);
      expect(scalingKey_1_2_4.time, moreOrLessEquals(0.166666672));
      expect(scalingKey_1_2_4.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_1_2_5 = channel_1_2.scalingKeys.elementAt(5);
      expect(scalingKey_1_2_5.time, moreOrLessEquals(0.208333328));
      expect(scalingKey_1_2_5.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_1_2_6 = channel_1_2.scalingKeys.elementAt(6);
      expect(scalingKey_1_2_6.time, moreOrLessEquals(0.25));
      expect(scalingKey_1_2_6.value, vector3MoreOrLessEquals(Vector3(0.99999994, 1, 0.99999994)));
      final scalingKey_1_2_7 = channel_1_2.scalingKeys.elementAt(7);
      expect(scalingKey_1_2_7.time, moreOrLessEquals(0.291666657));
      expect(scalingKey_1_2_7.value, vector3MoreOrLessEquals(Vector3(0.99999994, 1, 0.99999994)));
      final scalingKey_1_2_8 = channel_1_2.scalingKeys.elementAt(8);
      expect(scalingKey_1_2_8.time, moreOrLessEquals(0.333333343));
      expect(scalingKey_1_2_8.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_1_2_9 = channel_1_2.scalingKeys.elementAt(9);
      expect(scalingKey_1_2_9.time, moreOrLessEquals(0.375));
      expect(scalingKey_1_2_9.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_1_2_10 = channel_1_2.scalingKeys.elementAt(10);
      expect(scalingKey_1_2_10.time, moreOrLessEquals(0.416666657));
      expect(scalingKey_1_2_10.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_1_2_11 = channel_1_2.scalingKeys.elementAt(11);
      expect(scalingKey_1_2_11.time, moreOrLessEquals(0.458333343));
      expect(scalingKey_1_2_11.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_1_2_12 = channel_1_2.scalingKeys.elementAt(12);
      expect(scalingKey_1_2_12.time, moreOrLessEquals(0.5));
      expect(scalingKey_1_2_12.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_1_2_13 = channel_1_2.scalingKeys.elementAt(13);
      expect(scalingKey_1_2_13.time, moreOrLessEquals(0.541666687));
      expect(scalingKey_1_2_13.value, vector3MoreOrLessEquals(Vector3(1, 1, 1.00000012)));
      final scalingKey_1_2_14 = channel_1_2.scalingKeys.elementAt(14);
      expect(scalingKey_1_2_14.time, moreOrLessEquals(0.583333313));
      expect(scalingKey_1_2_14.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_1_2_15 = channel_1_2.scalingKeys.elementAt(15);
      expect(scalingKey_1_2_15.time, moreOrLessEquals(0.625));
      expect(scalingKey_1_2_15.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_1_2_16 = channel_1_2.scalingKeys.elementAt(16);
      expect(scalingKey_1_2_16.time, moreOrLessEquals(0.666666687));
      expect(scalingKey_1_2_16.value, vector3MoreOrLessEquals(Vector3(0.99999994, 1, 0.99999994)));
      final scalingKey_1_2_17 = channel_1_2.scalingKeys.elementAt(17);
      expect(scalingKey_1_2_17.time, moreOrLessEquals(0.708333313));
      expect(scalingKey_1_2_17.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_1_2_18 = channel_1_2.scalingKeys.elementAt(18);
      expect(scalingKey_1_2_18.time, moreOrLessEquals(0.75));
      expect(scalingKey_1_2_18.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_1_2_19 = channel_1_2.scalingKeys.elementAt(19);
      expect(scalingKey_1_2_19.time, moreOrLessEquals(0.791666687));
      expect(scalingKey_1_2_19.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_1_2_20 = channel_1_2.scalingKeys.elementAt(20);
      expect(scalingKey_1_2_20.time, moreOrLessEquals(0.833333313));
      expect(scalingKey_1_2_20.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      expect(channel_1_2.preState, equals(AnimBehavior.defaults));
      expect(channel_1_2.postState, equals(AnimBehavior.defaults));
      final  channel_1_3 = animation_1.channels.elementAt(3);
      expect(channel_1_3.positionKeys.length, equals(21));
      final positionKey_1_3_0 = channel_1_3.positionKeys.elementAt(0);
      expect(positionKey_1_3_0.time, isZero);
      expect(positionKey_1_3_0.value, vector3MoreOrLessEquals(Vector3(0, 2, 7.10542736e-15)));
      final positionKey_1_3_1 = channel_1_3.positionKeys.elementAt(1);
      expect(positionKey_1_3_1.time, moreOrLessEquals(0.0416666679));
      expect(positionKey_1_3_1.value, vector3MoreOrLessEquals(Vector3(-4.4408921e-16, 2, -7.10542736e-15)));
      final positionKey_1_3_2 = channel_1_3.positionKeys.elementAt(2);
      expect(positionKey_1_3_2.time, moreOrLessEquals(0.0833333358));
      expect(positionKey_1_3_2.value, vector3MoreOrLessEquals(Vector3(-3.55271368e-15, 2, -7.10542736e-15)));
      final positionKey_1_3_3 = channel_1_3.positionKeys.elementAt(3);
      expect(positionKey_1_3_3.time, moreOrLessEquals(0.125));
      expect(positionKey_1_3_3.value, vector3MoreOrLessEquals(Vector3(-7.10542736e-15, 2, -3.55271368e-15)));
      final positionKey_1_3_4 = channel_1_3.positionKeys.elementAt(4);
      expect(positionKey_1_3_4.time, moreOrLessEquals(0.166666672));
      expect(positionKey_1_3_4.value, vector3MoreOrLessEquals(Vector3(7.10542736e-15, 2, -7.10542736e-15)));
      final positionKey_1_3_5 = channel_1_3.positionKeys.elementAt(5);
      expect(positionKey_1_3_5.time, moreOrLessEquals(0.208333328));
      expect(positionKey_1_3_5.value, vector3MoreOrLessEquals(Vector3(3.38813179e-21, 2, -2.13162888e-14)));
      final positionKey_1_3_6 = channel_1_3.positionKeys.elementAt(6);
      expect(positionKey_1_3_6.time, moreOrLessEquals(0.25));
      expect(positionKey_1_3_6.value, vector3MoreOrLessEquals(Vector3(-2.66453526e-15, 2, -1.50990331e-14)));
      final positionKey_1_3_7 = channel_1_3.positionKeys.elementAt(7);
      expect(positionKey_1_3_7.time, moreOrLessEquals(0.291666657));
      expect(positionKey_1_3_7.value, vector3MoreOrLessEquals(Vector3(2.66453526e-15, 2, 0)));
      final positionKey_1_3_8 = channel_1_3.positionKeys.elementAt(8);
      expect(positionKey_1_3_8.time, moreOrLessEquals(0.333333343));
      expect(positionKey_1_3_8.value, vector3MoreOrLessEquals(Vector3(2.66453526e-15, 2, -1.77635684e-14)));
      final positionKey_1_3_9 = channel_1_3.positionKeys.elementAt(9);
      expect(positionKey_1_3_9.time, moreOrLessEquals(0.375));
      expect(positionKey_1_3_9.value, vector3MoreOrLessEquals(Vector3(-3.55271368e-15, 2, -5.32907052e-15)));
      final positionKey_1_3_10 = channel_1_3.positionKeys.elementAt(10);
      expect(positionKey_1_3_10.time, moreOrLessEquals(0.416666657));
      expect(positionKey_1_3_10.value, vector3MoreOrLessEquals(Vector3(0, 2, -7.10542736e-15)));
      final positionKey_1_3_11 = channel_1_3.positionKeys.elementAt(11);
      expect(positionKey_1_3_11.time, moreOrLessEquals(0.458333343));
      expect(positionKey_1_3_11.value, vector3MoreOrLessEquals(Vector3(1.38777878e-16, 2, 3.73034936e-14)));
      final positionKey_1_3_12 = channel_1_3.positionKeys.elementAt(12);
      expect(positionKey_1_3_12.time, moreOrLessEquals(0.5));
      expect(positionKey_1_3_12.value, vector3MoreOrLessEquals(Vector3(1.59872116e-14, 2, -7.10542736e-15)));
      final positionKey_1_3_13 = channel_1_3.positionKeys.elementAt(13);
      expect(positionKey_1_3_13.time, moreOrLessEquals(0.541666687));
      expect(positionKey_1_3_13.value, vector3MoreOrLessEquals(Vector3(-7.10542736e-15, 2, -2.13162821e-14)));
      final positionKey_1_3_14 = channel_1_3.positionKeys.elementAt(14);
      expect(positionKey_1_3_14.time, moreOrLessEquals(0.583333313));
      expect(positionKey_1_3_14.value, vector3MoreOrLessEquals(Vector3(-7.10542736e-15, 2, -3.55271368e-15)));
      final positionKey_1_3_15 = channel_1_3.positionKeys.elementAt(15);
      expect(positionKey_1_3_15.time, moreOrLessEquals(0.625));
      expect(positionKey_1_3_15.value, vector3MoreOrLessEquals(Vector3(-3.38813179e-21, 2, -2.84217162e-14)));
      final positionKey_1_3_16 = channel_1_3.positionKeys.elementAt(16);
      expect(positionKey_1_3_16.time, moreOrLessEquals(0.666666687));
      expect(positionKey_1_3_16.value, vector3MoreOrLessEquals(Vector3(-7.10542736e-15, 2, 1.59872116e-14)));
      final positionKey_1_3_17 = channel_1_3.positionKeys.elementAt(17);
      expect(positionKey_1_3_17.time, moreOrLessEquals(0.708333313));
      expect(positionKey_1_3_17.value, vector3MoreOrLessEquals(Vector3(1.0658141e-14, 2, -2.13162821e-14)));
      final positionKey_1_3_18 = channel_1_3.positionKeys.elementAt(18);
      expect(positionKey_1_3_18.time, moreOrLessEquals(0.75));
      expect(positionKey_1_3_18.value, vector3MoreOrLessEquals(Vector3(7.10542736e-15, 2, 0)));
      final positionKey_1_3_19 = channel_1_3.positionKeys.elementAt(19);
      expect(positionKey_1_3_19.time, moreOrLessEquals(0.791666687));
      expect(positionKey_1_3_19.value, vector3MoreOrLessEquals(Vector3(-3.55271368e-15, 2, 2.13162821e-14)));
      final positionKey_1_3_20 = channel_1_3.positionKeys.elementAt(20);
      expect(positionKey_1_3_20.time, moreOrLessEquals(0.833333313));
      expect(positionKey_1_3_20.value, vector3MoreOrLessEquals(Vector3(-4.23516474e-22, 2, 0)));
      expect(channel_1_3.rotationKeys.length, equals(21));
      final rotationKey_1_3_0 = channel_1_3.rotationKeys.elementAt(0);
      expect(rotationKey_1_3_0.time, isZero);
      expect(rotationKey_1_3_0.value, quaternionMoreOrLessEquals(Quaternion(0, 1.50995803e-07, 1.13998658e-14, 1.13998658e-14)));
      final rotationKey_1_3_1 = channel_1_3.rotationKeys.elementAt(1);
      expect(rotationKey_1_3_1.time, moreOrLessEquals(0.0416666679));
      expect(rotationKey_1_3_1.value, quaternionMoreOrLessEquals(Quaternion(1.23163292e-15, 1.49011612e-07, 1.15330956e-14, 1.15330956e-14)));
      final rotationKey_1_3_2 = channel_1_3.rotationKeys.elementAt(2);
      expect(rotationKey_1_3_2.time, moreOrLessEquals(0.0833333358));
      expect(rotationKey_1_3_2.value, quaternionMoreOrLessEquals(Quaternion(1.57561067e-15, 1.49011612e-07, 1.15639555e-14, 1.15639555e-14)));
      final rotationKey_1_3_3 = channel_1_3.rotationKeys.elementAt(3);
      expect(rotationKey_1_3_3.time, moreOrLessEquals(0.125));
      expect(rotationKey_1_3_3.value, quaternionMoreOrLessEquals(Quaternion(-1.81897573e-16, 1.49011612e-07, 1.07016878e-14, 1.07016878e-14)));
      final rotationKey_1_3_4 = channel_1_3.rotationKeys.elementAt(4);
      expect(rotationKey_1_3_4.time, moreOrLessEquals(0.166666672));
      expect(rotationKey_1_3_4.value, quaternionMoreOrLessEquals(Quaternion(-9.02289883e-16, 1.63912773e-07, 1.11255338e-14, 1.11255338e-14)));
      final rotationKey_1_3_5 = channel_1_3.rotationKeys.elementAt(5);
      expect(rotationKey_1_3_5.time, moreOrLessEquals(0.208333328));
      expect(rotationKey_1_3_5.value, quaternionMoreOrLessEquals(Quaternion(-3.55271304e-15, 1.50995788e-07, 1.13998658e-14, 1.13998658e-14)));
      final rotationKey_1_3_6 = channel_1_3.rotationKeys.elementAt(6);
      expect(rotationKey_1_3_6.time, moreOrLessEquals(0.25));
      expect(rotationKey_1_3_6.value, quaternionMoreOrLessEquals(Quaternion(-7.77156117e-16, 1.49011612e-07, 1.15463195e-14, 1.15463195e-14)));
      final rotationKey_1_3_7 = channel_1_3.rotationKeys.elementAt(7);
      expect(rotationKey_1_3_7.time, moreOrLessEquals(0.291666657));
      expect(rotationKey_1_3_7.value, quaternionMoreOrLessEquals(Quaternion(-6.66133815e-16, 1.49011612e-07, 1.15463195e-14, 1.15463195e-14)));
      final rotationKey_1_3_8 = channel_1_3.rotationKeys.elementAt(8);
      expect(rotationKey_1_3_8.time, moreOrLessEquals(0.333333343));
      expect(rotationKey_1_3_8.value, quaternionMoreOrLessEquals(Quaternion(-1.05879118e-22, 1.49011598e-07, 1.08801848e-14, 1.08801848e-14)));
      final rotationKey_1_3_9 = channel_1_3.rotationKeys.elementAt(9);
      expect(rotationKey_1_3_9.time, moreOrLessEquals(0.375));
      expect(rotationKey_1_3_9.value, quaternionMoreOrLessEquals(Quaternion(2.22044605e-16, 1.49011626e-07, 1.08801865e-14, 1.08801865e-14)));
      final rotationKey_1_3_10 = channel_1_3.rotationKeys.elementAt(10);
      expect(rotationKey_1_3_10.time, moreOrLessEquals(0.416666657));
      expect(rotationKey_1_3_10.value, quaternionMoreOrLessEquals(Quaternion(0, 1.50995803e-07, 1.13998658e-14, 1.13998658e-14)));
      final rotationKey_1_3_11 = channel_1_3.rotationKeys.elementAt(11);
      expect(rotationKey_1_3_11.time, moreOrLessEquals(0.458333343));
      expect(rotationKey_1_3_11.value, quaternionMoreOrLessEquals(Quaternion(3.66373598e-15, 1.49011598e-07, 1.14283566e-14, 1.14283566e-14)));
      final rotationKey_1_3_12 = channel_1_3.rotationKeys.elementAt(12);
      expect(rotationKey_1_3_12.time, moreOrLessEquals(0.5));
      expect(rotationKey_1_3_12.value, quaternionMoreOrLessEquals(Quaternion(4.44089104e-16, 1.49011612e-07, 1.01030295e-14, 1.01030295e-14)));
      final rotationKey_1_3_13 = channel_1_3.rotationKeys.elementAt(13);
      expect(rotationKey_1_3_13.time, moreOrLessEquals(0.541666687));
      expect(rotationKey_1_3_13.value, quaternionMoreOrLessEquals(Quaternion(-1.05879118e-22, 1.63912773e-07, 1.08801856e-14, 1.08801856e-14)));
      final rotationKey_1_3_14 = channel_1_3.rotationKeys.elementAt(14);
      expect(rotationKey_1_3_14.time, moreOrLessEquals(0.583333313));
      expect(rotationKey_1_3_14.value, quaternionMoreOrLessEquals(Quaternion(-4.44089157e-16, 1.49011626e-07, 9.76996262e-15, 9.76996262e-15)));
      final rotationKey_1_3_15 = channel_1_3.rotationKeys.elementAt(15);
      expect(rotationKey_1_3_15.time, moreOrLessEquals(0.625));
      expect(rotationKey_1_3_15.value, quaternionMoreOrLessEquals(Quaternion(-3.5527141e-15, 1.50995803e-07, 1.13998658e-14, 1.13998658e-14)));
      final rotationKey_1_3_16 = channel_1_3.rotationKeys.elementAt(16);
      expect(rotationKey_1_3_16.time, moreOrLessEquals(0.666666687));
      expect(rotationKey_1_3_16.value, quaternionMoreOrLessEquals(Quaternion(9.99200722e-16, 1.63912787e-07, 1.24344987e-14, 1.24344987e-14)));
      final rotationKey_1_3_17 = channel_1_3.rotationKeys.elementAt(17);
      expect(rotationKey_1_3_17.time, moreOrLessEquals(0.708333313));
      expect(rotationKey_1_3_17.value, quaternionMoreOrLessEquals(Quaternion(-1.77635684e-15, 1.49011598e-07, 9.76996177e-15, 9.76996177e-15)));
      final rotationKey_1_3_18 = channel_1_3.rotationKeys.elementAt(18);
      expect(rotationKey_1_3_18.time, moreOrLessEquals(0.75));
      expect(rotationKey_1_3_18.value, quaternionMoreOrLessEquals(Quaternion(0, 1.49011612e-07, 9.32587341e-15, 9.32587341e-15)));
      final rotationKey_1_3_19 = channel_1_3.rotationKeys.elementAt(19);
      expect(rotationKey_1_3_19.time, moreOrLessEquals(0.791666687));
      expect(rotationKey_1_3_19.value, quaternionMoreOrLessEquals(Quaternion(2.88657986e-15, 1.49011612e-07, 1.05471187e-14, 1.05471187e-14)));
      final rotationKey_1_3_20 = channel_1_3.rotationKeys.elementAt(20);
      expect(rotationKey_1_3_20.time, moreOrLessEquals(0.833333313));
      expect(rotationKey_1_3_20.value, quaternionMoreOrLessEquals(Quaternion(-3.80503082e-22, 1.50995803e-07, 1.13998658e-14, 1.13998658e-14)));
      expect(channel_1_3.scalingKeys.length, equals(21));
      final scalingKey_1_3_0 = channel_1_3.scalingKeys.elementAt(0);
      expect(scalingKey_1_3_0.time, isZero);
      expect(scalingKey_1_3_0.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_1_3_1 = channel_1_3.scalingKeys.elementAt(1);
      expect(scalingKey_1_3_1.time, moreOrLessEquals(0.0416666679));
      expect(scalingKey_1_3_1.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_1_3_2 = channel_1_3.scalingKeys.elementAt(2);
      expect(scalingKey_1_3_2.time, moreOrLessEquals(0.0833333358));
      expect(scalingKey_1_3_2.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_1_3_3 = channel_1_3.scalingKeys.elementAt(3);
      expect(scalingKey_1_3_3.time, moreOrLessEquals(0.125));
      expect(scalingKey_1_3_3.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_1_3_4 = channel_1_3.scalingKeys.elementAt(4);
      expect(scalingKey_1_3_4.time, moreOrLessEquals(0.166666672));
      expect(scalingKey_1_3_4.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_1_3_5 = channel_1_3.scalingKeys.elementAt(5);
      expect(scalingKey_1_3_5.time, moreOrLessEquals(0.208333328));
      expect(scalingKey_1_3_5.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_1_3_6 = channel_1_3.scalingKeys.elementAt(6);
      expect(scalingKey_1_3_6.time, moreOrLessEquals(0.25));
      expect(scalingKey_1_3_6.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_1_3_7 = channel_1_3.scalingKeys.elementAt(7);
      expect(scalingKey_1_3_7.time, moreOrLessEquals(0.291666657));
      expect(scalingKey_1_3_7.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_1_3_8 = channel_1_3.scalingKeys.elementAt(8);
      expect(scalingKey_1_3_8.time, moreOrLessEquals(0.333333343));
      expect(scalingKey_1_3_8.value, vector3MoreOrLessEquals(Vector3(1.00000012, 1, 1.00000012)));
      final scalingKey_1_3_9 = channel_1_3.scalingKeys.elementAt(9);
      expect(scalingKey_1_3_9.time, moreOrLessEquals(0.375));
      expect(scalingKey_1_3_9.value, vector3MoreOrLessEquals(Vector3(0.99999994, 1, 0.99999994)));
      final scalingKey_1_3_10 = channel_1_3.scalingKeys.elementAt(10);
      expect(scalingKey_1_3_10.time, moreOrLessEquals(0.416666657));
      expect(scalingKey_1_3_10.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_1_3_11 = channel_1_3.scalingKeys.elementAt(11);
      expect(scalingKey_1_3_11.time, moreOrLessEquals(0.458333343));
      expect(scalingKey_1_3_11.value, vector3MoreOrLessEquals(Vector3(1.00000012, 1, 1.00000012)));
      final scalingKey_1_3_12 = channel_1_3.scalingKeys.elementAt(12);
      expect(scalingKey_1_3_12.time, moreOrLessEquals(0.5));
      expect(scalingKey_1_3_12.value, vector3MoreOrLessEquals(Vector3(1, 1, 1.00000012)));
      final scalingKey_1_3_13 = channel_1_3.scalingKeys.elementAt(13);
      expect(scalingKey_1_3_13.time, moreOrLessEquals(0.541666687));
      expect(scalingKey_1_3_13.value, vector3MoreOrLessEquals(Vector3(1, 1, 1.00000012)));
      final scalingKey_1_3_14 = channel_1_3.scalingKeys.elementAt(14);
      expect(scalingKey_1_3_14.time, moreOrLessEquals(0.583333313));
      expect(scalingKey_1_3_14.value, vector3MoreOrLessEquals(Vector3(0.99999994, 1, 0.99999994)));
      final scalingKey_1_3_15 = channel_1_3.scalingKeys.elementAt(15);
      expect(scalingKey_1_3_15.time, moreOrLessEquals(0.625));
      expect(scalingKey_1_3_15.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_1_3_16 = channel_1_3.scalingKeys.elementAt(16);
      expect(scalingKey_1_3_16.time, moreOrLessEquals(0.666666687));
      expect(scalingKey_1_3_16.value, vector3MoreOrLessEquals(Vector3(0.99999994, 1, 0.99999994)));
      final scalingKey_1_3_17 = channel_1_3.scalingKeys.elementAt(17);
      expect(scalingKey_1_3_17.time, moreOrLessEquals(0.708333313));
      expect(scalingKey_1_3_17.value, vector3MoreOrLessEquals(Vector3(1.00000012, 1, 1.00000012)));
      final scalingKey_1_3_18 = channel_1_3.scalingKeys.elementAt(18);
      expect(scalingKey_1_3_18.time, moreOrLessEquals(0.75));
      expect(scalingKey_1_3_18.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_1_3_19 = channel_1_3.scalingKeys.elementAt(19);
      expect(scalingKey_1_3_19.time, moreOrLessEquals(0.791666687));
      expect(scalingKey_1_3_19.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_1_3_20 = channel_1_3.scalingKeys.elementAt(20);
      expect(scalingKey_1_3_20.time, moreOrLessEquals(0.833333313));
      expect(scalingKey_1_3_20.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      expect(channel_1_3.preState, equals(AnimBehavior.defaults));
      expect(channel_1_3.postState, equals(AnimBehavior.defaults));
      final  channel_1_4 = animation_1.channels.elementAt(4);
      expect(channel_1_4.positionKeys.length, equals(21));
      final positionKey_1_4_0 = channel_1_4.positionKeys.elementAt(0);
      expect(positionKey_1_4_0.time, isZero);
      expect(positionKey_1_4_0.value, vector3MoreOrLessEquals(Vector3(-3.38813179e-21, 2, -2.8421723e-14)));
      final positionKey_1_4_1 = channel_1_4.positionKeys.elementAt(1);
      expect(positionKey_1_4_1.time, moreOrLessEquals(0.0416666679));
      expect(positionKey_1_4_1.value, vector3MoreOrLessEquals(Vector3(4.54273934e-15, 1.99999976, -6.11176013e-14)));
      final positionKey_1_4_2 = channel_1_4.positionKeys.elementAt(2);
      expect(positionKey_1_4_2.time, moreOrLessEquals(0.0833333358));
      expect(positionKey_1_4_2.value, vector3MoreOrLessEquals(Vector3(-3.69379887e-15, 2, 1.97102991e-14)));
      final positionKey_1_4_3 = channel_1_4.positionKeys.elementAt(3);
      expect(positionKey_1_4_3.time, moreOrLessEquals(0.125));
      expect(positionKey_1_4_3.value, vector3MoreOrLessEquals(Vector3(-2.52173652e-14, 1.99999976, 1.27556665e-14)));
      final positionKey_1_4_4 = channel_1_4.positionKeys.elementAt(4);
      expect(positionKey_1_4_4.time, moreOrLessEquals(0.166666672));
      expect(positionKey_1_4_4.value, vector3MoreOrLessEquals(Vector3(-5.46422377e-14, 2, -8.79819644e-15)));
      final positionKey_1_4_5 = channel_1_4.positionKeys.elementAt(5);
      expect(positionKey_1_4_5.time, moreOrLessEquals(0.208333328));
      expect(positionKey_1_4_5.value, vector3MoreOrLessEquals(Vector3(-2.03287907e-20, 1.99999976, -1.42109123e-14)));
      final positionKey_1_4_6 = channel_1_4.positionKeys.elementAt(6);
      expect(positionKey_1_4_6.time, moreOrLessEquals(0.25));
      expect(positionKey_1_4_6.value, vector3MoreOrLessEquals(Vector3(1.59872116e-14, 1.99999976, -3.55271368e-15)));
      final positionKey_1_4_7 = channel_1_4.positionKeys.elementAt(7);
      expect(positionKey_1_4_7.time, moreOrLessEquals(0.291666657));
      expect(positionKey_1_4_7.value, vector3MoreOrLessEquals(Vector3(-4.4408921e-15, 2.00000024, 2.13162821e-14)));
      final positionKey_1_4_8 = channel_1_4.positionKeys.elementAt(8);
      expect(positionKey_1_4_8.time, moreOrLessEquals(0.333333343));
      expect(positionKey_1_4_8.value, vector3MoreOrLessEquals(Vector3(1.33226763e-14, 1.99999976, -1.0658141e-14)));
      final positionKey_1_4_9 = channel_1_4.positionKeys.elementAt(9);
      expect(positionKey_1_4_9.time, moreOrLessEquals(0.375));
      expect(positionKey_1_4_9.value, vector3MoreOrLessEquals(Vector3(1.33226763e-15, 2.00000024, -2.30926389e-14)));
      final positionKey_1_4_10 = channel_1_4.positionKeys.elementAt(10);
      expect(positionKey_1_4_10.time, moreOrLessEquals(0.416666657));
      expect(positionKey_1_4_10.value, vector3MoreOrLessEquals(Vector3(-1.01643954e-20, 2, 2.84216942e-14)));
      final positionKey_1_4_11 = channel_1_4.positionKeys.elementAt(11);
      expect(positionKey_1_4_11.time, moreOrLessEquals(0.458333343));
      expect(positionKey_1_4_11.value, vector3MoreOrLessEquals(Vector3(5.6066267e-15, 2, -7.10542736e-15)));
      final positionKey_1_4_12 = channel_1_4.positionKeys.elementAt(12);
      expect(positionKey_1_4_12.time, moreOrLessEquals(0.5));
      expect(positionKey_1_4_12.value, vector3MoreOrLessEquals(Vector3(9.32587341e-15, 2.00000024, -7.10542736e-14)));
      final positionKey_1_4_13 = channel_1_4.positionKeys.elementAt(13);
      expect(positionKey_1_4_13.time, moreOrLessEquals(0.541666687));
      expect(positionKey_1_4_13.value, vector3MoreOrLessEquals(Vector3(-5.32907052e-15, 1.99999976, -3.55271368e-14)));
      final positionKey_1_4_14 = channel_1_4.positionKeys.elementAt(14);
      expect(positionKey_1_4_14.time, moreOrLessEquals(0.583333313));
      expect(positionKey_1_4_14.value, vector3MoreOrLessEquals(Vector3(3.55271368e-15, 2, -4.26325641e-14)));
      final positionKey_1_4_15 = channel_1_4.positionKeys.elementAt(15);
      expect(positionKey_1_4_15.time, moreOrLessEquals(0.625));
      expect(positionKey_1_4_15.value, vector3MoreOrLessEquals(Vector3(-1.69406579e-21, 1.99999976, -2.84217027e-14)));
      final positionKey_1_4_16 = channel_1_4.positionKeys.elementAt(16);
      expect(positionKey_1_4_16.time, moreOrLessEquals(0.666666687));
      expect(positionKey_1_4_16.value, vector3MoreOrLessEquals(Vector3(-1.42108547e-14, 2.00000024, 1.24344979e-14)));
      final positionKey_1_4_17 = channel_1_4.positionKeys.elementAt(17);
      expect(positionKey_1_4_17.time, moreOrLessEquals(0.708333313));
      expect(positionKey_1_4_17.value, vector3MoreOrLessEquals(Vector3(2.13162821e-14, 2, -7.10542736e-14)));
      final positionKey_1_4_18 = channel_1_4.positionKeys.elementAt(18);
      expect(positionKey_1_4_18.time, moreOrLessEquals(0.75));
      expect(positionKey_1_4_18.value, vector3MoreOrLessEquals(Vector3(0, 2.00000024, 0)));
      final positionKey_1_4_19 = channel_1_4.positionKeys.elementAt(19);
      expect(positionKey_1_4_19.time, moreOrLessEquals(0.791666687));
      expect(positionKey_1_4_19.value, vector3MoreOrLessEquals(Vector3(7.10542736e-14, 1.99999976, 2.13162821e-14)));
      final positionKey_1_4_20 = channel_1_4.positionKeys.elementAt(20);
      expect(positionKey_1_4_20.time, moreOrLessEquals(0.833333313));
      expect(positionKey_1_4_20.value, vector3MoreOrLessEquals(Vector3(8.47032866e-21, 2, -4.65868121e-21)));
      expect(channel_1_4.rotationKeys.length, equals(21));
      final rotationKey_1_4_0 = channel_1_4.rotationKeys.elementAt(0);
      expect(rotationKey_1_4_0.time, isZero);
      expect(rotationKey_1_4_0.value, quaternionMoreOrLessEquals(Quaternion(0, -1.50995803e-07, -1.13998658e-14, -1.13998658e-14)));
      final rotationKey_1_4_1 = channel_1_4.rotationKeys.elementAt(1);
      expect(rotationKey_1_4_1.time, moreOrLessEquals(0.0416666679));
      expect(rotationKey_1_4_1.value, quaternionMoreOrLessEquals(Quaternion(5.22643469e-16, -1.49011612e-07, -1.11885937e-14, -1.11885937e-14)));
      final rotationKey_1_4_2 = channel_1_4.rotationKeys.elementAt(2);
      expect(rotationKey_1_4_2.time, moreOrLessEquals(0.0833333358));
      expect(rotationKey_1_4_2.value, quaternionMoreOrLessEquals(Quaternion(1.99311257e-15, -1.49011612e-07, -1.07154767e-14, -1.07154767e-14)));
      final rotationKey_1_4_3 = channel_1_4.rotationKeys.elementAt(3);
      expect(rotationKey_1_4_3.time, moreOrLessEquals(0.125));
      expect(rotationKey_1_4_3.value, quaternionMoreOrLessEquals(Quaternion(-9.06146913e-17, -1.49011612e-07, -1.04424212e-14, -1.04424212e-14)));
      final rotationKey_1_4_4 = channel_1_4.rotationKeys.elementAt(4);
      expect(rotationKey_1_4_4.time, moreOrLessEquals(0.166666672));
      expect(rotationKey_1_4_4.value, quaternionMoreOrLessEquals(Quaternion(2.96726335e-16, -1.49011612e-07, -7.97925873e-15, -7.97925873e-15)));
      final rotationKey_1_4_5 = channel_1_4.rotationKeys.elementAt(5);
      expect(rotationKey_1_4_5.time, moreOrLessEquals(0.208333328));
      expect(rotationKey_1_4_5.value, quaternionMoreOrLessEquals(Quaternion(-3.55271368e-15, -1.50995788e-07, -1.13998658e-14, -1.13998658e-14)));
      final rotationKey_1_4_6 = channel_1_4.rotationKeys.elementAt(6);
      expect(rotationKey_1_4_6.time, moreOrLessEquals(0.25));
      expect(rotationKey_1_4_6.value, quaternionMoreOrLessEquals(Quaternion(-7.21644966e-16, -1.49011612e-07, -1.24344979e-14, -1.24344979e-14)));
      final rotationKey_1_4_7 = channel_1_4.rotationKeys.elementAt(7);
      expect(rotationKey_1_4_7.time, moreOrLessEquals(0.291666657));
      expect(rotationKey_1_4_7.value, quaternionMoreOrLessEquals(Quaternion(-1.11022302e-15, -1.49011612e-07, -1.13242749e-14, -1.13242749e-14)));
      final rotationKey_1_4_8 = channel_1_4.rotationKeys.elementAt(8);
      expect(rotationKey_1_4_8.time, moreOrLessEquals(0.333333343));
      expect(rotationKey_1_4_8.value, quaternionMoreOrLessEquals(Quaternion(-4.4408921e-16, -1.49011598e-07, -1.1324274e-14, -1.1324274e-14)));
      final rotationKey_1_4_9 = channel_1_4.rotationKeys.elementAt(9);
      expect(rotationKey_1_4_9.time, moreOrLessEquals(0.375));
      expect(rotationKey_1_4_9.value, quaternionMoreOrLessEquals(Quaternion(-1.66533454e-15, -1.49011612e-07, -1.07691633e-14, -1.07691633e-14)));
      final rotationKey_1_4_10 = channel_1_4.rotationKeys.elementAt(10);
      expect(rotationKey_1_4_10.time, moreOrLessEquals(0.416666657));
      expect(rotationKey_1_4_10.value, quaternionMoreOrLessEquals(Quaternion(0, -1.50995803e-07, -1.13998658e-14, -1.13998658e-14)));
      final rotationKey_1_4_11 = channel_1_4.rotationKeys.elementAt(11);
      expect(rotationKey_1_4_11.time, moreOrLessEquals(0.458333343));
      expect(rotationKey_1_4_11.value, quaternionMoreOrLessEquals(Quaternion(0, -1.63912773e-07, -1.1116108e-14, -1.1116108e-14)));
      final rotationKey_1_4_12 = channel_1_4.rotationKeys.elementAt(12);
      expect(rotationKey_1_4_12.time, moreOrLessEquals(0.5));
      expect(rotationKey_1_4_12.value, quaternionMoreOrLessEquals(Quaternion(-4.44089422e-16, -1.49011612e-07, -9.88098492e-15, -9.88098492e-15)));
      final rotationKey_1_4_13 = channel_1_4.rotationKeys.elementAt(13);
      expect(rotationKey_1_4_13.time, moreOrLessEquals(0.541666687));
      expect(rotationKey_1_4_13.value, quaternionMoreOrLessEquals(Quaternion(3.55271326e-15, -1.34110451e-07, -1.19904087e-14, -1.19904087e-14)));
      final rotationKey_1_4_14 = channel_1_4.rotationKeys.elementAt(14);
      expect(rotationKey_1_4_14.time, moreOrLessEquals(0.583333313));
      expect(rotationKey_1_4_14.value, quaternionMoreOrLessEquals(Quaternion(-2.22044605e-15, -1.49011626e-07, -1.11022311e-14, -1.11022311e-14)));
      final rotationKey_1_4_15 = channel_1_4.rotationKeys.elementAt(15);
      expect(rotationKey_1_4_15.time, moreOrLessEquals(0.625));
      expect(rotationKey_1_4_15.value, quaternionMoreOrLessEquals(Quaternion(-3.55271326e-15, -1.50995788e-07, -1.13998658e-14, -1.13998658e-14)));
      final rotationKey_1_4_16 = channel_1_4.rotationKeys.elementAt(16);
      expect(rotationKey_1_4_16.time, moreOrLessEquals(0.666666687));
      expect(rotationKey_1_4_16.value, quaternionMoreOrLessEquals(Quaternion(-2.77555777e-15, -1.49011626e-07, -1.13242757e-14, -1.13242757e-14)));
      final rotationKey_1_4_17 = channel_1_4.rotationKeys.elementAt(17);
      expect(rotationKey_1_4_17.time, moreOrLessEquals(0.708333313));
      expect(rotationKey_1_4_17.value, quaternionMoreOrLessEquals(Quaternion(4.44089104e-16, -1.49011598e-07, -1.33226754e-14, -1.33226754e-14)));
      final rotationKey_1_4_18 = channel_1_4.rotationKeys.elementAt(18);
      expect(rotationKey_1_4_18.time, moreOrLessEquals(0.75));
      expect(rotationKey_1_4_18.value, quaternionMoreOrLessEquals(Quaternion(0, -1.49011626e-07, -1.02140518e-14, -1.02140518e-14)));
      final rotationKey_1_4_19 = channel_1_4.rotationKeys.elementAt(19);
      expect(rotationKey_1_4_19.time, moreOrLessEquals(0.791666687));
      expect(rotationKey_1_4_19.value, quaternionMoreOrLessEquals(Quaternion(1.99840144e-15, -1.45286322e-07, -1.0658141e-14, -1.0658141e-14)));
      final rotationKey_1_4_20 = channel_1_4.rotationKeys.elementAt(20);
      expect(rotationKey_1_4_20.time, moreOrLessEquals(0.833333313));
      expect(rotationKey_1_4_20.value, quaternionMoreOrLessEquals(Quaternion(3.80503082e-22, -1.50995803e-07, -1.13998658e-14, -1.13998658e-14)));
      expect(channel_1_4.scalingKeys.length, equals(21));
      final scalingKey_1_4_0 = channel_1_4.scalingKeys.elementAt(0);
      expect(scalingKey_1_4_0.time, isZero);
      expect(scalingKey_1_4_0.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_1_4_1 = channel_1_4.scalingKeys.elementAt(1);
      expect(scalingKey_1_4_1.time, moreOrLessEquals(0.0416666679));
      expect(scalingKey_1_4_1.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_1_4_2 = channel_1_4.scalingKeys.elementAt(2);
      expect(scalingKey_1_4_2.time, moreOrLessEquals(0.0833333358));
      expect(scalingKey_1_4_2.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_1_4_3 = channel_1_4.scalingKeys.elementAt(3);
      expect(scalingKey_1_4_3.time, moreOrLessEquals(0.125));
      expect(scalingKey_1_4_3.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_1_4_4 = channel_1_4.scalingKeys.elementAt(4);
      expect(scalingKey_1_4_4.time, moreOrLessEquals(0.166666672));
      expect(scalingKey_1_4_4.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_1_4_5 = channel_1_4.scalingKeys.elementAt(5);
      expect(scalingKey_1_4_5.time, moreOrLessEquals(0.208333328));
      expect(scalingKey_1_4_5.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_1_4_6 = channel_1_4.scalingKeys.elementAt(6);
      expect(scalingKey_1_4_6.time, moreOrLessEquals(0.25));
      expect(scalingKey_1_4_6.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_1_4_7 = channel_1_4.scalingKeys.elementAt(7);
      expect(scalingKey_1_4_7.time, moreOrLessEquals(0.291666657));
      expect(scalingKey_1_4_7.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_1_4_8 = channel_1_4.scalingKeys.elementAt(8);
      expect(scalingKey_1_4_8.time, moreOrLessEquals(0.333333343));
      expect(scalingKey_1_4_8.value, vector3MoreOrLessEquals(Vector3(1.00000012, 1, 1.00000012)));
      final scalingKey_1_4_9 = channel_1_4.scalingKeys.elementAt(9);
      expect(scalingKey_1_4_9.time, moreOrLessEquals(0.375));
      expect(scalingKey_1_4_9.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_1_4_10 = channel_1_4.scalingKeys.elementAt(10);
      expect(scalingKey_1_4_10.time, moreOrLessEquals(0.416666657));
      expect(scalingKey_1_4_10.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_1_4_11 = channel_1_4.scalingKeys.elementAt(11);
      expect(scalingKey_1_4_11.time, moreOrLessEquals(0.458333343));
      expect(scalingKey_1_4_11.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_1_4_12 = channel_1_4.scalingKeys.elementAt(12);
      expect(scalingKey_1_4_12.time, moreOrLessEquals(0.5));
      expect(scalingKey_1_4_12.value, vector3MoreOrLessEquals(Vector3(1, 1, 1.00000012)));
      final scalingKey_1_4_13 = channel_1_4.scalingKeys.elementAt(13);
      expect(scalingKey_1_4_13.time, moreOrLessEquals(0.541666687));
      expect(scalingKey_1_4_13.value, vector3MoreOrLessEquals(Vector3(1, 1, 1.00000012)));
      final scalingKey_1_4_14 = channel_1_4.scalingKeys.elementAt(14);
      expect(scalingKey_1_4_14.time, moreOrLessEquals(0.583333313));
      expect(scalingKey_1_4_14.value, vector3MoreOrLessEquals(Vector3(0.99999994, 1, 0.99999994)));
      final scalingKey_1_4_15 = channel_1_4.scalingKeys.elementAt(15);
      expect(scalingKey_1_4_15.time, moreOrLessEquals(0.625));
      expect(scalingKey_1_4_15.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_1_4_16 = channel_1_4.scalingKeys.elementAt(16);
      expect(scalingKey_1_4_16.time, moreOrLessEquals(0.666666687));
      expect(scalingKey_1_4_16.value, vector3MoreOrLessEquals(Vector3(0.99999994, 1, 0.99999994)));
      final scalingKey_1_4_17 = channel_1_4.scalingKeys.elementAt(17);
      expect(scalingKey_1_4_17.time, moreOrLessEquals(0.708333313));
      expect(scalingKey_1_4_17.value, vector3MoreOrLessEquals(Vector3(1.00000012, 1, 1.00000012)));
      final scalingKey_1_4_18 = channel_1_4.scalingKeys.elementAt(18);
      expect(scalingKey_1_4_18.time, moreOrLessEquals(0.75));
      expect(scalingKey_1_4_18.value, vector3MoreOrLessEquals(Vector3(0.99999994, 1, 0.99999994)));
      final scalingKey_1_4_19 = channel_1_4.scalingKeys.elementAt(19);
      expect(scalingKey_1_4_19.time, moreOrLessEquals(0.791666687));
      expect(scalingKey_1_4_19.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_1_4_20 = channel_1_4.scalingKeys.elementAt(20);
      expect(scalingKey_1_4_20.time, moreOrLessEquals(0.833333313));
      expect(scalingKey_1_4_20.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      expect(channel_1_4.preState, equals(AnimBehavior.defaults));
      expect(channel_1_4.postState, equals(AnimBehavior.defaults));
      final  channel_1_5 = animation_1.channels.elementAt(5);
      expect(channel_1_5.positionKeys.length, equals(21));
      final positionKey_1_5_0 = channel_1_5.positionKeys.elementAt(0);
      expect(positionKey_1_5_0.time, isZero);
      expect(positionKey_1_5_0.value, vector3MoreOrLessEquals(Vector3(-3.38813179e-21, 2, -2.8421723e-14)));
      final positionKey_1_5_1 = channel_1_5.positionKeys.elementAt(1);
      expect(positionKey_1_5_1.time, moreOrLessEquals(0.0416666679));
      expect(positionKey_1_5_1.value, vector3MoreOrLessEquals(Vector3(4.54273934e-15, 1.99999976, -6.11176013e-14)));
      final positionKey_1_5_2 = channel_1_5.positionKeys.elementAt(2);
      expect(positionKey_1_5_2.time, moreOrLessEquals(0.0833333358));
      expect(positionKey_1_5_2.value, vector3MoreOrLessEquals(Vector3(-3.69379887e-15, 2, 1.97102991e-14)));
      final positionKey_1_5_3 = channel_1_5.positionKeys.elementAt(3);
      expect(positionKey_1_5_3.time, moreOrLessEquals(0.125));
      expect(positionKey_1_5_3.value, vector3MoreOrLessEquals(Vector3(-2.52173652e-14, 1.99999976, 1.27556665e-14)));
      final positionKey_1_5_4 = channel_1_5.positionKeys.elementAt(4);
      expect(positionKey_1_5_4.time, moreOrLessEquals(0.166666672));
      expect(positionKey_1_5_4.value, vector3MoreOrLessEquals(Vector3(-5.46422377e-14, 2, -8.79819644e-15)));
      final positionKey_1_5_5 = channel_1_5.positionKeys.elementAt(5);
      expect(positionKey_1_5_5.time, moreOrLessEquals(0.208333328));
      expect(positionKey_1_5_5.value, vector3MoreOrLessEquals(Vector3(-2.03287907e-20, 1.99999976, -1.42109123e-14)));
      final positionKey_1_5_6 = channel_1_5.positionKeys.elementAt(6);
      expect(positionKey_1_5_6.time, moreOrLessEquals(0.25));
      expect(positionKey_1_5_6.value, vector3MoreOrLessEquals(Vector3(1.59872116e-14, 1.99999976, -3.55271368e-15)));
      final positionKey_1_5_7 = channel_1_5.positionKeys.elementAt(7);
      expect(positionKey_1_5_7.time, moreOrLessEquals(0.291666657));
      expect(positionKey_1_5_7.value, vector3MoreOrLessEquals(Vector3(-4.4408921e-15, 2.00000024, 2.13162821e-14)));
      final positionKey_1_5_8 = channel_1_5.positionKeys.elementAt(8);
      expect(positionKey_1_5_8.time, moreOrLessEquals(0.333333343));
      expect(positionKey_1_5_8.value, vector3MoreOrLessEquals(Vector3(1.33226763e-14, 1.99999976, -1.0658141e-14)));
      final positionKey_1_5_9 = channel_1_5.positionKeys.elementAt(9);
      expect(positionKey_1_5_9.time, moreOrLessEquals(0.375));
      expect(positionKey_1_5_9.value, vector3MoreOrLessEquals(Vector3(1.33226763e-15, 2.00000024, -2.30926389e-14)));
      final positionKey_1_5_10 = channel_1_5.positionKeys.elementAt(10);
      expect(positionKey_1_5_10.time, moreOrLessEquals(0.416666657));
      expect(positionKey_1_5_10.value, vector3MoreOrLessEquals(Vector3(-1.01643954e-20, 2, 2.84216942e-14)));
      final positionKey_1_5_11 = channel_1_5.positionKeys.elementAt(11);
      expect(positionKey_1_5_11.time, moreOrLessEquals(0.458333343));
      expect(positionKey_1_5_11.value, vector3MoreOrLessEquals(Vector3(5.6066267e-15, 2, -7.10542736e-15)));
      final positionKey_1_5_12 = channel_1_5.positionKeys.elementAt(12);
      expect(positionKey_1_5_12.time, moreOrLessEquals(0.5));
      expect(positionKey_1_5_12.value, vector3MoreOrLessEquals(Vector3(9.32587341e-15, 2.00000024, -7.10542736e-14)));
      final positionKey_1_5_13 = channel_1_5.positionKeys.elementAt(13);
      expect(positionKey_1_5_13.time, moreOrLessEquals(0.541666687));
      expect(positionKey_1_5_13.value, vector3MoreOrLessEquals(Vector3(-5.32907052e-15, 1.99999976, -3.55271368e-14)));
      final positionKey_1_5_14 = channel_1_5.positionKeys.elementAt(14);
      expect(positionKey_1_5_14.time, moreOrLessEquals(0.583333313));
      expect(positionKey_1_5_14.value, vector3MoreOrLessEquals(Vector3(3.55271368e-15, 2, -4.26325641e-14)));
      final positionKey_1_5_15 = channel_1_5.positionKeys.elementAt(15);
      expect(positionKey_1_5_15.time, moreOrLessEquals(0.625));
      expect(positionKey_1_5_15.value, vector3MoreOrLessEquals(Vector3(-1.69406579e-21, 1.99999976, -2.84217027e-14)));
      final positionKey_1_5_16 = channel_1_5.positionKeys.elementAt(16);
      expect(positionKey_1_5_16.time, moreOrLessEquals(0.666666687));
      expect(positionKey_1_5_16.value, vector3MoreOrLessEquals(Vector3(-1.42108547e-14, 2.00000024, 1.24344979e-14)));
      final positionKey_1_5_17 = channel_1_5.positionKeys.elementAt(17);
      expect(positionKey_1_5_17.time, moreOrLessEquals(0.708333313));
      expect(positionKey_1_5_17.value, vector3MoreOrLessEquals(Vector3(2.13162821e-14, 2, -7.10542736e-14)));
      final positionKey_1_5_18 = channel_1_5.positionKeys.elementAt(18);
      expect(positionKey_1_5_18.time, moreOrLessEquals(0.75));
      expect(positionKey_1_5_18.value, vector3MoreOrLessEquals(Vector3(0, 2.00000024, 0)));
      final positionKey_1_5_19 = channel_1_5.positionKeys.elementAt(19);
      expect(positionKey_1_5_19.time, moreOrLessEquals(0.791666687));
      expect(positionKey_1_5_19.value, vector3MoreOrLessEquals(Vector3(7.10542736e-14, 1.99999976, 2.13162821e-14)));
      final positionKey_1_5_20 = channel_1_5.positionKeys.elementAt(20);
      expect(positionKey_1_5_20.time, moreOrLessEquals(0.833333313));
      expect(positionKey_1_5_20.value, vector3MoreOrLessEquals(Vector3(8.47032866e-21, 2, -4.65868121e-21)));
      expect(channel_1_5.rotationKeys.length, equals(21));
      final rotationKey_1_5_0 = channel_1_5.rotationKeys.elementAt(0);
      expect(rotationKey_1_5_0.time, isZero);
      expect(rotationKey_1_5_0.value, quaternionMoreOrLessEquals(Quaternion(-0.707106709, -1.06770152e-07, -1.06770159e-07, -1.06770159e-07)));
      final rotationKey_1_5_1 = channel_1_5.rotationKeys.elementAt(1);
      expect(rotationKey_1_5_1.time, moreOrLessEquals(0.0416666679));
      expect(rotationKey_1_5_1.value, quaternionMoreOrLessEquals(Quaternion(-0.707106709, -1.05367114e-07, -1.05367121e-07, -1.05367121e-07)));
      final rotationKey_1_5_2 = channel_1_5.rotationKeys.elementAt(2);
      expect(rotationKey_1_5_2.time, moreOrLessEquals(0.0833333358));
      expect(rotationKey_1_5_2.value, quaternionMoreOrLessEquals(Quaternion(-0.707106709, -1.05367114e-07, -1.05367121e-07, -1.05367121e-07)));
      final rotationKey_1_5_3 = channel_1_5.rotationKeys.elementAt(3);
      expect(rotationKey_1_5_3.time, moreOrLessEquals(0.125));
      expect(rotationKey_1_5_3.value, quaternionMoreOrLessEquals(Quaternion(-0.707106709, -1.05367114e-07, -1.05367121e-07, -1.05367121e-07)));
      final rotationKey_1_5_4 = channel_1_5.rotationKeys.elementAt(4);
      expect(rotationKey_1_5_4.time, moreOrLessEquals(0.166666672));
      expect(rotationKey_1_5_4.value, quaternionMoreOrLessEquals(Quaternion(-0.707106709, -1.05367114e-07, -1.05367121e-07, -1.05367121e-07)));
      final rotationKey_1_5_5 = channel_1_5.rotationKeys.elementAt(5);
      expect(rotationKey_1_5_5.time, moreOrLessEquals(0.208333328));
      expect(rotationKey_1_5_5.value, quaternionMoreOrLessEquals(Quaternion(-0.707106709, -1.06770152e-07, -1.06770152e-07, -1.06770152e-07)));
      final rotationKey_1_5_6 = channel_1_5.rotationKeys.elementAt(6);
      expect(rotationKey_1_5_6.time, moreOrLessEquals(0.25));
      expect(rotationKey_1_5_6.value, quaternionMoreOrLessEquals(Quaternion(-0.707106709, -1.05367114e-07, -1.05367121e-07, -1.05367121e-07)));
      final rotationKey_1_5_7 = channel_1_5.rotationKeys.elementAt(7);
      expect(rotationKey_1_5_7.time, moreOrLessEquals(0.291666657));
      expect(rotationKey_1_5_7.value, quaternionMoreOrLessEquals(Quaternion(-0.707106709, -1.05367114e-07, -1.05367135e-07, -1.05367135e-07)));
      final rotationKey_1_5_8 = channel_1_5.rotationKeys.elementAt(8);
      expect(rotationKey_1_5_8.time, moreOrLessEquals(0.333333343));
      expect(rotationKey_1_5_8.value, quaternionMoreOrLessEquals(Quaternion(-0.707106709, -1.05367107e-07, -1.05367114e-07, -1.05367114e-07)));
      final rotationKey_1_5_9 = channel_1_5.rotationKeys.elementAt(9);
      expect(rotationKey_1_5_9.time, moreOrLessEquals(0.375));
      expect(rotationKey_1_5_9.value, quaternionMoreOrLessEquals(Quaternion(-0.707106709, -1.05367114e-07, -1.05367121e-07, -1.05367121e-07)));
      final rotationKey_1_5_10 = channel_1_5.rotationKeys.elementAt(10);
      expect(rotationKey_1_5_10.time, moreOrLessEquals(0.416666657));
      expect(rotationKey_1_5_10.value, quaternionMoreOrLessEquals(Quaternion(-0.707106709, -1.06770152e-07, -1.06770159e-07, -1.06770159e-07)));
      final rotationKey_1_5_11 = channel_1_5.rotationKeys.elementAt(11);
      expect(rotationKey_1_5_11.time, moreOrLessEquals(0.458333343));
      expect(rotationKey_1_5_11.value, quaternionMoreOrLessEquals(Quaternion(-0.707106709, -1.15903823e-07, -1.15903838e-07, -1.15903838e-07)));
      final rotationKey_1_5_12 = channel_1_5.rotationKeys.elementAt(12);
      expect(rotationKey_1_5_12.time, moreOrLessEquals(0.5));
      expect(rotationKey_1_5_12.value, quaternionMoreOrLessEquals(Quaternion(-0.707106709, -1.05367114e-07, -1.05367114e-07, -1.05367114e-07)));
      final rotationKey_1_5_13 = channel_1_5.rotationKeys.elementAt(13);
      expect(rotationKey_1_5_13.time, moreOrLessEquals(0.541666687));
      expect(rotationKey_1_5_13.value, quaternionMoreOrLessEquals(Quaternion(-0.707106709, -9.48304049e-08, -9.48304049e-08, -9.48304049e-08)));
      final rotationKey_1_5_14 = channel_1_5.rotationKeys.elementAt(14);
      expect(rotationKey_1_5_14.time, moreOrLessEquals(0.583333313));
      expect(rotationKey_1_5_14.value, quaternionMoreOrLessEquals(Quaternion(-0.707106709, -1.05367121e-07, -1.05367135e-07, -1.05367135e-07)));
      final rotationKey_1_5_15 = channel_1_5.rotationKeys.elementAt(15);
      expect(rotationKey_1_5_15.time, moreOrLessEquals(0.625));
      expect(rotationKey_1_5_15.value, quaternionMoreOrLessEquals(Quaternion(-0.707106709, -1.06770138e-07, -1.06770152e-07, -1.06770152e-07)));
      final rotationKey_1_5_16 = channel_1_5.rotationKeys.elementAt(16);
      expect(rotationKey_1_5_16.time, moreOrLessEquals(0.666666687));
      expect(rotationKey_1_5_16.value, quaternionMoreOrLessEquals(Quaternion(-0.707106709, -1.05367121e-07, -1.05367135e-07, -1.05367135e-07)));
      final rotationKey_1_5_17 = channel_1_5.rotationKeys.elementAt(17);
      expect(rotationKey_1_5_17.time, moreOrLessEquals(0.708333313));
      expect(rotationKey_1_5_17.value, quaternionMoreOrLessEquals(Quaternion(-0.707106709, -1.05367107e-07, -1.05367114e-07, -1.05367114e-07)));
      final rotationKey_1_5_18 = channel_1_5.rotationKeys.elementAt(18);
      expect(rotationKey_1_5_18.time, moreOrLessEquals(0.75));
      expect(rotationKey_1_5_18.value, quaternionMoreOrLessEquals(Quaternion(-0.707106709, -1.05367121e-07, -1.05367135e-07, -1.05367135e-07)));
      final rotationKey_1_5_19 = channel_1_5.rotationKeys.elementAt(19);
      expect(rotationKey_1_5_19.time, moreOrLessEquals(0.791666687));
      expect(rotationKey_1_5_19.value, quaternionMoreOrLessEquals(Quaternion(-0.707106709, -1.02732933e-07, -1.02732947e-07, -1.02732947e-07)));
      final rotationKey_1_5_20 = channel_1_5.rotationKeys.elementAt(20);
      expect(rotationKey_1_5_20.time, moreOrLessEquals(0.833333313));
      expect(rotationKey_1_5_20.value, quaternionMoreOrLessEquals(Quaternion(-0.707106709, -1.06770152e-07, -1.06770159e-07, -1.06770159e-07)));
      expect(channel_1_5.scalingKeys.length, equals(21));
      final scalingKey_1_5_0 = channel_1_5.scalingKeys.elementAt(0);
      expect(scalingKey_1_5_0.time, isZero);
      expect(scalingKey_1_5_0.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_1_5_1 = channel_1_5.scalingKeys.elementAt(1);
      expect(scalingKey_1_5_1.time, moreOrLessEquals(0.0416666679));
      expect(scalingKey_1_5_1.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_1_5_2 = channel_1_5.scalingKeys.elementAt(2);
      expect(scalingKey_1_5_2.time, moreOrLessEquals(0.0833333358));
      expect(scalingKey_1_5_2.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_1_5_3 = channel_1_5.scalingKeys.elementAt(3);
      expect(scalingKey_1_5_3.time, moreOrLessEquals(0.125));
      expect(scalingKey_1_5_3.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_1_5_4 = channel_1_5.scalingKeys.elementAt(4);
      expect(scalingKey_1_5_4.time, moreOrLessEquals(0.166666672));
      expect(scalingKey_1_5_4.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_1_5_5 = channel_1_5.scalingKeys.elementAt(5);
      expect(scalingKey_1_5_5.time, moreOrLessEquals(0.208333328));
      expect(scalingKey_1_5_5.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_1_5_6 = channel_1_5.scalingKeys.elementAt(6);
      expect(scalingKey_1_5_6.time, moreOrLessEquals(0.25));
      expect(scalingKey_1_5_6.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_1_5_7 = channel_1_5.scalingKeys.elementAt(7);
      expect(scalingKey_1_5_7.time, moreOrLessEquals(0.291666657));
      expect(scalingKey_1_5_7.value, vector3MoreOrLessEquals(Vector3(1, 0.99999994, 1)));
      final scalingKey_1_5_8 = channel_1_5.scalingKeys.elementAt(8);
      expect(scalingKey_1_5_8.time, moreOrLessEquals(0.333333343));
      expect(scalingKey_1_5_8.value, vector3MoreOrLessEquals(Vector3(1.00000012, 1.00000012, 1)));
      final scalingKey_1_5_9 = channel_1_5.scalingKeys.elementAt(9);
      expect(scalingKey_1_5_9.time, moreOrLessEquals(0.375));
      expect(scalingKey_1_5_9.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_1_5_10 = channel_1_5.scalingKeys.elementAt(10);
      expect(scalingKey_1_5_10.time, moreOrLessEquals(0.416666657));
      expect(scalingKey_1_5_10.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_1_5_11 = channel_1_5.scalingKeys.elementAt(11);
      expect(scalingKey_1_5_11.time, moreOrLessEquals(0.458333343));
      expect(scalingKey_1_5_11.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_1_5_12 = channel_1_5.scalingKeys.elementAt(12);
      expect(scalingKey_1_5_12.time, moreOrLessEquals(0.5));
      expect(scalingKey_1_5_12.value, vector3MoreOrLessEquals(Vector3(1, 1.00000012, 1)));
      final scalingKey_1_5_13 = channel_1_5.scalingKeys.elementAt(13);
      expect(scalingKey_1_5_13.time, moreOrLessEquals(0.541666687));
      expect(scalingKey_1_5_13.value, vector3MoreOrLessEquals(Vector3(1, 1.00000012, 1)));
      final scalingKey_1_5_14 = channel_1_5.scalingKeys.elementAt(14);
      expect(scalingKey_1_5_14.time, moreOrLessEquals(0.583333313));
      expect(scalingKey_1_5_14.value, vector3MoreOrLessEquals(Vector3(0.99999994, 0.99999994, 1)));
      final scalingKey_1_5_15 = channel_1_5.scalingKeys.elementAt(15);
      expect(scalingKey_1_5_15.time, moreOrLessEquals(0.625));
      expect(scalingKey_1_5_15.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_1_5_16 = channel_1_5.scalingKeys.elementAt(16);
      expect(scalingKey_1_5_16.time, moreOrLessEquals(0.666666687));
      expect(scalingKey_1_5_16.value, vector3MoreOrLessEquals(Vector3(0.99999994, 0.99999994, 1)));
      final scalingKey_1_5_17 = channel_1_5.scalingKeys.elementAt(17);
      expect(scalingKey_1_5_17.time, moreOrLessEquals(0.708333313));
      expect(scalingKey_1_5_17.value, vector3MoreOrLessEquals(Vector3(1.00000012, 1.00000012, 1)));
      final scalingKey_1_5_18 = channel_1_5.scalingKeys.elementAt(18);
      expect(scalingKey_1_5_18.time, moreOrLessEquals(0.75));
      expect(scalingKey_1_5_18.value, vector3MoreOrLessEquals(Vector3(0.99999994, 0.99999994, 1)));
      final scalingKey_1_5_19 = channel_1_5.scalingKeys.elementAt(19);
      expect(scalingKey_1_5_19.time, moreOrLessEquals(0.791666687));
      expect(scalingKey_1_5_19.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      final scalingKey_1_5_20 = channel_1_5.scalingKeys.elementAt(20);
      expect(scalingKey_1_5_20.time, moreOrLessEquals(0.833333313));
      expect(scalingKey_1_5_20.value, vector3MoreOrLessEquals(Vector3(1, 1, 1)));
      expect(channel_1_5.preState, equals(AnimBehavior.defaults));
      expect(channel_1_5.postState, equals(AnimBehavior.defaults));
      expect(animation_1.meshChannels.length, isZero);
      expect(animation_1.meshMorphChannels.length, isZero);
    });
  });

  test('obj', () {
    testScene('spider.obj', (scene) {
      final animations = scene.animations;
      expect(animations, isEmpty);
      expect(animations.length, isZero);
    });
  });

}
