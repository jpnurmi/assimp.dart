import 'dart:ffi';
import 'dart:typed_data';
import 'package:ffi/ffi.dart';
import 'package:test/test.dart';
import 'package:assimp/assimp.dart';
import 'package:assimp/src/bindings.dart';
import 'test_utils.dart';

// DO NOT EDIT (generated by tool/testgen)

void main() {
  prepareTest();

  test('size', () {
    expect(sizeOf<aiMemoryInfo>(), equals(32));
  });

  test('equals', () {
    final a = MemoryInfo.fromNative(calloc<aiMemoryInfo>());
    final b = MemoryInfo.fromNative(calloc<aiMemoryInfo>());
    expect(a, equals(a));
    expect(b, equals(b));
    expect(a, isNot(equals(b)));
    expect(b, isNot(equals(a)));
  });

  test('toString', () {
    expect(MemoryInfo.fromNative(calloc<aiMemoryInfo>()).toString(), matches(r'MemoryInfo\(Pointer<aiMemoryInfo>: address=0x[0-f]+\)'));
  });

  test('3mf', () {
    testScene('box.3mf', (scene) {
      final mem = MemoryInfo.fromScene(scene);
      expect(mem, isNotNull);
      expect(mem.textures, isZero);
      expect(mem.materials, equals(88));
      expect(mem.meshes, equals(1744));
      expect(mem.nodes, equals(2300));
      expect(mem.animations, isZero);
      expect(mem.cameras, isZero);
      expect(mem.lights, isZero);
      expect(mem.total, equals(4260));
    });
    testScene('spider.3mf', (scene) {
      final mem = MemoryInfo.fromScene(scene);
      expect(mem, isNotNull);
      expect(mem.textures, isZero);
      expect(mem.materials, equals(287));
      expect(mem.meshes, equals(80980));
      expect(mem.nodes, equals(23108));
      expect(mem.animations, isZero);
      expect(mem.cameras, isZero);
      expect(mem.lights, isZero);
      expect(mem.total, equals(104503));
    });
  });

  test('fbx', () {
    testScene('huesitos.fbx', (scene) {
      final mem = MemoryInfo.fromScene(scene);
      expect(mem, isNotNull);
      expect(mem.textures, isZero);
      expect(mem.materials, equals(301));
      expect(mem.meshes, equals(33736));
      expect(mem.nodes, equals(18428));
      expect(mem.animations, equals(13336));
      expect(mem.cameras, equals(1080));
      expect(mem.lights, equals(1132));
      expect(mem.total, equals(68141));
    });
  });

  test('collada', () {
    testScene('anims.dae', (scene) {
      final mem = MemoryInfo.fromScene(scene);
      expect(mem, isNotNull);
      expect(mem.textures, isZero);
      expect(mem.materials, equals(88));
      expect(mem.meshes, equals(150016));
      expect(mem.nodes, equals(148856));
      expect(mem.animations, equals(93256));
      expect(mem.cameras, isZero);
      expect(mem.lights, isZero);
      expect(mem.total, equals(392344));
    });
    testScene('lib.dae', (scene) {
      final mem = MemoryInfo.fromScene(scene);
      expect(mem, isNotNull);
      expect(mem.textures, isZero);
      expect(mem.materials, equals(293));
      expect(mem.meshes, equals(13240));
      expect(mem.nodes, equals(9212));
      expect(mem.animations, equals(30704));
      expect(mem.cameras, isZero);
      expect(mem.lights, isZero);
      expect(mem.total, equals(53577));
    });
  });

  test('obj', () {
    testScene('spider.obj', (scene) {
      final mem = MemoryInfo.fromScene(scene);
      expect(mem, isNotNull);
      expect(mem.textures, isZero);
      expect(mem.materials, equals(1642));
      expect(mem.meshes, equals(210976));
      expect(mem.nodes, equals(23108));
      expect(mem.animations, isZero);
      expect(mem.cameras, isZero);
      expect(mem.lights, isZero);
      expect(mem.total, equals(235854));
    });
  });

}
